<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:MyNet.Wpf.Converters"
                    xmlns:me="clr-namespace:MyNet.Wpf.MarkupExtensions"
                    xmlns:p="clr-namespace:MyNet.Wpf.Parameters"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Bases.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <sys:Double x:Key="FallBackValueZero">0</sys:Double>
    <Size x:Key="FallBackValueSize" Width="0" Height="0" />
    <Point x:Key="FallBackValuePoint" X="0" Y="0" />

    <Style x:Key="MyNet.Styles.ProgressBar.Linear" TargetType="{x:Type ProgressBar}">
        <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Control.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Primary}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
        <Setter Property="Height" Value="15" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnLoaded">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TemplateRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TemplateRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TemplateRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnLoadedNoAnimation">
                            <DoubleAnimation Storyboard.TargetName="TemplateRoot"
                                             Storyboard.TargetProperty="(UIElement.Opacity)"
                                             To="1"
                                             Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="TemplateRoot"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                             To="1"
                                             Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="TemplateRoot"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                             To="1"
                                             Duration="0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="TemplateRoot" Opacity="0" RenderTransformOrigin="0,0.5">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0" ScaleY="0" />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding p:ThemeAssist.CornerRadius}" />
                        <Rectangle x:Name="PART_Track" />
                        <ContentControl x:Name="Value"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        ContentStringFormat="{Binding Path=(p:ProgressBarAssist.ContentStringFormat), RelativeSource={RelativeSource TemplatedParent}}"
                                        ContentTemplate="{Binding Path=(p:ProgressBarAssist.ContentTemplate), RelativeSource={RelativeSource TemplatedParent}}"
                                        FontSize="{TemplateBinding FontSize}"
                                        FontStyle="{TemplateBinding FontStyle}"
                                        FontWeight="{TemplateBinding FontWeight}"
                                        Foreground="{TemplateBinding Foreground}"
                                        Visibility="Collapsed">
                            <ContentControl.Content>
                                <MultiBinding Converter="{x:Static c:MathConverter.Divide}">
                                    <Binding Path="Value" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                    <Binding Path="Maximum" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                </MultiBinding>
                            </ContentControl.Content>
                        </ContentControl>
                        <Grid x:Name="PART_Indicator" HorizontalAlignment="Left" ClipToBounds="true">
                            <Border x:Name="Animation"
                                    Background="{TemplateBinding BorderBrush}"
                                    CornerRadius="{StaticResource MyNet.CornerRadius.Control}"
                                    RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Border.RenderTransform>
                            </Border>
                            <Border x:Name="Indicator" Background="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding p:ThemeAssist.CornerRadius}">
                                <Border Width="{Binding ActualWidth, ElementName=TemplateRoot}">
                                    <ContentControl x:Name="Value2"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    ContentStringFormat="{Binding Path=(p:ProgressBarAssist.ContentStringFormat), RelativeSource={RelativeSource TemplatedParent}}"
                                                    ContentTemplate="{Binding Path=(p:ProgressBarAssist.ContentTemplate), RelativeSource={RelativeSource TemplatedParent}}"
                                                    FontSize="{TemplateBinding FontSize}"
                                                    FontStyle="{TemplateBinding FontStyle}"
                                                    FontWeight="{TemplateBinding FontWeight}"
                                                    Foreground="{Binding Path=(p:ThemeAssist.IsCheckedForeground), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                    Visibility="Collapsed">
                                        <ContentControl.Content>
                                            <MultiBinding Converter="{x:Static c:MathConverter.Divide}">
                                                <Binding Path="Value" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                                <Binding Path="Maximum" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                            </MultiBinding>
                                        </ContentControl.Content>
                                    </ContentControl>
                                </Border>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="p:TransitionAssist.DisableTransitions" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="BeginStoryboardOnLoadedNoAnimation" Storyboard="{StaticResource OnLoadedNoAnimation}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="BeginStoryboardOnLoadedNoAnimation" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsVisible" Value="True" />
                                <Condition Property="p:TransitionAssist.DisableTransitions" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Name="BeginStoryboardOnLoaded" Storyboard="{StaticResource OnLoaded}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="BeginStoryboardOnLoaded" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsIndeterminate" Value="False" />
                                <Condition Property="p:ProgressBarAssist.ShowValue" Value="True" />
                                <Condition Property="IsVisible" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Value" Property="Visibility" Value="Visible" />
                                <Setter TargetName="Value2" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="p:ProgressBarAssist.ContentStringFormat" Value="P0" />
        <Setter Property="p:ThemeAssist.CornerRadius" Value="{StaticResource MyNet.CornerRadius.Control}" />
        <Setter Property="p:ThemeAssist.IsCheckedForeground" Value="{DynamicResource MyNet.Brushes.Primary.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.ProgressBar.Linear.Accent" TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource MyNet.Styles.ProgressBar.Linear}">
        <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Accent}" />
        <Setter Property="p:ThemeAssist.IsCheckedForeground" Value="{DynamicResource MyNet.Brushes.Accent.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.ProgressBar.Linear.Foreground" TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource MyNet.Styles.ProgressBar.Linear}">
        <Setter Property="Background" Value="{me:BrushBinding InheritPath=(TextElement.Foreground), Opacity={StaticResource MyNet.Opacity.Filled}}" />
        <Setter Property="BorderBrush" Value="{me:BrushBinding InheritPath=(TextElement.Foreground)}" />
        <Setter Property="Foreground" Value="{me:BrushBinding InheritPath=(TextElement.Foreground)}" />
        <Setter Property="p:ThemeAssist.IsCheckedForeground" Value="{me:BrushBinding InheritPath=(TextElement.Foreground), Contrast=True}" />
    </Style>

    <Style x:Key="MyNet.Styles.ProgressBar.Circular" TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource MyNet.Styles.ProgressBar.Linear}">
        <Setter Property="Height" Value="80" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="IsIndeterminateStoryboard"
                                    RepeatBehavior="Forever"
                                    TargetProperty="Angle"
                                    TargetName="RotateTransform">
                            <DoubleAnimation From="0" To="359" Duration="0:0:2" />
                        </Storyboard>
                        <Storyboard x:Key="IsFullyIndeterminateStoryboard">
                            <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetName="FullyIndeterminateGridScaleTransform" Storyboard.TargetProperty="ScaleX">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.0" />
                                <SplineDoubleKeyFrame KeyTime="0:0:1" Value="1.0" />
                                <SplineDoubleKeyFrame KeyTime="0:0:4" Value="0.0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimation RepeatBehavior="Forever"
                                             Storyboard.TargetName="RotateTransform"
                                             Storyboard.TargetProperty="Angle"
                                             From="00"
                                             To="359"
                                             Duration="0:0:1.25" />
                        </Storyboard>

                        <Storyboard x:Key="IsFullyIndeterminateScaleStoryboard2">
                            <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetName="FullyIndeterminateGridScaleTransform2" Storyboard.TargetProperty="ScaleX">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.0" />
                                <SplineDoubleKeyFrame KeyTime="0:0:1" Value="1.0" />
                                <SplineDoubleKeyFrame KeyTime="0:0:4" Value="0.0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimation RepeatBehavior="Forever"
                                             Storyboard.TargetName="RotateTransform2"
                                             Storyboard.TargetProperty="Angle"
                                             From="00"
                                             To="-359"
                                             Duration="0:0:1.5" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>

                        <Canvas>
                            <Path Canvas.Left="2"
                                  Canvas.Top="2"
                                  RenderTransformOrigin="0, 0"
                                  Stroke="{TemplateBinding Background}"
                                  StrokeThickness="{Binding Path=(p:ProgressBarAssist.StrokeThickness), RelativeSource={RelativeSource TemplatedParent}}">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="{Binding ElementName=PathGrid, Path=ActualWidth, FallbackValue={StaticResource FallBackValuePoint}, Converter={x:Static c:ProgressBarStartPointConverter.Default}, Mode=OneWay}">
                                            <ArcSegment Size="{Binding ElementName=PathGrid, Path=ActualWidth, FallbackValue={StaticResource FallBackValueSize}, Converter={x:Static c:ProgressBarArcSizeConverter.Default}, Mode=OneWay}" SweepDirection="Clockwise">
                                                <ArcSegment.Point>
                                                    <MultiBinding Converter="{x:Static c:ProgressBarArcEndPointConverter.Default}" ConverterParameter="{x:Static c:ProgressBarArcEndPointConverter.ParameterMidPoint}">
                                                        <Binding ElementName="PathGrid" FallbackValue="{StaticResource FallBackValueZero}" Path="ActualWidth" />
                                                        <Binding FallbackValue="{StaticResource FallBackValueZero}" Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding FallbackValue="{StaticResource FallBackValueZero}" Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding FallbackValue="{StaticResource FallBackValueZero}" Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                    </MultiBinding>
                                                </ArcSegment.Point>
                                            </ArcSegment>
                                            <ArcSegment Size="{Binding ElementName=PathGrid, Path=ActualWidth, FallbackValue={StaticResource FallBackValueSize}, Converter={x:Static c:ProgressBarArcSizeConverter.Default}, Mode=OneWay}" SweepDirection="Clockwise">
                                                <ArcSegment.Point>
                                                    <MultiBinding Converter="{x:Static c:ProgressBarArcEndPointConverter.Default}">
                                                        <Binding ElementName="PathGrid" FallbackValue="{StaticResource FallBackValueZero}" Path="ActualWidth" />
                                                        <Binding FallbackValue="{StaticResource FallBackValueZero}" Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding FallbackValue="{StaticResource FallBackValueZero}" Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding FallbackValue="{StaticResource FallBackValueZero}" Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                    </MultiBinding>
                                                </ArcSegment.Point>
                                            </ArcSegment>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                        </Canvas>

                        <Grid x:Name="TemplateRoot" ClipToBounds="False">
                            <Grid x:Name="FullyIndeterminateGrid">
                                <Grid.RenderTransform>
                                    <ScaleTransform x:Name="FullyIndeterminateGridScaleTransform" ScaleX="0" />
                                </Grid.RenderTransform>
                            </Grid>
                            <Grid x:Name="FullyIndeterminateGrid2">
                                <Grid.RenderTransform>
                                    <ScaleTransform x:Name="FullyIndeterminateGridScaleTransform2" ScaleX="0" />
                                </Grid.RenderTransform>
                            </Grid>
                            <Grid x:Name="PathGrid" Margin="2" />
                            <Grid x:Name="PathGrid2" Margin="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={x:Static c:DoubleThicknessToConverter.All}}" Tag="{Binding Path=(p:ProgressBarAssist.StrokeThickness), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:MathConverter.Add}, ConverterParameter=4}" />
                            <Canvas>
                                <Path x:Name="Path"
                                      Canvas.Left="2"
                                      Canvas.Top="2"
                                      RenderTransformOrigin="0, 0"
                                      Stroke="{TemplateBinding BorderBrush}"
                                      StrokeThickness="{Binding Path=(p:ProgressBarAssist.StrokeThickness), RelativeSource={RelativeSource TemplatedParent}}">
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathFigure StartPoint="{Binding ElementName=PathGrid, Path=ActualWidth, FallbackValue={StaticResource FallBackValuePoint}, Converter={x:Static c:ProgressBarStartPointConverter.Default}, Mode=OneWay}">
                                                <ArcSegment Size="{Binding ElementName=PathGrid, Path=ActualWidth, FallbackValue={StaticResource FallBackValueSize}, Converter={x:Static c:ProgressBarArcSizeConverter.Default}, Mode=OneWay}" SweepDirection="Clockwise">
                                                    <ArcSegment.Point>
                                                        <MultiBinding Converter="{x:Static c:ProgressBarArcEndPointConverter.Default}" ConverterParameter="{x:Static c:ProgressBarArcEndPointConverter.ParameterMidPoint}">
                                                            <Binding ElementName="PathGrid" FallbackValue="{StaticResource FallBackValueZero}" Path="ActualWidth" />
                                                            <Binding FallbackValue="{StaticResource FallBackValueZero}" Path="Value" RelativeSource="{RelativeSource TemplatedParent}" />
                                                            <Binding FallbackValue="{StaticResource FallBackValueZero}" Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                            <Binding FallbackValue="{StaticResource FallBackValueZero}" Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                            <Binding ElementName="FullyIndeterminateGridScaleTransform" FallbackValue="{StaticResource FallBackValueZero}" Path="ScaleX" />
                                                        </MultiBinding>
                                                    </ArcSegment.Point>
                                                </ArcSegment>
                                                <ArcSegment Size="{Binding ElementName=PathGrid, Path=ActualWidth, FallbackValue={StaticResource FallBackValueSize}, Converter={x:Static c:ProgressBarArcSizeConverter.Default}, Mode=OneWay}" SweepDirection="Clockwise">
                                                    <ArcSegment.Point>
                                                        <MultiBinding Converter="{x:Static c:ProgressBarArcEndPointConverter.Default}">
                                                            <Binding ElementName="PathGrid" FallbackValue="{StaticResource FallBackValueZero}" Path="ActualWidth" />
                                                            <Binding FallbackValue="{StaticResource FallBackValueZero}" Path="Value" RelativeSource="{RelativeSource TemplatedParent}" />
                                                            <Binding FallbackValue="{StaticResource FallBackValueZero}" Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                            <Binding FallbackValue="{StaticResource FallBackValueZero}" Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                            <Binding ElementName="FullyIndeterminateGridScaleTransform" FallbackValue="{StaticResource FallBackValueZero}" Path="ScaleX" />
                                                        </MultiBinding>
                                                    </ArcSegment.Point>
                                                </ArcSegment>
                                            </PathFigure>
                                        </PathGeometry>
                                    </Path.Data>
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform x:Name="RotateTransform" CenterX="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={x:Static c:ProgressBarRotateTransformCentreConverter.Default}, Mode=OneWay}" CenterY="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={x:Static c:ProgressBarRotateTransformCentreConverter.Default}, Mode=OneWay}" />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Canvas>

                            <Canvas Opacity="{StaticResource MyNet.Opacity.Secondary}">
                                <Path x:Name="Path2"
                                      Canvas.Left="{Binding Path=(p:ProgressBarAssist.StrokeThickness), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:MathConverter.Add}, ConverterParameter=4}"
                                      Canvas.Top="{Binding Path=(p:ProgressBarAssist.StrokeThickness), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:MathConverter.Add}, ConverterParameter=4}"
                                      RenderTransformOrigin="0, 0"
                                      Stroke="{TemplateBinding BorderBrush}"
                                      StrokeThickness="{Binding Path=(p:ProgressBarAssist.StrokeThickness), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:MathConverter.Divide}, ConverterParameter=1.5}">
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathFigure StartPoint="{Binding ElementName=PathGrid2, Path=ActualWidth, FallbackValue={StaticResource FallBackValuePoint}, Converter={x:Static c:ProgressBarStartPointConverter.Default}, Mode=OneWay}">
                                                <ArcSegment Size="{Binding ElementName=PathGrid2, Path=ActualWidth, FallbackValue={StaticResource FallBackValueSize}, Converter={x:Static c:ProgressBarArcSizeConverter.Default}, Mode=OneWay}" SweepDirection="Counterclockwise">
                                                    <ArcSegment.Point>
                                                        <MultiBinding Converter="{x:Static c:ProgressBarArcEndPointConverter.Inverse}" ConverterParameter="{x:Static c:ProgressBarArcEndPointConverter.ParameterMidPoint}">
                                                            <Binding ElementName="PathGrid2" FallbackValue="{StaticResource FallBackValueZero}" Path="ActualWidth" />
                                                            <Binding FallbackValue="{StaticResource FallBackValueZero}" Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                            <Binding FallbackValue="{StaticResource FallBackValueZero}" Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                            <Binding FallbackValue="{StaticResource FallBackValueZero}" Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                            <Binding ElementName="FullyIndeterminateGridScaleTransform2" FallbackValue="{StaticResource FallBackValueZero}" Path="ScaleX" />
                                                        </MultiBinding>
                                                    </ArcSegment.Point>
                                                </ArcSegment>
                                                <ArcSegment Size="{Binding ElementName=PathGrid2, Path=ActualWidth, FallbackValue={StaticResource FallBackValueSize}, Converter={x:Static c:ProgressBarArcSizeConverter.Default}, Mode=OneWay}" SweepDirection="Counterclockwise">
                                                    <ArcSegment.Point>
                                                        <MultiBinding Converter="{x:Static c:ProgressBarArcEndPointConverter.Inverse}">
                                                            <Binding ElementName="PathGrid2" Path="ActualWidth" />
                                                            <Binding FallbackValue="{StaticResource FallBackValueZero}" Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                            <Binding FallbackValue="{StaticResource FallBackValueZero}" Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                            <Binding FallbackValue="{StaticResource FallBackValueZero}" Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                            <Binding ElementName="FullyIndeterminateGridScaleTransform2" FallbackValue="{StaticResource FallBackValueZero}" Path="ScaleX" />
                                                        </MultiBinding>
                                                    </ArcSegment.Point>
                                                </ArcSegment>
                                            </PathFigure>
                                        </PathGeometry>
                                    </Path.Data>
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform x:Name="RotateTransform2" CenterX="{Binding ElementName=PathGrid2, Path=ActualWidth, Converter={x:Static c:ProgressBarRotateTransformCentreConverter.Default}, Mode=OneWay}" CenterY="{Binding ElementName=PathGrid2, Path=ActualWidth, Converter={x:Static c:ProgressBarRotateTransformCentreConverter.Default}, Mode=OneWay}" />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Canvas>

                            <ContentControl x:Name="Value"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            ContentStringFormat="{Binding Path=(p:ProgressBarAssist.ContentStringFormat), RelativeSource={RelativeSource TemplatedParent}}"
                                            ContentTemplate="{Binding Path=(p:ProgressBarAssist.ContentTemplate), RelativeSource={RelativeSource TemplatedParent}}"
                                            FontSize="{TemplateBinding FontSize}"
                                            FontStyle="{TemplateBinding FontStyle}"
                                            FontWeight="{TemplateBinding FontWeight}"
                                            Foreground="{TemplateBinding Foreground}"
                                            Visibility="Collapsed">
                                <ContentControl.Content>
                                    <MultiBinding Converter="{x:Static c:MathConverter.Divide}">
                                        <Binding Path="Value" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                        <Binding Path="Maximum" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                    </MultiBinding>
                                </ContentControl.Content>
                            </ContentControl>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(p:ProgressBarAssist.ShowSecondProgress), RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Name="IsFullyIndeterminateScaleStoryboard2" Storyboard="{StaticResource IsFullyIndeterminateScaleStoryboard2}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="IsFullyIndeterminateScaleStoryboard2" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsIndeterminate, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Name="IsIndeterminateStoryboard" Storyboard="{StaticResource IsIndeterminateStoryboard}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="IsIndeterminateStoryboard" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsIndeterminate" Value="True" />
                                <Condition Property="IsVisible" Value="True" />
                                <Condition Property="Value" Value="0" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Name="IsFullyIndeterminateStoryboard" Storyboard="{StaticResource IsFullyIndeterminateStoryboard}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="IsFullyIndeterminateStoryboard" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsIndeterminate" Value="False" />
                                <Condition Property="p:ProgressBarAssist.ShowValue" Value="True" />
                                <Condition Property="IsVisible" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Value" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="80" />
        <Setter Property="p:ProgressBarAssist.StrokeThickness" Value="15" />
    </Style>
    <Style x:Key="MyNet.Styles.ProgressBar.Circular.Accent" TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource MyNet.Styles.ProgressBar.Circular}">
        <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Accent}" />
        <Setter Property="p:ThemeAssist.IsCheckedForeground" Value="{DynamicResource MyNet.Brushes.Accent.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.ProgressBar.Circular.Foreground" TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource MyNet.Styles.ProgressBar.Circular}">
        <Setter Property="Background" Value="{me:BrushBinding InheritPath=(TextElement.Foreground), Opacity={StaticResource MyNet.Opacity.Filled}}" />
        <Setter Property="BorderBrush" Value="{me:BrushBinding InheritPath=(TextElement.Foreground)}" />
        <Setter Property="Foreground" Value="{me:BrushBinding InheritPath=(TextElement.Foreground)}" />
        <Setter Property="p:ThemeAssist.IsCheckedForeground" Value="{me:BrushBinding InheritPath=(TextElement.Foreground), Contrast=True}" />
    </Style>

</ResourceDictionary>