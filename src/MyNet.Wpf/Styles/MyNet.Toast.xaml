<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:MyNet.Wpf.Converters"
                    xmlns:ctrl="clr-namespace:MyNet.Wpf.Controls"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:me="clr-namespace:MyNet.Wpf.MarkupExtensions"
                    xmlns:notif="clr-namespace:MyNet.UI.Notifications;assembly=MyNet.UI"
                    xmlns:p="clr-namespace:MyNet.Wpf.Parameters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Bases.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="MyNet.Styles.ToastItem" TargetType="{x:Type ctrl:ToastItem}">
        <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Application.Background.Light}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Application.Background.Light}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{me:BrushBinding SelfPath=Background, Contrast=True}" />
        <Setter Property="Margin" Value="{StaticResource MyNet.Margins.Small}" />
        <Setter Property="Padding" Value="{StaticResource MyNet.Margins.Default}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:ToastItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate DataType="{x:Type notif:MessageNotification}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <ctrl:PackIcon x:Name="Icon"
                                               Width="40"
                                               Height="40"
                                               Margin="{StaticResource MyNet.Margins.Default.Left}"
                                               VerticalAlignment="Center"
                                               Foreground="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type FrameworkElement}}}" />
                                <StackPanel Grid.Column="1"
                                            Margin="{StaticResource MyNet.Margins.VeryLarge.Horizontal}"
                                            VerticalAlignment="Center"
                                            Orientation="Vertical">
                                    <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Caption}"
                                               Margin="{StaticResource MyNet.Margins.Default.Bottom}"
                                               FontWeight="{StaticResource MyNet.Font.Weight.Header}"
                                               Foreground="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type FrameworkElement}}}"
                                               Opacity="{StaticResource MyNet.Opacity.Default}"
                                               Text="{Binding Title, Converter={x:Static c:StringConverter.ToUpper}, Mode=OneTime}"
                                               TextWrapping="Wrap"
                                               Visibility="{Binding Title, Converter={x:Static c:NullToVisibilityConverter.CollapsedIfNull}}" />
                                    <TextBlock Margin="{StaticResource MyNet.Margins.Default.Bottom}"
                                               Foreground="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type FrameworkElement}}}"
                                               Opacity="{StaticResource MyNet.Opacity.Secondary}"
                                               Text="{Binding Message, Mode=OneTime}"
                                               TextWrapping="Wrap" />
                                </StackPanel>
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Severity}" Value="{x:Static notif:NotificationSeverity.Success}">
                                    <Setter TargetName="Icon" Property="Kind" Value="{x:Static md:PackIconKind.Check}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Severity}" Value="{x:Static notif:NotificationSeverity.Error}">
                                    <Setter TargetName="Icon" Property="Kind" Value="{x:Static md:PackIconKind.RemoveCircle}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Severity}" Value="{x:Static notif:NotificationSeverity.Warning}">
                                    <Setter TargetName="Icon" Property="Kind" Value="{x:Static md:PackIconKind.Warning}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Severity}" Value="{x:Static notif:NotificationSeverity.Information}">
                                    <Setter TargetName="Icon" Property="Kind" Value="{x:Static md:PackIconKind.InformationCircle}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Severity}" Value="{x:Static notif:NotificationSeverity.None}">
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <ctrl:Card Padding="0"
                               p:ElevationAssist.Elevation="{TemplateBinding p:ElevationAssist.Elevation}"
                               Background="{TemplateBinding Background}"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               Foreground="{TemplateBinding Foreground}"
                               UniformCornerRadius="{TemplateBinding p:ThemeAssist.UniformCornerRadius}">
                        <Grid>

                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"
                                              Content="{Binding Notification}" />

                            <Button x:Name="CloseButton"
                                    Style="{StaticResource MyNet.Styles.Button.Icon.Tool}"
                                    Margin="{StaticResource MyNet.Margins.Default}"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Content="{me:ToolIcon Kind=Close}"
                                    ToolTip="{me:Resource Close}" />
                        </Grid>
                    </ctrl:Card>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="p:ElevationAssist.Elevation" Value="{StaticResource MyNet.Elevation.Container}" />
        <Setter Property="p:ThemeAssist.UniformCornerRadius" Value="{StaticResource MyNet.UniformCornerRadius.Container}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Toast.OnClick, RelativeSource={RelativeSource Self}, Converter={x:Static c:NullToBooleanConverter.FalseIfNull}}" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>