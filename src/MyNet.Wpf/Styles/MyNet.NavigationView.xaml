<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:MyNet.Wpf.Converters"
                    xmlns:ctrl="clr-namespace:MyNet.Wpf.Controls"
                    xmlns:me="clr-namespace:MyNet.Wpf.MarkupExtensions"
                    xmlns:p="clr-namespace:MyNet.Wpf.Parameters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Bases.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Controls.FocusVisualStyle.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Controls.Menu.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Controls.ItemsControl.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Controls.Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/MyNet.AutoSuggestBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="MyNet.Style.NavigationViewItemHeader" TargetType="{x:Type ctrl:NavigationViewItemHeader}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FontSize" Value="{StaticResource MyNet.Font.Size}" />
        <Setter Property="Foreground" Value="{me:BrushBinding InheritPath=HeaderForeground, RelativeSource={RelativeSource AncestorType={x:Type ctrl:NavigationView}}}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="IconForeground" Value="{me:BrushBinding InheritPath=HeaderForeground, RelativeSource={RelativeSource AncestorType={x:Type ctrl:NavigationView}}}" />
        <Setter Property="Margin" Value="0 4 0 2" />
        <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:NavigationViewItemHeader}">
                    <Grid Margin="{TemplateBinding Margin}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ContentControl x:Name="Icon"
                                        Grid.Column="0"
                                        Margin="0 0 4 0"
                                        VerticalAlignment="Center"
                                        Content="{TemplateBinding Icon}"
                                        Foreground="{TemplateBinding IconForeground}" />
                        <TextBlock Grid.Column="1"
                                   FontSize="{TemplateBinding FontSize}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Text="{TemplateBinding Text}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Margin" Value="0" />
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="MyNet.Styles.NavigationViewItem.Base" TargetType="{x:Type ctrl:NavigationViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Border.CornerRadius" Value="{StaticResource MyNet.CornerRadius.Control}" />
        <Setter Property="BorderBrush" Value="{me:BrushBinding InheritPath=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type ctrl:NavigationView}}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource MyNet.Styles.FocusVisualStyle.Rectangle.Margin}" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="FontSize" Value="{StaticResource MyNet.Font.Size.Tab}" />
        <Setter Property="Foreground" Value="{me:BrushBinding InheritPath=HeaderForeground, RelativeSource={RelativeSource AncestorType={x:Type ctrl:NavigationView}}}" />
        <Setter Property="IconForeground" Value="{me:BrushBinding InheritPath=HeaderForeground, RelativeSource={RelativeSource AncestorType={x:Type ctrl:NavigationView}}}" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
        <Setter Property="Padding" Value="10 8" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:NavigationViewItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border x:Name="PART_MainBorder"
                                Height="40"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <Grid>
                                <ctrl:Ripple Padding="{TemplateBinding Padding}"
                                             HorizontalContentAlignment="Stretch"
                                             VerticalContentAlignment="Stretch"
                                             Feedback="{TemplateBinding Foreground}"
                                             Focusable="False"
                                             RecognizesAccessKey="False"
                                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <ContentPresenter x:Name="IconContentPresenter"
                                                          Margin="{StaticResource MyNet.Margins.Default.Right}"
                                                          HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          Content="{TemplateBinding Icon}"
                                                          Focusable="False"
                                                          Opacity="{StaticResource MyNet.Opacity.Secondary}"
                                                          TextElement.Foreground="{TemplateBinding IconForeground}"
                                                          Visibility="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:NullToVisibilityConverter.CollapsedIfNull}}" />

                                        <ContentPresenter x:Name="ElementContentPresenter"
                                                          Grid.Column="1"
                                                          HorizontalAlignment="Left"
                                                          VerticalAlignment="Center"
                                                          Content="{TemplateBinding Header}"
                                                          TextElement.Foreground="{TemplateBinding Foreground}" />

                                        <ctrl:PackIcon x:Name="Caret"
                                                       Grid.Row="0"
                                                       Grid.Column="2"
                                                       Width="18"
                                                       Height="18"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       Kind="ChevronDown"
                                                       RenderTransformOrigin="0.5, 0.5">
                                            <ctrl:PackIcon.Visibility>
                                                <MultiBinding Converter="{x:Static c:MultipleBooleanToVisibilityConverter.AndCollapse}">
                                                    <Binding Path="HasItems" RelativeSource="{RelativeSource TemplatedParent}" />
                                                </MultiBinding>
                                            </ctrl:PackIcon.Visibility>
                                            <ctrl:PackIcon.RenderTransform>
                                                <RotateTransform Angle="0" />
                                            </ctrl:PackIcon.RenderTransform>
                                        </ctrl:PackIcon>
                                    </Grid>
                                </ctrl:Ripple>
                                <Rectangle x:Name="ActiveRectangle"
                                           Grid.Column="0"
                                           Width="3.5"
                                           Height="16"
                                           Margin="{Binding Path=(p:IconAssist.Margin), RelativeSource={RelativeSource TemplatedParent}}"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Fill="{Binding Path=(p:ThemeAssist.IsCheckedBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"
                                           Opacity="0.0"
                                           RadiusX="2"
                                           RadiusY="2" />
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="MenuItemsPresenter" Grid.Row="1" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=PART_MainBorder}" Value="True">
                            <Setter TargetName="PART_MainBorder" Property="Background" Value="{Binding Path=(p:ThemeAssist.IsMouseOverBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </DataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasItems" Value="True" />
                                <Condition Property="IsExpanded" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MenuItemsPresenter" Property="Visibility" Value="Visible" />
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MenuItemsPresenter"
                                                         Storyboard.TargetProperty="(ItemsControl.Opacity)"
                                                         From="0.0"
                                                         To="0.85"
                                                         Duration="00:00:00.167" />
                                        <DoubleAnimation Storyboard.TargetName="Caret"
                                                         Storyboard.TargetProperty="(ctrl:PackIcon.RenderTransform).(RotateTransform.Angle)"
                                                         From="0"
                                                         To="180"
                                                         Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MenuItemsPresenter"
                                                         Storyboard.TargetProperty="(ItemsControl.Opacity)"
                                                         From="0.85"
                                                         To="0.0"
                                                         Duration="00:00:00.167" />
                                        <DoubleAnimation Storyboard.TargetName="Caret"
                                                         Storyboard.TargetProperty="(ctrl:PackIcon.RenderTransform).(RotateTransform.Angle)"
                                                         From="180"
                                                         To="0"
                                                         Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsActive" Value="True">
                            <Setter TargetName="ActiveRectangle" Property="Opacity" Value="1.0" />
                            <Setter TargetName="IconContentPresenter" Property="Opacity" Value="1.0" />
                            <Setter TargetName="PART_MainBorder" Property="Background" Value="{Binding Path=(p:ThemeAssist.IsCheckedBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="p:IconAssist.Margin" Value="0" />
        <Setter Property="p:ThemeAssist.IsCheckedBackground" Value="{me:BrushBinding InheritPath=(p:ThemeAssist.IsCheckedBackground), RelativeSource={RelativeSource AncestorType={x:Type ctrl:NavigationView}}}" />
        <Setter Property="p:ThemeAssist.IsCheckedBorderBrush" Value="{me:BrushBinding InheritPath=(p:ThemeAssist.IsCheckedBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type ctrl:NavigationView}}}" />
        <Setter Property="p:ThemeAssist.IsCheckedForeground" Value="{me:BrushBinding InheritPath=(p:ThemeAssist.IsCheckedForeground), RelativeSource={RelativeSource AncestorType={x:Type ctrl:NavigationView}}}" />
        <Setter Property="p:ThemeAssist.IsMouseOverBackground" Value="{me:BrushBinding InheritPath=(p:ThemeAssist.IsMouseOverBackground), RelativeSource={RelativeSource AncestorType={x:Type ctrl:NavigationView}}}" />
        <Setter Property="p:ThemeAssist.IsMouseOverForeground" Value="{me:BrushBinding InheritPath=(p:ThemeAssist.IsMouseOverForeground), RelativeSource={RelativeSource AncestorType={x:Type ctrl:NavigationView}}}" />
        <Style.Triggers>
            <!-- IsEnabled -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Disabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNet.Styles.NavigationViewItem.SubLevel" TargetType="{x:Type ctrl:NavigationViewItem}" BasedOn="{StaticResource MyNet.Styles.NavigationViewItem.Base}">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Padding" Value="{StaticResource MyNet.Margins.VeryLarge.Horizontal}" />
        <Setter Property="p:IconAssist.Margin" Value="{StaticResource MyNet.Margins.Medium.Left}" />
    </Style>

    <Style x:Key="MyNet.Styles.NavigationViewItem" TargetType="{x:Type ctrl:NavigationViewItem}" BasedOn="{StaticResource MyNet.Styles.NavigationViewItem.Base}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.NavigationViewItem.SubLevel}" />
    </Style>

    <Style x:Key="MyNet.Styles.NavigationViewItem.Compact" TargetType="{x:Type ctrl:NavigationViewItem}" BasedOn="{StaticResource MyNet.Styles.NavigationViewItem}">
        <Setter Property="FontSize" Value="{StaticResource MyNet.Font.Size.Secondary}" />
        <Setter Property="p:ToolTipAssist.PlacementMode" Value="RightAndAlignMiddles" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:NavigationViewItem}">
                    <Grid>
                        <Border x:Name="PART_MainBorder"
                                HorizontalAlignment="Stretch"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource MyNet.CornerRadius.Container}">
                            <Grid>
                                <Rectangle x:Name="ActiveRectangle"
                                           Width="4"
                                           Height="24"
                                           HorizontalAlignment="{Binding Path=(p:HeaderAssist.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                                           VerticalAlignment="{Binding Path=(p:HeaderAssist.VerticalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                                           Fill="{Binding Path=(p:ThemeAssist.IsCheckedBorderBrush), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                           Opacity="0.0"
                                           RadiusX="2"
                                           RadiusY="2" />

                                <ctrl:Ripple Padding="{TemplateBinding Padding}"
                                             HorizontalAlignment="Stretch"
                                             VerticalAlignment="Stretch"
                                             HorizontalContentAlignment="Stretch"
                                             VerticalContentAlignment="Stretch"
                                             Feedback="{TemplateBinding Foreground}"
                                             Focusable="False"
                                             RecognizesAccessKey="False"
                                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ctrl:Ripple.Clip>
                                        <MultiBinding Converter="{x:Static c:GeometryConverter.Border}">
                                            <Binding ElementName="PART_MainBorder" Path="ActualWidth" />
                                            <Binding ElementName="PART_MainBorder" Path="ActualHeight" />
                                            <Binding ElementName="PART_MainBorder" Path="CornerRadius" />
                                            <Binding ElementName="PART_MainBorder" Path="BorderThickness" />
                                        </MultiBinding>
                                    </ctrl:Ripple.Clip>

                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <ContentControl x:Name="Icon"
                                                        VerticalAlignment="Center"
                                                        Content="{TemplateBinding Icon}"
                                                        Foreground="{TemplateBinding IconForeground}"
                                                        Visibility="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:NullToVisibilityConverter.CollapsedIfNull}}" />

                                        <Grid x:Name="ContentGrid"
                                              Grid.Row="1"
                                              Height="15"
                                              Margin="0 2 0 0">
                                            <ContentPresenter x:Name="ElementContentPresenter"
                                                              HorizontalAlignment="Center"
                                                              Content="{TemplateBinding Header}"
                                                              TextElement.FontSize="{TemplateBinding FontSize}"
                                                              TextElement.Foreground="{TemplateBinding Foreground}" />
                                        </Grid>

                                        <ctrl:PackIcon x:Name="Caret"
                                                       Grid.RowSpan="2"
                                                       Width="18"
                                                       Height="18"
                                                       Margin="0 0 -5 0"
                                                       HorizontalAlignment="Right"
                                                       VerticalAlignment="Center"
                                                       Kind="ChevronRight"
                                                       RenderTransformOrigin="0.5, 0.5">
                                            <ctrl:PackIcon.Visibility>
                                                <MultiBinding Converter="{x:Static c:MultipleBooleanToVisibilityConverter.AndCollapse}">
                                                    <Binding Path="HasItems" RelativeSource="{RelativeSource TemplatedParent}" />
                                                </MultiBinding>
                                            </ctrl:PackIcon.Visibility>
                                            <ctrl:PackIcon.RenderTransform>
                                                <RotateTransform Angle="0" />
                                            </ctrl:PackIcon.RenderTransform>
                                        </ctrl:PackIcon>
                                    </Grid>
                                </ctrl:Ripple>
                            </Grid>
                        </Border>

                        <ctrl:PopupEx x:Name="PART_Popup"
                                      HorizontalOffset="-5"
                                      Placement="Right"
                                      PlacementTarget="{Binding ElementName=PART_MainBorder}"
                                      PopupAnimation="Fade"
                                      VerticalOffset="-5">
                            <ctrl:PopupEx.IsOpen>
                                <MultiBinding Converter="{x:Static c:MultipleBooleanConverter.And}">
                                    <Binding Mode="OneWay" Path="IsMouseOver" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Mode="OneWay" Path="HasItems" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </ctrl:PopupEx.IsOpen>
                            <Grid>
                                <Border Background="White" Opacity="0.002" />
                                <ctrl:Card Style="{StaticResource MyNet.Styles.Card.Popup}"
                                           Padding="0"
                                           Background="{TemplateBinding p:PopupAssist.Background}"
                                           FontSize="{StaticResource MyNet.Font.Size}"
                                           FontWeight="{StaticResource MyNet.Font.Weight.ToolTip}"
                                           Foreground="{TemplateBinding p:PopupAssist.Foreground}">
                                    <ItemsPresenter />
                                </ctrl:Card>
                            </Grid>
                        </ctrl:PopupEx>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="True">
                            <Setter TargetName="ActiveRectangle" Property="Opacity" Value="1.0" />
                            <Setter TargetName="ElementContentPresenter" Property="TextElement.Foreground" Value="{Binding Path=(p:ThemeAssist.IsCheckedForeground), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{Binding Path=(p:ThemeAssist.IsCheckedForeground), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="PART_MainBorder" Property="Background" Value="{Binding Path=(p:ThemeAssist.IsCheckedBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentGrid"
                                                         Storyboard.TargetProperty="Height"
                                                         From="15"
                                                         To="0"
                                                         Duration="0:0:.16" />
                                        <DoubleAnimation Storyboard.TargetName="ContentGrid"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="1"
                                                         To="0"
                                                         Duration="0:0:.16" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentGrid"
                                                         Storyboard.TargetProperty="Height"
                                                         From="0"
                                                         To="15"
                                                         Duration="0:0:.16" />
                                        <DoubleAnimation Storyboard.TargetName="ContentGrid"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1"
                                                         Duration="0:0:.16" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_MainBorder" Property="Background" Value="{Binding Path=(p:ThemeAssist.IsMouseOverBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Icon" Property="Foreground" Value="{Binding Path=(p:ThemeAssist.IsMouseOverForeground), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="ElementContentPresenter" Property="TextElement.Foreground" Value="{Binding Path=(p:ThemeAssist.IsMouseOverForeground), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasItems" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsExpanded" Value="True" />
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Caret"
                                                         Storyboard.TargetProperty="(ctrl:PackIcon.RenderTransform).(RotateTransform.Angle)"
                                                         From="0"
                                                         To="180"
                                                         Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Caret"
                                                         Storyboard.TargetProperty="(ctrl:PackIcon.RenderTransform).(RotateTransform.Angle)"
                                                         From="180"
                                                         To="0"
                                                         Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasItems" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsExpanded" Value="False" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="60" />
        <Setter Property="p:HeaderAssist.HorizontalAlignment" Value="{me:BrushBinding InheritPath=(p:HeaderAssist.HorizontalAlignment), RelativeSource={RelativeSource AncestorType={x:Type ctrl:NavigationView}}}" />
        <Setter Property="p:HeaderAssist.VerticalAlignment" Value="{me:BrushBinding InheritPath=(p:HeaderAssist.VerticalAlignment), RelativeSource={RelativeSource AncestorType={x:Type ctrl:NavigationView}}}" />
        <Setter Property="p:PopupAssist.Background" Value="{me:BrushBinding InheritPath=(p:PopupAssist.Background), RelativeSource={RelativeSource AncestorType={x:Type ctrl:NavigationView}}}" />
        <Setter Property="p:PopupAssist.Foreground" Value="{me:BrushBinding InheritPath=(p:PopupAssist.Foreground), RelativeSource={RelativeSource AncestorType={x:Type ctrl:NavigationView}}}" />
    </Style>

    <Style x:Key="MyNet.Styles.NavigationViewItem.Top" TargetType="{x:Type ctrl:NavigationViewItem}" BasedOn="{StaticResource MyNet.Styles.NavigationViewItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:NavigationViewItem}">
                    <Grid>
                        <Border x:Name="PART_MainBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <Grid>
                                <ctrl:Ripple Padding="{TemplateBinding Padding}"
                                             HorizontalContentAlignment="Stretch"
                                             VerticalContentAlignment="Stretch"
                                             Feedback="{TemplateBinding Foreground}"
                                             Focusable="False"
                                             RecognizesAccessKey="False"
                                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <ContentPresenter x:Name="IconContentPresenter"
                                                          Margin="{StaticResource MyNet.Margins.Default.Right}"
                                                          HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          Content="{TemplateBinding Icon}"
                                                          Focusable="False"
                                                          Opacity="{StaticResource MyNet.Opacity.Secondary}"
                                                          TextElement.Foreground="{TemplateBinding IconForeground}"
                                                          Visibility="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:NullToVisibilityConverter.CollapsedIfNull}}" />
                                        <ContentPresenter x:Name="ElementContentPresenter"
                                                          Grid.Column="1"
                                                          HorizontalAlignment="Left"
                                                          VerticalAlignment="Center"
                                                          Content="{TemplateBinding Header}"
                                                          TextElement.Foreground="{TemplateBinding Foreground}" />

                                        <ctrl:PackIcon x:Name="Caret"
                                                       Grid.Row="0"
                                                       Grid.Column="2"
                                                       Width="18"
                                                       Height="18"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       Kind="ChevronDown"
                                                       RenderTransformOrigin="0.5, 0.5">
                                            <ctrl:PackIcon.Visibility>
                                                <MultiBinding Converter="{x:Static c:MultipleBooleanToVisibilityConverter.AndCollapse}">
                                                    <Binding Path="HasItems" RelativeSource="{RelativeSource TemplatedParent}" />
                                                </MultiBinding>
                                            </ctrl:PackIcon.Visibility>
                                            <ctrl:PackIcon.RenderTransform>
                                                <RotateTransform Angle="0" />
                                            </ctrl:PackIcon.RenderTransform>
                                        </ctrl:PackIcon>
                                    </Grid>
                                </ctrl:Ripple>
                                <Rectangle x:Name="ActiveRectangle"
                                           Width="60"
                                           Height="3.5"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Bottom"
                                           Fill="{Binding Path=(p:ThemeAssist.IsCheckedBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"
                                           Opacity="0.0"
                                           RadiusX="2"
                                           RadiusY="2" />
                            </Grid>
                        </Border>
                        <ctrl:PopupEx x:Name="PART_Popup"
                                      HorizontalOffset="-5"
                                      Placement="Bottom"
                                      PlacementTarget="{Binding ElementName=PART_MainBorder}"
                                      PopupAnimation="Fade"
                                      VerticalOffset="-5">
                            <ctrl:PopupEx.IsOpen>
                                <MultiBinding Converter="{x:Static c:MultipleBooleanConverter.And}">
                                    <Binding Mode="OneWay" Path="IsMouseOver" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Mode="OneWay" Path="HasItems" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </ctrl:PopupEx.IsOpen>
                            <Grid>
                                <Border Background="White" Opacity="0.002" />
                                <ctrl:Card Style="{StaticResource MyNet.Styles.Card.Popup}"
                                           Padding="0"
                                           Background="{Binding Path=(p:PopupAssist.Background), RelativeSource={RelativeSource TemplatedParent}}"
                                           FontSize="{StaticResource MyNet.Font.Size}"
                                           FontWeight="{StaticResource MyNet.Font.Weight.ToolTip}"
                                           Foreground="{Binding Path=(p:PopupAssist.Foreground), RelativeSource={RelativeSource TemplatedParent}}">
                                    <ItemsPresenter />
                                </ctrl:Card>
                            </Grid>
                        </ctrl:PopupEx>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=PART_MainBorder}" Value="True">
                            <Setter TargetName="PART_MainBorder" Property="Background" Value="{Binding Path=(p:ThemeAssist.IsMouseOverBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </DataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasItems" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsExpanded" Value="True" />
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Caret"
                                                         Storyboard.TargetProperty="(ctrl:PackIcon.RenderTransform).(RotateTransform.Angle)"
                                                         From="0"
                                                         To="180"
                                                         Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Caret"
                                                         Storyboard.TargetProperty="(ctrl:PackIcon.RenderTransform).(RotateTransform.Angle)"
                                                         From="180"
                                                         To="0"
                                                         Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasItems" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsExpanded" Value="False" />
                        </MultiTrigger>
                        <Trigger Property="IsActive" Value="True">
                            <Setter TargetName="ActiveRectangle" Property="Opacity" Value="1.0" />
                            <Setter TargetName="IconContentPresenter" Property="Opacity" Value="1.0" />
                            <Setter TargetName="PART_MainBorder" Property="Background" Value="{Binding Path=(p:ThemeAssist.IsCheckedBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="p:PopupAssist.Background" Value="{me:BrushBinding InheritPath=(p:PopupAssist.Background), RelativeSource={RelativeSource AncestorType={x:Type ctrl:NavigationView}}}" />
        <Setter Property="p:PopupAssist.Foreground" Value="{me:BrushBinding InheritPath=(p:PopupAssist.Foreground), RelativeSource={RelativeSource AncestorType={x:Type ctrl:NavigationView}}}" />
    </Style>

    <Style x:Key="MyNet.Styles.NavigationView" TargetType="{x:Type ctrl:NavigationView}">
        <Style.Resources>
            <Style TargetType="{x:Type ctrl:NavigationViewItem}" BasedOn="{StaticResource MyNet.Styles.NavigationViewItem}" />
        </Style.Resources>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="CompactPaneLength" Value="40" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
        <Setter Property="FrameBackground" Value="{DynamicResource MyNet.Brushes.Application.Background.Dark}" />
        <Setter Property="FrameCornerRadius" Value="15,0,0,0" />
        <Setter Property="HeaderForeground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock FontSize="{StaticResource MyNet.Font.Size.Title}" Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True"
                                            IsVirtualizing="{TemplateBinding VirtualizingPanel.IsVirtualizing}"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            Orientation="Vertical"
                                            VirtualizationMode="{TemplateBinding VirtualizingPanel.VirtualizationMode}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Contained" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="OpenPaneLength" Value="320" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:NavigationView}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="PaneStates">
                                <VisualState Name="PaneOpen">
                                    <Storyboard>
                                        <DoubleAnimation AccelerationRatio="0.4"
                                                         Storyboard.TargetName="PaneGrid"
                                                         Storyboard.TargetProperty="Width"
                                                         From="40"
                                                         To="{TemplateBinding OpenPaneLength}"
                                                         Duration="0:0:.16" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="PaneCompact">
                                    <Storyboard>
                                        <DoubleAnimation AccelerationRatio="0.4"
                                                         Storyboard.TargetName="PaneGrid"
                                                         Storyboard.TargetProperty="Width"
                                                         From="{TemplateBinding OpenPaneLength}"
                                                         To="40"
                                                         Duration="0:0:.16" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <!-- Left Pane -->
                        <Grid x:Name="PaneGrid"
                              Grid.Column="0"
                              Width="{TemplateBinding OpenPaneLength}"
                              Margin="{StaticResource MyNet.Margins.Default.Horizontal}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!-- Pane Header -->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <!-- Menu button -->
                                <Button x:Name="PART_ToggleButton"
                                        Style="{StaticResource MyNet.Styles.Button.Text}"
                                        Width="39"
                                        Height="39"
                                        Margin="{StaticResource MyNet.Margins.Medium.Bottom}"
                                        Padding="0"
                                        Content="{me:MediumIcon Kind=Menu}"
                                        Visibility="{Binding IsPaneToggleVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}" />

                                <!-- Header -->
                                <ContentPresenter Grid.Column="1"
                                                  Margin="{StaticResource MyNet.Margins.Default.Bottom}"
                                                  Content="{TemplateBinding PaneHeader}"
                                                  Visibility="{Binding PaneHeader, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:NullToVisibilityConverter.CollapsedIfNull}}" />

                                <!-- Auto Suggest Box -->
                                <Grid Grid.Row="1" Grid.ColumnSpan="2" Visibility="{Binding ShowAutoSuggestBox, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                                    <ctrl:AutoSuggestBox x:Name="PART_AutoSuggestBox"
                                                         Style="{StaticResource MyNet.Styles.AutoSuggestBox.Filled}"
                                                         Margin="{StaticResource MyNet.Margins.Medium.Bottom}"
                                                         Padding="10 5"
                                                         HorizontalAlignment="Stretch"
                                                         p:HintAssist.Hint="{me:Resource Search}"
                                                         p:IconAssist.Alignment="Right"
                                                         p:IconAssist.Icon="{me:Icon Kind=Search}"
                                                         p:IconAssist.Margin="{StaticResource MyNet.Margins.Default.Left}"
                                                         p:TextFieldAssist.HasClearButton="True"
                                                         DisplayMemberPath="Header"
                                                         PopupWidth="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"
                                                         Visibility="{Binding IsPaneOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}" />

                                    <Button x:Name="PART_AutoSuggestButton"
                                            Style="{StaticResource MyNet.Styles.Button.Text}"
                                            Width="39"
                                            Height="{Binding Height, ElementName=PART_AutoSuggestBox}"
                                            Margin="{StaticResource MyNet.Margins.Medium.Bottom}"
                                            Content="{me:Icon Kind=Search,
                                                              Size=20}"
                                            Visibility="{Binding IsPaneOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfTrue}}" />
                                </Grid>
                            </Grid>

                            <!-- Items -->
                            <ctrl:DynamicScrollViewer Grid.Row="1"
                                                      CanContentScroll="True"
                                                      HorizontalScrollBarVisibility="Disabled"
                                                      VerticalScrollBarVisibility="Auto">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <!-- Items -->
                                    <ItemsPresenter />

                                    <!-- Footer Items -->
                                    <ItemsControl Style="{StaticResource MyNet.Styles.ItemsControl}"
                                                  Grid.Row="1"
                                                  ItemsSource="{Binding FooterMenuItems, RelativeSource={RelativeSource TemplatedParent}}"
                                                  KeyboardNavigation.DirectionalNavigation="Contained" />
                                </Grid>
                            </ctrl:DynamicScrollViewer>

                            <!-- PaneFooter -->
                            <ContentPresenter Grid.Row="2"
                                              Margin="{StaticResource MyNet.Margins.Default.Top}"
                                              Content="{TemplateBinding PaneFooter}"
                                              Visibility="{Binding PaneFooter, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:NullToVisibilityConverter.CollapsedIfNull}}" />
                        </Grid>

                        <!-- Main frame -->
                        <Border Grid.Column="1"
                                Margin="{TemplateBinding FrameMargin}"
                                Background="{TemplateBinding FrameBackground}"
                                BorderBrush="{TemplateBinding FrameBorderBrush}"
                                BorderThickness="{TemplateBinding FrameBorderThickness}"
                                CornerRadius="{TemplateBinding FrameCornerRadius}">
                            <Border.Clip>
                                <MultiBinding Converter="{x:Static c:GeometryConverter.Border}">
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="CornerRadius" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.Clip>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <!-- Header -->
                                <DockPanel Margin="{StaticResource MyNet.Margins.Medium}" Visibility="{Binding ShowHeader, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}">

                                    <!-- Breadcrumb -->
                                    <ctrl:SimpleStackPanel Margin="{StaticResource MyNet.Margins.Large.Right}"
                                                           VerticalAlignment="Center"
                                                           DockPanel.Dock="Left"
                                                           Orientation="Horizontal"
                                                           Spacing="{StaticResource MyNet.Margin.Default}"
                                                           Visibility="{Binding ShowNavigationButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                                        <Button x:Name="PART_PreviousButton"
                                                Style="{StaticResource MyNet.Styles.Button.Rounded.Text}"
                                                Content="{me:MediumIcon Kind=ArrowLeft}"
                                                IsEnabled="{TemplateBinding IsBackEnabled}"
                                                ToolTip="{me:Resource Previous}" />
                                        <Button x:Name="PART_NextButton"
                                                Style="{StaticResource MyNet.Styles.Button.Rounded.Text}"
                                                Content="{me:MediumIcon Kind=ArrowRight}"
                                                IsEnabled="{TemplateBinding IsForwardEnabled}"
                                                ToolTip="{me:Resource Next}" />
                                    </ctrl:SimpleStackPanel>
                                    <ContentPresenter Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" />
                                </DockPanel>

                                <!-- Page content -->
                                <ctrl:NavigationFrame x:Name="PART_NavigationFrame"
                                                      Grid.Row="1"
                                                      Padding="{TemplateBinding Padding}"
                                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                      Transition="{TemplateBinding Transition}"
                                                      TransitionDuration="{TemplateBinding TransitionDuration}" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Standard" />
        <Setter Property="p:ThemeAssist.IsCheckedBackground" Value="{me:BrushBinding SelfPath=Foreground, Opacity={StaticResource MyNet.Opacity.Checked}}" />
        <Setter Property="p:ThemeAssist.IsCheckedBorderBrush" Value="{DynamicResource MyNet.Brushes.Primary}" />
        <Setter Property="p:ThemeAssist.IsCheckedForeground" Value="{DynamicResource MyNet.Brushes.Primary}" />
        <Setter Property="p:ThemeAssist.IsMouseOverBackground" Value="{me:BrushBinding SelfPath=Foreground, Opacity={StaticResource MyNet.Opacity.Hovered}}" />
        <Setter Property="p:ThemeAssist.IsMouseOverForeground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
    </Style>

    <Style x:Key="MyNet.Styles.NavigationView.Compact" TargetType="{x:Type ctrl:NavigationView}" BasedOn="{StaticResource MyNet.Styles.NavigationView}">
        <Style.Resources>
            <Style TargetType="{x:Type ctrl:NavigationViewItem}" BasedOn="{StaticResource MyNet.Styles.NavigationViewItem.Compact}" />
        </Style.Resources>
        <Setter Property="CompactPaneLength" Value="60" />
        <Setter Property="IsPaneToggleVisible" Value="False" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <ctrl:SimpleStackPanel MinWidth="0"
                                           Margin="0"
                                           HorizontalAlignment="Left"
                                           Spacing="{StaticResource MyNet.Margin.Default}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OpenPaneLength" Value="60" />
        <Setter Property="ShowAutoSuggestBox" Value="False" />
        <Setter Property="p:HeaderAssist.HorizontalAlignment" Value="Left" />
        <Setter Property="p:HeaderAssist.VerticalAlignment" Value="Center" />
        <Setter Property="p:PopupAssist.Background" Value="{DynamicResource MyNet.Brushes.Popup.Background}" />
        <Setter Property="p:PopupAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.NavigationView.Compact.Accent" TargetType="{x:Type ctrl:NavigationView}" BasedOn="{StaticResource MyNet.Styles.NavigationView.Compact}">
        <Setter Property="p:ThemeAssist.IsCheckedBorderBrush" Value="{DynamicResource MyNet.Brushes.Accent}" />
        <Setter Property="p:ThemeAssist.IsCheckedForeground" Value="{DynamicResource MyNet.Brushes.Accent}" />
    </Style>

    <Style x:Key="MyNet.Styles.NavigationView.Top" TargetType="{x:Type ctrl:NavigationView}" BasedOn="{StaticResource MyNet.Styles.NavigationView}">
        <Style.Resources>
            <Style TargetType="{x:Type ctrl:NavigationViewItem}" BasedOn="{StaticResource MyNet.Styles.NavigationViewItem.Top}" />
        </Style.Resources>
        <Setter Property="IsPaneToggleVisible" Value="False" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <ctrl:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Small}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:NavigationView}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <!-- Top Pane -->
                        <Grid x:Name="PaneGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!-- Navigation button -->
                            <ctrl:SimpleStackPanel Margin="{StaticResource MyNet.Margins.Medium.Right}"
                                                   VerticalAlignment="Center"
                                                   Orientation="Horizontal"
                                                   Spacing="{StaticResource MyNet.Margin.Default}"
                                                   Visibility="{Binding ShowNavigationButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                                <Button x:Name="PART_PreviousButton"
                                        Style="{StaticResource MyNet.Styles.Button.Rounded.Text}"
                                        Content="{me:MediumIcon Kind=ArrowLeft}"
                                        IsEnabled="{TemplateBinding IsBackEnabled}"
                                        ToolTip="{me:Resource Previous}" />
                                <Button x:Name="PART_NextButton"
                                        Style="{StaticResource MyNet.Styles.Button.Rounded.Text}"
                                        Content="{me:MediumIcon Kind=ArrowRight}"
                                        IsEnabled="{TemplateBinding IsForwardEnabled}"
                                        ToolTip="{me:Resource Next}" />
                            </ctrl:SimpleStackPanel>

                            <!-- Header -->
                            <ContentPresenter Grid.Column="1"
                                              Margin="{StaticResource MyNet.Margins.Medium.Right}"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding PaneHeader}"
                                              Visibility="{Binding PaneHeader, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:NullToVisibilityConverter.CollapsedIfNull}}" />

                            <!-- Items -->
                            <ctrl:DynamicScrollViewer Grid.Column="2"
                                                      Margin="{StaticResource MyNet.Margins.Medium.Right}"
                                                      VerticalAlignment="Center"
                                                      CanContentScroll="True"
                                                      HorizontalScrollBarVisibility="Auto"
                                                      VerticalScrollBarVisibility="Disabled">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <!-- Items -->
                                    <ItemsPresenter />

                                    <!-- Footer Items -->
                                    <ItemsControl Style="{StaticResource MyNet.Styles.ItemsControl}"
                                                  Grid.Column="1"
                                                  ItemsSource="{Binding FooterMenuItems, RelativeSource={RelativeSource TemplatedParent}}"
                                                  KeyboardNavigation.DirectionalNavigation="Contained">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <ctrl:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Small}" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </Grid>
                            </ctrl:DynamicScrollViewer>

                            <!-- Auto Suggest Box -->
                            <!--<ctrl:AutoSuggestBox x:Name="PART_AutoSuggestBox"
                                                 Style="{StaticResource MyNet.Styles.AutoSuggestBox.Filled}"
                                                 Grid.Column="3"
                                                 Width="150"
                                                 Margin="{StaticResource MyNet.Margins.Medium.Right}"
                                                 Padding="10 5"
                                                 HorizontalAlignment="Stretch"
                                                 VerticalAlignment="Center"
                                                 p:HintAssist.Hint="{me:Resource Search}"
                                                 p:IconAssist.Alignment="Right"
                                                 p:IconAssist.Icon="{me:Icon Kind=Search}"
                                                 p:IconAssist.Margin="{StaticResource MyNet.Margins.Default.Left}"
                                                 p:TextFieldAssist.HasClearButton="True"
                                                 DisplayMemberPath="Header"
                                                 Visibility="{Binding ShowAutoSuggestBox, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}" />-->

                            <!-- PaneFooter -->
                            <ContentPresenter Grid.Column="4"
                                              Margin="{StaticResource MyNet.Margins.Default.Top}"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding PaneFooter}"
                                              Visibility="{Binding PaneFooter, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:NullToVisibilityConverter.CollapsedIfNull}}" />

                        </Grid>

                        <!-- Main frame -->
                        <Border Grid.Row="1"
                                Margin="{TemplateBinding FrameMargin}"
                                Background="{TemplateBinding FrameBackground}"
                                BorderBrush="{TemplateBinding FrameBorderBrush}"
                                BorderThickness="{TemplateBinding FrameBorderThickness}"
                                CornerRadius="{TemplateBinding FrameCornerRadius}">
                            <Border.Clip>
                                <MultiBinding Converter="{x:Static c:GeometryConverter.Border}">
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="CornerRadius" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.Clip>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <!-- Header -->
                                <ContentPresenter Margin="{StaticResource MyNet.Margins.Medium}"
                                                  Content="{TemplateBinding Header}"
                                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                  Visibility="{Binding ShowHeader, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}" />

                                <!-- Page content -->
                                <ctrl:NavigationFrame x:Name="PART_NavigationFrame"
                                                      Grid.Row="1"
                                                      Padding="{TemplateBinding Padding}"
                                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                      Transition="{TemplateBinding Transition}"
                                                      TransitionDuration="{TemplateBinding TransitionDuration}" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="p:PopupAssist.Background" Value="{DynamicResource MyNet.Brushes.Popup.Background}" />
        <Setter Property="p:PopupAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.NavigationView.Top.Accent" TargetType="{x:Type ctrl:NavigationView}" BasedOn="{StaticResource MyNet.Styles.NavigationView.Top}">
        <Setter Property="p:ThemeAssist.IsCheckedBorderBrush" Value="{DynamicResource MyNet.Brushes.Accent}" />
        <Setter Property="p:ThemeAssist.IsCheckedForeground" Value="{DynamicResource MyNet.Brushes.Accent}" />
    </Style>
</ResourceDictionary>
