<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:MyNet.Wpf.Converters"
                    xmlns:ctrl="clr-namespace:MyNet.Wpf.Controls"
                    xmlns:me="clr-namespace:MyNet.Wpf.MarkupExtensions"
                    xmlns:p="clr-namespace:MyNet.Wpf.Parameters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Bases.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/MyNet.Card.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="MyNet.Styles.Card.Popup" TargetType="{x:Type ctrl:Card}" BasedOn="{StaticResource MyNet.Styles.Card.Elevation}">
        <Setter Property="Margin" Value="{StaticResource MyNet.Margins.Default}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="p:ElevationAssist.Elevation" Value="{StaticResource MyNet.Elevation.Popup}" />
    </Style>

    <Style x:Key="MyNet.Styles.MenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource MyNet.Styles.FocusVisualStyle.Rectangle.Margin}" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="FontSize" Value="{StaticResource MyNet.Font.Size.Menu}" />
        <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="24 0 24 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid>
                        <Border x:Name="templateRoot"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True" />
                        <Border x:Name="BackgroundRoot"
                                Background="{Binding Path=(p:ThemeAssist.IsMouseOverBackground), RelativeSource={RelativeSource TemplatedParent}}"
                                BorderBrush="{Binding Path=(p:ThemeAssist.IsMouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0"
                                SnapsToDevicePixels="True" />
                        <ctrl:Ripple HorizontalContentAlignment="Stretch"
                                     VerticalContentAlignment="Stretch"
                                     Background="Transparent"
                                     Focusable="False">
                            <Grid Height="{TemplateBinding Height}" Background="Transparent">
                                <Grid Margin="{TemplateBinding Padding}" VerticalAlignment="Center" Background="Transparent">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="IconGroup" />
                                        <ColumnDefinition Width="*" SharedSizeGroup="HeaderGroup" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid x:Name="IconWrapper"
                                          MinWidth="25"
                                          Margin="{StaticResource MyNet.Margins.Medium.Right}"
                                          Visibility="Visible">
                                        <ContentControl x:Name="Icon"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Center"
                                                        Content="{TemplateBinding Icon}"
                                                        ContentTemplate="{Binding Path=(p:MenuAssist.IconTemplate), RelativeSource={RelativeSource TemplatedParent}}"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                    <Grid x:Name="GlyphWrapper"
                                          Width="25"
                                          Margin="{StaticResource MyNet.Margins.Medium.Right}"
                                          Visibility="Collapsed">
                                        <Viewbox x:Name="GlyphPanel"
                                                 Width="18"
                                                 Height="18"
                                                 Margin="0"
                                                 HorizontalAlignment="Left"
                                                 VerticalAlignment="Center"
                                                 FlowDirection="LeftToRight"
                                                 Visibility="Collapsed">
                                            <Canvas Width="24" Height="24">
                                                <Path x:Name="Glyph"
                                                      Data="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"
                                                      Fill="{TemplateBinding Foreground}"
                                                      FlowDirection="LeftToRight" />
                                            </Canvas>
                                        </Viewbox>
                                    </Grid>
                                    <Grid Grid.Column="1">
                                        <ContentPresenter x:Name="BoldHeaderPresenter"
                                                          VerticalAlignment="Center"
                                                          Content="{TemplateBinding Header}"
                                                          ContentSource="Header"
                                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          TextBlock.FontWeight="{StaticResource MyNet.Font.Weight.Header}"
                                                          Visibility="Hidden" />
                                        <ContentPresenter x:Name="HeaderPresenter"
                                                          VerticalAlignment="Center"
                                                          Content="{TemplateBinding Header}"
                                                          ContentSource="Header"
                                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                    <Grid x:Name="InputGestureTextWrapper" Grid.Column="2" Visibility="Collapsed">
                                        <TextBlock Margin="10 0 0 0"
                                                   HorizontalAlignment="Right"
                                                   VerticalAlignment="Center"
                                                   FontSize="{StaticResource MyNet.Font.Size.Secondary}"
                                                   Foreground="{TemplateBinding Foreground}"
                                                   Opacity="{StaticResource MyNet.Opacity.Secondary}"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                   Text="{TemplateBinding InputGestureText}"
                                                   Visibility="{TemplateBinding InputGestureText, Converter={x:Static c:NullToVisibilityConverter.CollapsedIfNull}}" />
                                    </Grid>
                                    <Grid x:Name="SubBlock"
                                          Grid.Column="2"
                                          Margin="10 0 0 0"
                                          Visibility="Collapsed">
                                        <ctrl:PackIcon Width="24"
                                                       Height="24"
                                                       HorizontalAlignment="Right"
                                                       VerticalAlignment="Center"
                                                       Foreground="{TemplateBinding Foreground}"
                                                       Kind="ChevronRight" />
                                    </Grid>
                                </Grid>
                            </Grid>
                        </ctrl:Ripple>
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(p:ShadowAssist.CacheMode)}"
                               Focusable="False"
                               IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="Fade">
                            <Grid>
                                <Border Background="White" Opacity="0.002" />
                                <ctrl:Card Style="{StaticResource MyNet.Styles.Card.Popup}" Background="{Binding Path=(p:PopupAssist.Background), RelativeSource={RelativeSource Mode=TemplatedParent}}" Foreground="{Binding Path=(p:PopupAssist.Foreground), RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                    <ctrl:DynamicScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid Margin="0 8">
                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                            Grid.IsSharedSizeScope="True"
                                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                                            KeyboardNavigation.TabNavigation="Cycle"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ctrl:DynamicScrollViewer>
                                </ctrl:Card>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--#region Roles Triggers-->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Grid.IsSharedSizeScope" Value="True" />
                            <Setter Property="Height" Value="48" />
                            <Setter Property="Padding" Value="16 0" />
                            <Setter TargetName="BackgroundRoot" Property="CornerRadius" Value="{StaticResource MyNet.CornerRadius.Container}" />
                            <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="Slide" />
                            <Setter TargetName="templateRoot" Property="CornerRadius" Value="{StaticResource MyNet.CornerRadius.Container}" />
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Height" Value="48" />
                            <Setter Property="Padding" Value="16 0" />
                            <Setter TargetName="BackgroundRoot" Property="CornerRadius" Value="{StaticResource MyNet.CornerRadius.Container}" />
                            <Setter TargetName="templateRoot" Property="CornerRadius" Value="{StaticResource MyNet.CornerRadius.Container}" />
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="Height" Value="32" />
                            <Setter TargetName="BoldHeaderPresenter" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_Popup" Property="Placement" Value="Right" />
                            <Setter TargetName="PART_Popup" Property="VerticalOffset" Value="-16" />
                            <Setter TargetName="SubBlock" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="Height" Value="32" />
                            <Setter TargetName="BoldHeaderPresenter" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="InputGestureTextWrapper" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!--#endregion-->

                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="IconWrapper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{Binding Path=(p:ThemeAssist.IsCheckedBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsCheckable" Value="True">
                            <Setter TargetName="GlyphWrapper" Property="Visibility" Value="Visible" />
                            <Setter TargetName="IconWrapper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="BackgroundRoot" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Disabled}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding Path=(p:MenuAssist.CollapseDisabledItems), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=MenuBase}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Visibility" Value="Collapsed" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="p:PopupAssist.Background" Value="{DynamicResource MyNet.Brushes.Popup.Background}" />
        <Setter Property="p:PopupAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
        <Setter Property="p:RippleAssist.Feedback" Value="{me:BrushBinding SelfPath=Foreground}" />
        <Setter Property="p:ThemeAssist.IsCheckedBackground" Value="Transparent" />
        <Setter Property="p:ThemeAssist.IsCheckedForeground" Value="{DynamicResource MyNet.Brushes.Primary}" />
        <Setter Property="p:ThemeAssist.IsMouseOverBackground" Value="{me:BrushBinding SelfPath=Foreground, Opacity={StaticResource MyNet.Opacity.Hovered}}" />
        <Setter Property="p:ThemeAssist.IsMouseOverBorderBrush" Value="Transparent" />
        <Setter Property="p:ThemeAssist.IsMouseOverForeground" Value="{me:BrushBinding SelfPath=Foreground}" />
        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Foreground" Value="{Binding Path=(p:ThemeAssist.IsMouseOverForeground), RelativeSource={RelativeSource Mode=Self}}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Foreground" Value="{Binding Path=(p:ThemeAssist.IsCheckedForeground), RelativeSource={RelativeSource Mode=Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNet.Styles.Menu" TargetType="{x:Type MenuBase}">
        <Style.Resources>
            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MyNet.Styles.MenuItem}" />
        </Style.Resources>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontFamily" Value="{me:RobotoFont}" />
        <Setter Property="FontSize" Value="{StaticResource MyNet.Font.Size.Menu}" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuBase}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="MyNet.Styles.Menu.SubMenu" TargetType="{x:Type MenuBase}" BasedOn="{StaticResource MyNet.Styles.Menu}">
        <Style.Resources>
            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MyNet.Styles.MenuItem}" />
        </Style.Resources>
        <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Popup.Background}" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuBase}">
                    <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(p:ShadowAssist.CacheMode)}">
                        <Grid>
                            <Border Background="White" Opacity="0.002" />
                            <ctrl:Card Style="{StaticResource MyNet.Styles.Card.Popup}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}">
                                <ctrl:DynamicScrollViewer x:Name="SubMenuScrollViewer">
                                    <Grid Margin="0 8">
                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                        Grid.IsSharedSizeScope="True"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                                        KeyboardNavigation.TabNavigation="Cycle"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ctrl:DynamicScrollViewer>
                            </ctrl:Card>
                        </Grid>
                    </AdornerDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyNet.Styles.Menu.Embedded" TargetType="{x:Type MenuBase}" BasedOn="{StaticResource MyNet.Styles.Menu.SubMenu}">
        <Setter Property="Margin" Value="0 8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuBase}">
                    <ctrl:DynamicScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                        <ItemsPresenter x:Name="ItemsPresenter"
                                        Grid.IsSharedSizeScope="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        KeyboardNavigation.TabNavigation="Cycle"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </ctrl:DynamicScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyNet.Styles.ContextMenu" TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource MyNet.Styles.Menu.SubMenu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
    </Style>

    <me:TextContextMenu x:Key="MyNet.ContextMenu.Text" x:Shared="False" />
</ResourceDictionary>