<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:MyNet.Wpf.Converters"
                    xmlns:ctrl="clr-namespace:MyNet.Wpf.Controls"
                    xmlns:me="clr-namespace:MyNet.Wpf.MarkupExtensions"
                    xmlns:p="clr-namespace:MyNet.Wpf.Parameters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Bases.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Base.Icons.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Controls.TextBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Controls.Menu.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="MyNet.Styles.RichTextEditor" TargetType="{x:Type ctrl:RichTextEditor}" BasedOn="{StaticResource MyNet.Styles.TextBox.Outlined}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:RichTextEditor}">
                    <Border>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <ToolBar x:Name="PART_ScrollBar"
                                     Style="{StaticResource MyNet.Styles.ToolBar}"
                                     Height="35"
                                     MinHeight="35"
                                     p:ElevationAssist.Elevation="Dp0"
                                     p:ThemeAssist.UniformCornerRadius="0"
                                     BorderBrush="{DynamicResource MyNet.Brushes.Control.Border}"
                                     BorderThickness="1 1 1 0">
                                <Button MinWidth="30"
                                        Command="EditingCommands.ToggleBold"
                                        Content="{me:ToolIcon Kind=FormatBold}"
                                        ToolTip="{me:ShortcutResource Bold,
                                                                      ShortcutKey='Ctrl+B'}" />
                                <Button MinWidth="30"
                                        Command="EditingCommands.ToggleItalic"
                                        Content="{me:ToolIcon Kind=FormatItalic}"
                                        ToolTip="{me:ShortcutResource Italic,
                                                                      ShortcutKey='Ctrl+I'}" />
                                <Button MinWidth="30"
                                        Command="EditingCommands.ToggleUnderline"
                                        Content="{me:ToolIcon Kind=FormatUnderline}"
                                        ToolTip="{me:ShortcutResource Underline,
                                                                      ShortcutKey='Ctrl+U'}" />
                                <Separator />
                                <ComboBox x:Name="PART_FontSizeComboBox"
                                          Style="{StaticResource MyNet.Styles.ComboBox.Numeric}"
                                          Width="60"
                                          p:TextFieldAssist.NextButtonContent="{StaticResource MyNet.Icons.Plus.Tool}"
                                          p:TextFieldAssist.PreviousButtonContent="{StaticResource MyNet.Icons.Minus.Tool}" />
                                <Button MinWidth="25"
                                        Command="EditingCommands.DecreaseFontSize"
                                        Content="{me:ToolIcon Kind=FormatFontSizeDecrease}"
                                        ToolTip="{me:ShortcutResource DecreaseFontSize,
                                                                      ShortcutKey='Ctrl+OemOpenBrackets'}" />
                                <Button MinWidth="25"
                                        Command="EditingCommands.IncreaseFontSize"
                                        Content="{me:ToolIcon Kind=FormatFontSizeIncrease}"
                                        ToolTip="{me:ShortcutResource IncreaseFontSize,
                                                                      ShortcutKey='Ctrl+OemCloseBrackets'}" />
                                <Separator />
                                <ctrl:DropDownButton PopupPadding="0" ToggleContent="{me:ToolIcon Kind=FormatFont}" ToolTip="{me:Resource FontFamily}">
                                    <ctrl:Submenu x:Name="PART_FontFamilyMenu" MaxHeight="300">
                                        <ctrl:Submenu.ItemContainerStyle>
                                            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MyNet.Styles.MenuItem}">
                                                <Setter Property="FontFamily" Value="{Binding}" />
                                                <Setter Property="ToolTip" Value="{Binding Header, RelativeSource={RelativeSource Self}}" />
                                            </Style>
                                        </ctrl:Submenu.ItemContainerStyle>
                                    </ctrl:Submenu>
                                </ctrl:DropDownButton>
                                <ctrl:DropDownButton PopupPadding="0" ToggleContent="{me:ToolIcon Kind=FormatColorHighlight}" ToolTip="{me:Resource Foreground}">
                                    <ctrl:Submenu x:Name="PART_ColorMenu" MaxHeight="300">
                                        <ctrl:Submenu.ItemContainerStyle>
                                            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MyNet.Styles.MenuItem}">
                                                <Setter Property="Header" Value="{Binding}" />
                                                <Setter Property="HeaderTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <ctrl:SimpleStackPanel Orientation="Horizontal">
                                                                <Border Width="14"
                                                                        Height="14"
                                                                        Margin="2"
                                                                        Background="{Binding Item}"
                                                                        CornerRadius="{StaticResource MyNet.CornerRadius.Control}"
                                                                        Effect="{StaticResource MyNet.Shadows.Elevation1}" />
                                                                <TextBlock Text="{Binding DisplayName.Value}" />
                                                            </ctrl:SimpleStackPanel>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ctrl:Submenu.ItemContainerStyle>
                                    </ctrl:Submenu>
                                </ctrl:DropDownButton>
                                <Separator />
                                <Button MinWidth="30"
                                        Command="EditingCommands.AlignLeft"
                                        Content="{me:ToolIcon Kind=FormatAlignLeft}"
                                        ToolTip="{me:ShortcutResource AlignLeft,
                                                                      ShortcutKey='Ctrl+L'}" />
                                <Button MinWidth="30"
                                        Command="EditingCommands.AlignCenter"
                                        Content="{me:ToolIcon Kind=FormatAlignCenter}"
                                        ToolTip="{me:ShortcutResource AlignCenter,
                                                                      ShortcutKey='Ctrl+E'}" />
                                <Button MinWidth="30"
                                        Command="EditingCommands.AlignRight"
                                        Content="{me:ToolIcon Kind=FormatAlignRight}"
                                        ToolTip="{me:ShortcutResource AlignRight,
                                                                      ShortcutKey='Ctrl+R'}" />
                                <Button MinWidth="30"
                                        Command="EditingCommands.AlignJustify"
                                        Content="{me:ToolIcon Kind=FormatAlignJustify}"
                                        ToolTip="{me:ShortcutResource AlignJustify,
                                                                      ShortcutKey='Ctrl+J'}" />
                                <Button MinWidth="25"
                                        Command="EditingCommands.DecreaseIndentation"
                                        Content="{me:ToolIcon Kind=FormatIndentDecrease}"
                                        ToolTip="{me:ShortcutResource DecreaseIndentation,
                                                                      ShortcutKey='Ctrl+Shift+T'}" />
                                <Button MinWidth="30"
                                        Command="EditingCommands.IncreaseIndentation"
                                        Content="{me:ToolIcon Kind=FormatIndentIncrease}"
                                        ToolTip="{me:ShortcutResource IncreaseIndentation,
                                                                      ShortcutKey='Ctrl+T'}" />
                                <Separator />
                                <Button MinWidth="30"
                                        Command="EditingCommands.ToggleBullets"
                                        Content="{me:ToolIcon Kind=FormatListBulleted}"
                                        ToolTip="{me:ShortcutResource Bullets,
                                                                      ShortcutKey='Ctrl+Shift+L'}" />
                                <Button MinWidth="25"
                                        Command="EditingCommands.ToggleNumbering"
                                        Content="{me:ToolIcon Kind=FormatListNumbered}"
                                        ToolTip="{me:ShortcutResource Numbering,
                                                                      ShortcutKey='Ctrl+Shift+N'}" />
                                <Separator />
                            </ToolBar>

                            <Grid Grid.Row="1">
                                <AdornerDecorator>
                                    <Border x:Name="border"
                                            ctrl:BottomDashedLineAdorner.Brush="{TemplateBinding BorderBrush}"
                                            ctrl:BottomDashedLineAdorner.Thickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{Binding Path=(p:ThemeAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                            SnapsToDevicePixels="True">
                                        <Grid x:Name="grid"
                                              MinWidth="1"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <ctrl:DynamicScrollViewer x:Name="PART_ContentHost"
                                                                      Panel.ZIndex="1"
                                                                      p:ScrollViewerAssist.IgnorePadding="True"
                                                                      Focusable="false"
                                                                      HorizontalScrollBarVisibility="Hidden"
                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                      UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                                                      VerticalScrollBarVisibility="Hidden" />
                                            <ctrl:SmartHint x:Name="Hint"
                                                            Margin="{TemplateBinding p:TextFieldAssist.TextBoxViewMargin}"
                                                            FloatingOffset="{TemplateBinding p:HintAssist.FloatingOffset}"
                                                            FloatingScale="{TemplateBinding p:HintAssist.FloatingScale}"
                                                            FontFamily="{TemplateBinding p:HintAssist.FontFamily}"
                                                            FontSize="{TemplateBinding FontSize}"
                                                            HintOpacity="{TemplateBinding p:HintAssist.HintOpacity}"
                                                            HintProxy="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:HintProxyFabricConverter.Default}}"
                                                            UseFloating="{TemplateBinding p:HintAssist.IsFloating}">
                                                <ctrl:SmartHint.Hint>
                                                    <Border x:Name="HintBackgroundBorder" Background="{TemplateBinding p:HintAssist.Background}" CornerRadius="{StaticResource MyNet.CornerRadius.Control}">
                                                        <ContentPresenter x:Name="HintWrapper" Content="{TemplateBinding p:HintAssist.Hint}" />
                                                    </Border>
                                                </ctrl:SmartHint.Hint>
                                            </ctrl:SmartHint>
                                        </Grid>
                                    </Border>
                                </AdornerDecorator>

                                <!-- Helper text -->
                                <Canvas VerticalAlignment="Bottom">
                                    <Grid x:Name="FooterGrid" Canvas.Top="2" Width="{Binding ActualWidth, ElementName=border}">
                                        <TextBlock x:Name="HelperTextTextBlock" Style="{Binding Path=(p:HintAssist.HelperTextStyle), RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Grid>
                                </Canvas>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <!-- IsKeyboardFocused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{Binding Path=(p:ThemeAssist.IsCheckedBorderBrush), RelativeSource={RelativeSource Self}}" />
                        </MultiTrigger>

                        <!-- IsMouseOver -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{Binding Path=(p:ThemeAssist.IsMouseOverBorderBrush), RelativeSource={RelativeSource Self}}" />
                        </MultiTrigger>

                        <!-- Validation.HasError -->
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Validation.Error}" />
                            <Setter TargetName="FooterGrid" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <!-- IsEnabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Disabled}" />
                        </Trigger>

                        <!-- IsReadOnly -->
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Opacity" Value="1" />
                            <Setter TargetName="border" Property="Opacity" Value="1" />
                            <Setter TargetName="border" Property="ctrl:BottomDashedLineAdorner.IsAttached" Value="False" />
                            <Setter TargetName="grid" Property="Opacity" Value="1" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
    </Style>
</ResourceDictionary>