<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:MyNet.Wpf.Converters"
                    xmlns:ctrl="clr-namespace:MyNet.Wpf.Controls"
                    xmlns:me="clr-namespace:MyNet.Wpf.MarkupExtensions"
                    xmlns:models="clr-namespace:MyNet.Observable;assembly=MyNet.Observable"
                    xmlns:p="clr-namespace:MyNet.Wpf.Parameters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Bases.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Controls.Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Controls.ListBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Controls.ItemsControl.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="MyNet.DataTemplates.Calendar.Appointment.Day" DataType="{x:Type models:IAppointment}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{me:Translation StartDate, Format=ShortTimePattern}" />
            <TextBlock Grid.Column="1"
                       Margin="{StaticResource MyNet.Margins.Default.Horizontal}"
                       Opacity="{StaticResource MyNet.Opacity.Secondary}"
                       Text="-" />
            <TextBlock Grid.Column="2" Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{me:Translation EndDate, Format=ShortTimePattern}" />
            <ContentPresenter Grid.Column="4" Content="{Binding}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="MyNet.DataTemplates.Calendar.Appointment.Month" DataType="{x:Type models:IAppointment}">
        <ctrl:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Default}">
            <StackPanel Opacity="{StaticResource MyNet.Opacity.Secondary}" Orientation="Horizontal">
                <TextBlock Text="{me:Translation StartDate, Format=DateDayNumberFormat}" />
            </StackPanel>
            <ContentPresenter Content="{Binding}" />
        </ctrl:SimpleStackPanel>
    </DataTemplate>
    <DataTemplate x:Key="MyNet.DataTemplates.Calendar.Appointment.Year" DataType="{x:Type models:IAppointment}">
        <ctrl:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Default}">
            <StackPanel Opacity="{StaticResource MyNet.Opacity.Secondary}" Orientation="Horizontal">
                <TextBlock Margin="0" Padding="0" Text="{me:Translation StartDate, Format=DateDayNumberFormat}" />
                <TextBlock Text="{me:Translation StartDate, Format=DateShortMonthFormat}" />
            </StackPanel>
            <ContentPresenter Content="{Binding}" />
        </ctrl:SimpleStackPanel>
    </DataTemplate>

    <Style x:Key="MyNet.Styles.CalendarAppointment" BasedOn="{StaticResource MyNet.Styles.ListBoxItem.Card}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="p:ListBoxItemAssist.IsMouseOverBackground" Value="{me:BrushBinding SelfPath=Foreground, Opacity={StaticResource MyNet.Opacity.Hovered}}" />
        <Setter Property="p:ListBoxItemAssist.IsSelectedBackground" Value="{me:BrushBinding SelfPath=Foreground, Opacity={StaticResource MyNet.Opacity.Checked}}" />
        <Setter Property="p:ListBoxItemAssist.IsSelectedForeground" Value="{me:BrushBinding SelfPath=Foreground}" />
        <Setter Property="p:ListBoxItemAssist.IsSelectedBorderBrush" Value="{DynamicResource MyNet.Brushes.Primary}" />
        <Setter Property="p:ThemeAssist.CornerRadius" Value="{StaticResource MyNet.CornerRadius.Control}" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.DaysByMonth" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="ContentTemplate" Value="{StaticResource MyNet.DataTemplates.Calendar.Appointment.Day}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.DaysByMonth.Accent" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment.DaysByMonth}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="p:ListBoxItemAssist.IsSelectedBorderBrush" Value="{DynamicResource MyNet.Brushes.Accent}" />
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.HoursByWeek" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="ContentTemplate" Value="{StaticResource MyNet.DataTemplates.Calendar.Appointment.Day}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.HoursByWeek.Accent" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment.HoursByWeek}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="p:ListBoxItemAssist.IsSelectedBorderBrush" Value="{DynamicResource MyNet.Brushes.Accent}" />
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.HoursByDay" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="ContentTemplate" Value="{StaticResource MyNet.DataTemplates.Calendar.Appointment.Day}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.HoursByDay.Accent" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment.HoursByDay}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="p:ListBoxItemAssist.IsSelectedBorderBrush" Value="{DynamicResource MyNet.Brushes.Accent}" />
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.DaysByYear" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="ContentTemplate" Value="{StaticResource MyNet.DataTemplates.Calendar.Appointment.Day}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.DaysByYear.Accent" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment.DaysByYear}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="p:ListBoxItemAssist.IsSelectedBorderBrush" Value="{DynamicResource MyNet.Brushes.Accent}" />
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.DaysRange" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="ContentTemplate" Value="{StaticResource MyNet.DataTemplates.Calendar.Appointment.Day}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.DaysRange.Accent" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment.DaysRange}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="p:ListBoxItemAssist.IsSelectedBorderBrush" Value="{DynamicResource MyNet.Brushes.Accent}" />
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.Alternate" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="p:ListBoxItemAssist.IsMouseOverBackground" Value="{me:BrushBinding SelfPath=Foreground, Opacity={StaticResource MyNet.Opacity.Hovered}}" />
        <Setter Property="p:ListBoxItemAssist.IsSelectedBackground" Value="{me:BrushBinding SelfPath=Foreground, Opacity={StaticResource MyNet.Opacity.Checked}}" />
        <Setter Property="p:ListBoxItemAssist.IsSelectedForeground" Value="{me:BrushBinding SelfPath=Foreground}" />
        <Setter Property="p:ListBoxItemAssist.IsSelectedBorderBrush" Value="{DynamicResource MyNet.Brushes.Primary}" />
        <Setter Property="p:ThemeAssist.CornerRadius" Value="0" />
        <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Control.Background}" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="0 1" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{me:BrushBinding InheritPath=(TextElement.Foreground)}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource MyNet.Styles.FocusVisualStyle.Rectangle.Margin}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:CalendarAppointment}">
                    <Border x:Name="BackBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ClipToBounds="{TemplateBinding ClipToBounds}"
                            CornerRadius="{Binding Path=(p:ThemeAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Border x:Name="MouseOverBorder"
                                    Background="{TemplateBinding p:ListBoxItemAssist.IsMouseOverBackground}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{Binding Path=(p:ThemeAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                    Opacity="0"
                                    SnapsToDevicePixels="True" />
                            <Border x:Name="SelectedBorder"
                                    Background="{TemplateBinding p:ListBoxItemAssist.IsSelectedBackground}"
                                    BorderBrush="{TemplateBinding p:ListBoxItemAssist.IsSelectedBorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{Binding Path=(p:ThemeAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                    Opacity="0"
                                    RenderTransformOrigin="0.5,0.5" />
                            <ctrl:Ripple x:Name="Ripple"
                                         Padding="{TemplateBinding Padding}"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Stretch"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         Content="{TemplateBinding Content}"
                                         ContentTemplate="{TemplateBinding ContentTemplate}"
                                         ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                         Feedback="{TemplateBinding Foreground}"
                                         Focusable="False"
                                         RecognizesAccessKey="False"
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unselected" />
                            </VisualStateGroup>
                            <VisualStateGroup Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Unfocused" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Disabled}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(p:ComboBoxAssist.ShowSelectedItem), RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Height" Value="0" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(p:ListBoxItemAssist.ShowSelection)}" Value="False">
                            <Setter TargetName="MouseOverBorder" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Ripple" Property="Feedback" Value="Transparent" />
                            <Setter TargetName="SelectedBorder" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Foreground" Value="{Binding Path=(p:ListBoxItemAssist.IsSelectedForeground), RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.Alternate.DaysByMonth" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment.Alternate}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="ContentTemplate" Value="{StaticResource MyNet.DataTemplates.Calendar.Appointment.Day}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.Alternate.DaysByMonth.Accent" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment.Alternate.DaysByMonth}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="p:ListBoxItemAssist.IsSelectedBackground" Value="{DynamicResource MyNet.Brushes.Accent}" />
        <Setter Property="p:ListBoxItemAssist.IsSelectedForeground" Value="{DynamicResource MyNet.Brushes.Accent.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.Alternate.HoursByWeek" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment.Alternate}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="ContentTemplate" Value="{StaticResource MyNet.DataTemplates.Calendar.Appointment.Day}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.Alternate.HoursByWeek.Accent" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment.Alternate.HoursByWeek}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="p:ListBoxItemAssist.IsSelectedBackground" Value="{DynamicResource MyNet.Brushes.Accent}" />
        <Setter Property="p:ListBoxItemAssist.IsSelectedForeground" Value="{DynamicResource MyNet.Brushes.Accent.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.Alternate.HoursByDay" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment.Alternate}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="ContentTemplate" Value="{StaticResource MyNet.DataTemplates.Calendar.Appointment.Day}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.Alternate.HoursByDay.Accent" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment.Alternate.HoursByDay}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="p:ListBoxItemAssist.IsSelectedBackground" Value="{DynamicResource MyNet.Brushes.Accent}" />
        <Setter Property="p:ListBoxItemAssist.IsSelectedForeground" Value="{DynamicResource MyNet.Brushes.Accent.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.Alternate.DaysByYear" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment.Alternate}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="ContentTemplate" Value="{StaticResource MyNet.DataTemplates.Calendar.Appointment.Day}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.Alternate.DaysByYear.Accent" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment.Alternate.DaysByYear}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="p:ListBoxItemAssist.IsSelectedBackground" Value="{DynamicResource MyNet.Brushes.Accent}" />
        <Setter Property="p:ListBoxItemAssist.IsSelectedForeground" Value="{DynamicResource MyNet.Brushes.Accent.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.Alternate.DaysRange" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment.Alternate}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="ContentTemplate" Value="{StaticResource MyNet.DataTemplates.Calendar.Appointment.Day}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>
    <Style x:Key="MyNet.Styles.CalendarAppointment.Alternate.DaysRange.Accent" BasedOn="{StaticResource MyNet.Styles.CalendarAppointment.Alternate.DaysRange}" TargetType="{x:Type ctrl:CalendarAppointment}">
        <Setter Property="p:ListBoxItemAssist.IsSelectedBackground" Value="{DynamicResource MyNet.Brushes.Accent}" />
        <Setter Property="p:ListBoxItemAssist.IsSelectedForeground" Value="{DynamicResource MyNet.Brushes.Accent.Foreground}" />
    </Style>

    <Style x:Key="MyNet.Styles.CalendarItem" TargetType="{x:Type ctrl:CalendarItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Control.Background}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Primary}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="{StaticResource MyNet.Margins.Default}" />
        <Setter Property="MinHeight" Value="5" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:CalendarItem}">
                    <Border Margin="{TemplateBinding Margin}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ClipToBounds="{TemplateBinding ClipToBounds}">
                        <Grid x:Name="base">
                            <Border Background="{TemplateBinding Background}" />
                            <Border x:Name="MouseOverBorder" Background="{TemplateBinding Foreground}" Opacity="0" />

                            <Border x:Name="SelectedBorder"
                                    Background="{TemplateBinding Foreground}"
                                    Opacity="0"
                                    RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <ScaleTransform ScaleX="1" />
                                </Border.RenderTransform>
                            </Border>
                            <ctrl:Ripple Padding="{TemplateBinding Padding}"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         Feedback="{TemplateBinding Foreground}"
                                         Focusable="False"
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Grid>
                                    <ContentPresenter x:Name="DayText"
                                                      HorizontalAlignment="Stretch"
                                                      VerticalAlignment="Stretch"
                                                      Content="{TemplateBinding Content}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}" />
                                    <Button x:Name="PART_AddButton"
                                            Style="{StaticResource MyNet.Styles.Button.Icon.Tool}"
                                            Grid.Column="1"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Top"
                                            Content="{me:ToolIcon Kind=Plus}"
                                            Visibility="Hidden" />
                                </Grid>
                            </ctrl:Ripple>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="{StaticResource MyNet.Opacity.Hovered}"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="{StaticResource MyNet.Opacity.Checked}"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unselected" />
                                <VisualState Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.03"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Owner.DatesSelectionMode, RelativeSource={RelativeSource Self}}" Value="None">
                            <Setter Property="p:RippleAssist.IsDisabled" Value="True" />
                        </DataTrigger>
                        <Trigger Property="IsNow" Value="True">
                            <Setter TargetName="DayText" Property="TextElement.FontWeight" Value="Bold" />
                            <Setter TargetName="DayText" Property="TextElement.Foreground" Value="{Binding Path=(p:HeaderAssist.Foreground), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsInactive" Value="True">
                            <Setter TargetName="base" Property="Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="base" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_AddButton" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Owner.AddCommand, RelativeSource={RelativeSource Self}, Converter={x:Static c:NullToBooleanConverter.TrueIfNull}}" Value="True">
                            <Setter TargetName="PART_AddButton" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsLastOfWeek, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Owner.LastDayOfWeekIsHighlighted, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{me:BrushBinding SelfPath=Foreground, Opacity={StaticResource MyNet.Opacity.Filled}}" />
            </MultiDataTrigger>
            <Trigger Property="IsNow" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Primary}" />
                <Setter Property="BorderThickness" Value="2" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MyNet.Styles.CalendarItem.DaysByMonth" BasedOn="{StaticResource MyNet.Styles.CalendarItem}" TargetType="{x:Type ctrl:CalendarItem}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding Converter={x:Static c:DayNumberToStringConverter.ToTitle}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MyNet.Styles.CalendarItem.HoursByWeek" BasedOn="{StaticResource MyNet.Styles.CalendarItem}" TargetType="{x:Type ctrl:CalendarItem}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MyNet.Styles.CalendarItem.HoursByDay" BasedOn="{StaticResource MyNet.Styles.CalendarItem}" TargetType="{x:Type ctrl:CalendarItem}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MyNet.Styles.CalendarItem.DaysByYear" BasedOn="{StaticResource MyNet.Styles.CalendarItem}" TargetType="{x:Type ctrl:CalendarItem}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ctrl:SimpleStackPanel HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Orientation="Horizontal"
                                           Spacing="{StaticResource MyNet.Margin.Default}">
                        <TextBlock Text="{me:Translation Format='dd'}" />
                        <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Text="{me:Translation Format='ddd', Casing=Title}" Typography.Capitals="AllSmallCaps" />
                    </ctrl:SimpleStackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MyNet.Styles.CalendarItem.DaysRange" BasedOn="{StaticResource MyNet.Styles.CalendarItem}" TargetType="{x:Type ctrl:CalendarItem}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ctrl:SimpleStackPanel Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Default}">
                        <TextBlock Opacity="{StaticResource MyNet.Opacity.Secondary}" Text="{me:Translation Format=ddd}" Typography.Capitals="AllSmallCaps" />
                        <TextBlock Text="{Binding Converter={x:Static c:DayNumberToStringConverter.ToTitle}}" />
                    </ctrl:SimpleStackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyNet.Styles.ContentControl.Calendar.DaysByYear.Week" TargetType="{x:Type ContentControl}">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="TextBlock.FontWeight" Value="{StaticResource MyNet.Font.Weight.Header}" />
        <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
        <Setter Property="TextBlock.FontSize" Value="{StaticResource MyNet.Font.Size.Caption}" />
        <Setter Property="Margin" Value="{StaticResource MyNet.Margins.Default}" />
    </Style>

    <Style x:Key="MyNet.Styles.CalendarItemsControl" TargetType="{x:Type ctrl:CalendarItemsControl}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Contained" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <ctrl:CalendarPanel BorderBrush="{Binding InnerBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type ctrl:CalendarBase}}}"
                                        BorderThickess="{Binding InnerBorderThickess, RelativeSource={RelativeSource AncestorType={x:Type ctrl:CalendarBase}}}"
                                        Columns="{Binding ColumnsCount, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ctrl:CalendarBase}}}"
                                        IsItemsHost="True"
                                        Rows="{Binding RowsCount, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ctrl:CalendarBase}}}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyNet.Styles.Calendar" TargetType="{x:Type ctrl:CalendarBase}">
        <Setter Property="Foreground" Value="{me:BrushBinding InheritPath=(TextElement.Foreground)}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Control.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="InnerBorderBrush">
            <Setter.Value>
                <SolidColorBrush Opacity="{StaticResource MyNet.Opacity.Secondary}" Color="{DynamicResource MyNet.Colors.Control.Border}" />
            </Setter.Value>
        </Setter>
        <Setter Property="InnerBorderThickess" Value="1" />
        <Setter Property="HorizontalAlignment" Value="{StaticResource MyNet.HorizontalAlignment.Container}" />
        <Setter Property="VerticalAlignment" Value="{StaticResource MyNet.VerticalAlignment.Container}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="CalendarItemStyle" Value="{StaticResource MyNet.Styles.CalendarItem}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment}" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="p:HeaderAssist.FontWeight" Value="{StaticResource MyNet.Font.Weight.Header}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{me:BrushBinding InheritPath=(TextElement.Foreground)}" />
        <Setter Property="p:HeaderAssist.Opacity" Value="{DynamicResource MyNet.Opacity.Secondary}" />
        <Setter Property="p:HeaderAssist.Height" Value="35" />
        <Setter Property="p:HeaderAssist.Width" Value="50" />
        <Setter Property="p:HeaderAssist.Background" Value="{DynamicResource MyNet.Brushes.Control.Border}" />
        <Setter Property="AppointmentsSpacing" Value="{StaticResource MyNet.Margin.Small}" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{me:Translation Casing=AllCaps, Format='MMMM yyyy'}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="AccurateDateTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Rectangle Height="2" VerticalAlignment="Top" Fill="{me:BrushBinding InheritPath=(TextElement.Foreground)}" />
                        <TextBlock Margin="0 -15 0 0" VerticalAlignment="Top" Text="{me:Translation Format='HH:mm'}" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="AccurateDateForeground" Value="{DynamicResource MyNet.Brushes.Primary}" />
        <Setter Property="AccurateDatePreviewOpacity" Value="{StaticResource MyNet.Opacity.Overlay}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <ctrl:AppointmentsPanel HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            IsItemsHost="True"
                                            Orientation="{Binding ItemsOrientation, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ctrl:CalendarBase}}}"
                                            Spacing="{Binding AppointmentsSpacing, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ctrl:CalendarBase}}}"
                                            Owner="{Binding RelativeSource={RelativeSource AncestorType={x:Type ctrl:CalendarBase}}}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:CalendarBase}">
                    <DockPanel>
                        <!--  Header  -->
                        <ctrl:SimpleStackPanel Margin="{StaticResource MyNet.Margins.Medium.Bottom}"
                                               HorizontalAlignment="Right"
                                               DockPanel.Dock="Top"
                                               Orientation="Horizontal"
                                               Spacing="{StaticResource MyNet.Margin.Large}"
                                               Visibility="{Binding ShowHeader, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                            <ContentControl VerticalAlignment="Center"
                                            Content="{Binding DisplayDate, RelativeSource={RelativeSource TemplatedParent}}"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            FontSize="{StaticResource MyNet.Font.Size.Caption}"
                                            FontWeight="DemiBold" />
                            <StackPanel Orientation="Horizontal">
                                <Button x:Name="PART_PreviousButton"
                                        Style="{StaticResource MyNet.Styles.Button.Filled}"
                                        Padding="6 1"
                                        VerticalAlignment="Stretch"
                                        p:ThemeAssist.CornerRadius="2 0 0 2"
                                        BorderThickness="1 1 0 1"
                                        Content="{me:MediumIcon Kind=ChevronLeft}"
                                        ToolTip="{me:Resource Previous}" />
                                <Button x:Name="PART_TodayButton"
                                        Style="{StaticResource MyNet.Styles.Button.Filled}"
                                        VerticalAlignment="Stretch"
                                        p:ThemeAssist.CornerRadius="0"
                                        BorderThickness="0 1 0 1"
                                        Content="{me:Resource Today,
                                                              Casing=AllCaps}" />
                                <Button x:Name="PART_NextButton"
                                        Style="{StaticResource MyNet.Styles.Button.Filled}"
                                        Padding="6 1"
                                        VerticalAlignment="Stretch"
                                        p:ThemeAssist.CornerRadius="0 2 2 0"
                                        BorderThickness="0 1 1 1"
                                        Content="{me:MediumIcon Kind=ChevronRight}"
                                        ToolTip="{me:Resource Next}" />
                            </StackPanel>
                        </ctrl:SimpleStackPanel>

                        <!--  Calendar  -->
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <DockPanel Grid.IsSharedSizeScope="True">
                                <Grid DockPanel.Dock="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="rowHeadersColumn" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <!--  Column headers  -->
                                    <ItemsControl x:Name="PART_ColumnHeaders"
                                                  Style="{StaticResource MyNet.Styles.ItemsControl}"
                                                  Grid.Column="1"
                                                  Height="{Binding Path=(p:HeaderAssist.Height), RelativeSource={RelativeSource TemplatedParent}}"
                                                  Background="{Binding Path=(p:HeaderAssist.Background), RelativeSource={RelativeSource TemplatedParent}}"
                                                  Focusable="False"
                                                  FontWeight="{Binding Path=(p:HeaderAssist.FontWeight), RelativeSource={RelativeSource TemplatedParent}}"
                                                  Foreground="{Binding Path=(p:HeaderAssist.Foreground), RelativeSource={RelativeSource TemplatedParent}}"
                                                  IsTabStop="False"
                                                  ItemTemplate="{TemplateBinding ColumnHeaderTemplate}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <UniformGrid Rows="1" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </Grid>

                                <!--  Content  -->
                                <ctrl:DynamicScrollViewer Padding="0"
                                                          CanContentScroll="True"
                                                          Focusable="False"
                                                          HorizontalScrollBarVisibility="Disabled"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="rowHeadersColumn" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <!--  Row headers  -->
                                        <ItemsControl x:Name="PART_RowHeaders"
                                                      Style="{StaticResource MyNet.Styles.ItemsControl}"
                                                      Grid.Column="0"
                                                      Width="{Binding Path=(p:HeaderAssist.Width), RelativeSource={RelativeSource TemplatedParent}}"
                                                      Background="{Binding Path=(p:HeaderAssist.Background), RelativeSource={RelativeSource TemplatedParent}}"
                                                      Focusable="False"
                                                      FontWeight="{Binding Path=(p:HeaderAssist.FontWeight), RelativeSource={RelativeSource TemplatedParent}}"
                                                      Foreground="{Binding Path=(p:HeaderAssist.Foreground), RelativeSource={RelativeSource TemplatedParent}}"
                                                      IsTabStop="False"
                                                      ItemTemplate="{TemplateBinding RowHeaderTemplate}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <UniformGrid Columns="1" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>

                                        <!--  Calendar items  -->
                                        <ctrl:CalendarItemsControl x:Name="PART_DatesItemsControl"
                                                                   Style="{StaticResource MyNet.Styles.CalendarItemsControl}"
                                                                   Grid.Column="1"
                                                                   ItemContainerStyle="{TemplateBinding CalendarItemStyle}" />

                                        <!--  Grid used fot extra content (i.e. Week number)  -->
                                        <Grid x:Name="PART_Grid"
                                              Grid.Column="1"
                                              p:GridAssist.ColumnCount="{Binding ColumnsCount, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ctrl:CalendarBase}}}"
                                              p:GridAssist.RowCount="{Binding RowsCount, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ctrl:CalendarBase}}}">
                                            <ContentControl x:Name="PART_AccurateDatePreview"
                                                            HorizontalAlignment="Stretch"
                                                            VerticalAlignment="Top"
                                                            Content="{Binding AccurateDatePreview, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ctrl:CalendarBase}}}"
                                                            ContentTemplate="{TemplateBinding AccurateDateTemplate}"
                                                            Foreground="{TemplateBinding AccurateDateForeground}"
                                                            IsHitTestVisible="False"
                                                            Opacity="{TemplateBinding AccurateDatePreviewOpacity}">
                                                <ContentControl.Visibility>
                                                    <MultiBinding Converter="{x:Static c:MultipleBooleanToVisibilityConverter.AndCollapse}">
                                                        <Binding Path="ShowAccurateDate" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Converter="{x:Static c:NullToBooleanConverter.FalseIfNull}"
                                                                 Mode="OneWay"
                                                                 Path="AccurateDatePreview"
                                                                 RelativeSource="{RelativeSource TemplatedParent}" />
                                                    </MultiBinding>
                                                </ContentControl.Visibility>
                                            </ContentControl>
                                            <ContentControl x:Name="PART_AccurateDate"
                                                            HorizontalAlignment="Stretch"
                                                            VerticalAlignment="Stretch"
                                                            Content="{TemplateBinding AccurateDate}"
                                                            ContentTemplate="{TemplateBinding AccurateDateTemplate}"
                                                            Foreground="{TemplateBinding AccurateDateForeground}"
                                                            IsHitTestVisible="False">
                                                <ContentControl.Visibility>
                                                    <MultiBinding Converter="{x:Static c:MultipleBooleanToVisibilityConverter.AndCollapse}">
                                                        <Binding Path="ShowAccurateDate" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="AccurateDateIsVisible" Mode="OneWay" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Converter="{x:Static c:NullToBooleanConverter.FalseIfNull}" Path="AccurateDate" RelativeSource="{RelativeSource TemplatedParent}" />
                                                    </MultiBinding>
                                                </ContentControl.Visibility>
                                            </ContentControl>
                                        </Grid>

                                        <!--  Appointment items  -->
                                        <ItemsPresenter Grid.Column="1" Visibility="{Binding AppointmentsDisplayMode, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static ctrl:AppointmentsDisplayMode.Range}}" />
                                    </Grid>
                                </ctrl:DynamicScrollViewer>
                            </DockPanel>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Disabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyNet.Styles.Calendar.DaysByMonth" BasedOn="{StaticResource MyNet.Styles.Calendar}" TargetType="{x:Type ctrl:CalendarDaysByMonth}">
        <Setter Property="ColumnHeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Margin="{StaticResource MyNet.Margins.Default}" Text="{me:Translation Converter={x:Static c:DayOfWeekStringConverter.ToTitle}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CalendarItemStyle" Value="{StaticResource MyNet.Styles.CalendarItem.DaysByMonth}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment.DaysByMonth}" />
        <Setter Property="AppointmentsMargin" Value="2 25 2 2" />
    </Style>
    <Style x:Key="MyNet.Styles.Calendar.DaysByMonth.Accent" BasedOn="{StaticResource MyNet.Styles.Calendar.DaysByMonth}" TargetType="{x:Type ctrl:CalendarDaysByMonth}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment.DaysByMonth.Accent}" />
    </Style>
    <Style x:Key="MyNet.Styles.Calendar.DaysByMonth.Alternate" BasedOn="{StaticResource MyNet.Styles.Calendar.DaysByMonth}" TargetType="{x:Type ctrl:CalendarDaysByMonth}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment.Alternate.DaysByMonth}" />
        <Setter Property="AppointmentsMargin" Value="0 25 0 2" />
    </Style>
    <Style x:Key="MyNet.Styles.Calendar.DaysByMonth.Alternate.Accent" BasedOn="{StaticResource MyNet.Styles.Calendar.DaysByMonth}" TargetType="{x:Type ctrl:CalendarDaysByMonth}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment.Alternate.DaysByMonth.Accent}" />
    </Style>

    <Style x:Key="MyNet.Styles.Calendar.HoursByWeek" BasedOn="{StaticResource MyNet.Styles.Calendar}" TargetType="{x:Type ctrl:CalendarHoursByWeek}">
        <Setter Property="BorderThickness" Value="0 0 1 1" />
        <Setter Property="ColumnHeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ctrl:SimpleStackPanel Margin="{StaticResource MyNet.Margins.Default}"
                                           VerticalAlignment="Center"
                                           Orientation="Horizontal"
                                           Spacing="{StaticResource MyNet.Margin.Default}">
                        <TextBlock Text="{me:Translation Converter={x:Static c:DayOfWeekStringConverter.ToTitle}}" />
                        <TextBlock Text="{me:Translation Converter={x:Static c:DayNumberToStringConverter.ToTitle}}" />
                    </ctrl:SimpleStackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RowHeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Margin="{StaticResource MyNet.Margins.Default}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Top"
                               Text="{Binding Converter={x:Static c:TimeSpanToDateTimeConverter.Default}, StringFormat='HH:mm'}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CalendarItemStyle" Value="{StaticResource MyNet.Styles.CalendarItem.HoursByWeek}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment.HoursByWeek}" />
        <Setter Property="AppointmentsMargin" Value="2" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ctrl:SimpleStackPanel Orientation="Horizontal">
                        <TextBlock Tag="{Binding Converter={x:Static c:DateToWeekConverter.ToStartWeek}}" Text="{me:Translation Path=Tag, RelativeSource={RelativeSource Self}, Casing=Title, Format='dd MMMM'}" />
                        <TextBlock Text="-" />
                        <TextBlock Tag="{Binding Converter={x:Static c:DateToWeekConverter.ToEndWeek}}" Text="{me:Translation Path=Tag, RelativeSource={RelativeSource Self}, Casing=Title, Format='dd MMMM yyyy'}" />
                    </ctrl:SimpleStackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MyNet.Styles.Calendar.HoursByWeek.Accent" BasedOn="{StaticResource MyNet.Styles.Calendar.HoursByWeek}" TargetType="{x:Type ctrl:CalendarHoursByWeek}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment.HoursByWeek.Accent}" />
    </Style>
    <Style x:Key="MyNet.Styles.Calendar.HoursByWeek.Alternate" BasedOn="{StaticResource MyNet.Styles.Calendar.HoursByWeek}" TargetType="{x:Type ctrl:CalendarHoursByWeek}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment.Alternate.HoursByWeek}" />
        <Setter Property="AppointmentsMargin" Value="0" />
    </Style>
    <Style x:Key="MyNet.Styles.Calendar.HoursByWeek.Alternate.Accent" BasedOn="{StaticResource MyNet.Styles.Calendar.HoursByWeek.Alternate}" TargetType="{x:Type ctrl:CalendarHoursByWeek}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment.Alternate.HoursByWeek.Accent}" />
    </Style>

    <Style x:Key="MyNet.Styles.Calendar.HoursByDay" BasedOn="{StaticResource MyNet.Styles.Calendar}" TargetType="{x:Type ctrl:CalendarHoursByDay}">
        <Setter Property="BorderThickness" Value="0 0 1 1" />
        <Setter Property="ColumnHeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ctrl:SimpleStackPanel Margin="{StaticResource MyNet.Margins.Default}"
                                           VerticalAlignment="Center"
                                           Orientation="Horizontal"
                                           Spacing="{StaticResource MyNet.Margin.Default}">
                        <TextBlock Text="{me:Translation Converter={x:Static c:DayOfWeekStringConverter.ToTitle}}" />
                        <TextBlock Text="{me:Translation Converter={x:Static c:DayNumberToStringConverter.ToTitle}}" />
                    </ctrl:SimpleStackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RowHeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Margin="{StaticResource MyNet.Margins.Default}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Top"
                               Text="{Binding Converter={x:Static c:TimeSpanToDateTimeConverter.Default}, StringFormat='HH:mm'}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CalendarItemStyle" Value="{StaticResource MyNet.Styles.CalendarItem.HoursByDay}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment.HoursByDay}" />
        <Setter Property="AppointmentsMargin" Value="2" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ctrl:SimpleStackPanel Orientation="Horizontal">
                        <TextBlock Text="{me:Translation Path=DisplayDateStart, RelativeSource={RelativeSource AncestorType={x:Type ctrl:CalendarBase}}, Casing=Title, Format='dd MMMM'}" />
                        <TextBlock Text="-" />
                        <TextBlock Text="{me:Translation Path=DisplayDateEnd, RelativeSource={RelativeSource AncestorType={x:Type ctrl:CalendarBase}}, Casing=Title, Format='dd MMMM yyyy'}" />
                    </ctrl:SimpleStackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MyNet.Styles.Calendar.HoursByDay.Accent" BasedOn="{StaticResource MyNet.Styles.Calendar.HoursByDay}" TargetType="{x:Type ctrl:CalendarHoursByDay}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment.HoursByDay.Accent}" />
    </Style>
    <Style x:Key="MyNet.Styles.Calendar.HoursByDay.Alternate" BasedOn="{StaticResource MyNet.Styles.Calendar.HoursByDay}" TargetType="{x:Type ctrl:CalendarHoursByDay}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment.Alternate.HoursByDay}" />
        <Setter Property="AppointmentsMargin" Value="0" />
    </Style>
    <Style x:Key="MyNet.Styles.Calendar.HoursByDay.Alternate.Accent" BasedOn="{StaticResource MyNet.Styles.Calendar.HoursByDay.Alternate}" TargetType="{x:Type ctrl:CalendarHoursByDay}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment.Alternate.HoursByDay.Accent}" />
    </Style>

    <Style x:Key="MyNet.Styles.Calendar.DaysByYear" BasedOn="{StaticResource MyNet.Styles.Calendar}" TargetType="{x:Type ctrl:CalendarDaysByYear}">
        <Setter Property="ColumnHeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Margin="{StaticResource MyNet.Margins.Default}" Text="{me:Translation Format='MMMM', Casing=AllCaps}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CalendarItemStyle" Value="{StaticResource MyNet.Styles.CalendarItem.DaysByYear}" />
        <Setter Property="WeekStyle" Value="{StaticResource MyNet.Styles.ContentControl.Calendar.DaysByYear.Week}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment.DaysByYear}" />
        <Setter Property="AppointmentsMargin" Value="25 2 2 2" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{me:Translation Casing=AllCaps, Format='yyyy'}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MyNet.Styles.Calendar.DaysByYear.Accent" BasedOn="{StaticResource MyNet.Styles.Calendar.DaysByYear}" TargetType="{x:Type ctrl:CalendarDaysByYear}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment.DaysByYear.Accent}" />
    </Style>
    <Style x:Key="MyNet.Styles.Calendar.DaysByYear.Alternate" BasedOn="{StaticResource MyNet.Styles.Calendar.DaysByYear}" TargetType="{x:Type ctrl:CalendarDaysByYear}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment.Alternate.DaysByYear}" />
        <Setter Property="AppointmentsMargin" Value="25 0 0 0" />
    </Style>
    <Style x:Key="MyNet.Styles.Calendar.DaysByYear.Alternate.Accent" BasedOn="{StaticResource MyNet.Styles.Calendar.DaysByYear.Alternate}" TargetType="{x:Type ctrl:CalendarDaysByYear}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment.Alternate.DaysByYear.Accent}" />
    </Style>

    <Style x:Key="MyNet.Styles.Calendar.DaysRange" BasedOn="{StaticResource MyNet.Styles.Calendar}" TargetType="{x:Type ctrl:CalendarDaysRange}">
        <Setter Property="CalendarItemStyle" Value="{StaticResource MyNet.Styles.CalendarItem.DaysRange}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment.DaysRange}" />
        <Setter Property="AppointmentsMargin" Value="2 25 2 2" />
    </Style>
    <Style x:Key="MyNet.Styles.Calendar.DaysRange.Accent" BasedOn="{StaticResource MyNet.Styles.Calendar.DaysRange}" TargetType="{x:Type ctrl:CalendarDaysRange}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment.DaysRange.Accent}" />
    </Style>
    <Style x:Key="MyNet.Styles.Calendar.DaysRange.Alternate" BasedOn="{StaticResource MyNet.Styles.Calendar.DaysRange}" TargetType="{x:Type ctrl:CalendarDaysRange}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment.Alternate.DaysRange}" />
        <Setter Property="AppointmentsMargin" Value="0 25 0 2" />
    </Style>
    <Style x:Key="MyNet.Styles.Calendar.DaysRange.Alternate.Accent" BasedOn="{StaticResource MyNet.Styles.Calendar.DaysRange.Alternate}" TargetType="{x:Type ctrl:CalendarDaysRange}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.CalendarAppointment.Alternate.DaysRange.Accent}" />
    </Style>

</ResourceDictionary>