<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:MyNet.Wpf.Converters"
                    xmlns:controlzEx="urn:controlzex"
                    xmlns:ctrl="clr-namespace:MyNet.Wpf.Controls"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:me="clr-namespace:MyNet.Wpf.MarkupExtensions"
                    xmlns:p="clr-namespace:MyNet.Wpf.Parameters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Bases.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Controls.Thumb.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Mahapps.WindowButtonCommands.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="MyNet.Styles.ExtendedWindow" TargetType="{x:Type ctrl:ExtendedWindow}" BasedOn="{StaticResource {x:Type Window}}">
        <Style.Resources>
            <Style TargetType="{x:Type mah:WindowButtonCommands}" BasedOn="{StaticResource MyNet.Styles.WindowButtonCommands}" />
        </Style.Resources>

        <Setter Property="AllowDrop" Value="True" />

        <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Application.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Application.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontFamily" Value="{me:RobotoFont}" />
        <Setter Property="FontSize" Value="{StaticResource MyNet.Font.Size}" />
        <Setter Property="FontWeight" Value="{StaticResource MyNet.Font.Weight}" />
        <Setter Property="GlowColor" Value="{DynamicResource MyNet.Colors.Application.Border}" />

        <Setter Property="Height" Value="600" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="MinHeight" Value="320" />
        <Setter Property="MinWidth" Value="460" />
        <Setter Property="NonActiveBorderBrush" Value="{DynamicResource MyNet.Brushes.Application.Border.Inactive}" />
        <Setter Property="NonActiveGlowColor" Value="{DynamicResource MyNet.Colors.Application.Border.Inactive}" />
        <Setter Property="NonActiveWindowTitleBrush" Value="Transparent" />

        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="0" />

        <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant" />
        <Setter Property="RenderOptions.CachingHint" Value="Cache" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="RenderOptions.EdgeMode" Value="Unspecified" />
        <Setter Property="ResizeBorderThickness" Value="6" />
        <Setter Property="ShowIconOnTitleBar" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:ExtendedWindow}">
                    <Grid Background="{TemplateBinding Background}"
                          LayoutTransform="{Binding LayoutTransform, RelativeSource={RelativeSource TemplatedParent}}"
                          RenderTransform="{Binding RenderTransform, RelativeSource={RelativeSource TemplatedParent}}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          UseLayoutRounding="True">
                        <AdornerDecorator>
                            <Grid UseLayoutRounding="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={x:Static c:ThicknessToDoubleConverter.Left}}" />
                                    <!-- icon -->
                                    <ColumnDefinition Width="Auto" />
                                    <!-- left window commands, title, right window commands -->
                                    <ColumnDefinition Width="*" />
                                    <!-- min,max,close buttons -->
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={x:Static c:ThicknessToDoubleConverter.Right}}" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={x:Static c:ThicknessToDoubleConverter.Top}}" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Rectangle x:Name="PART_WindowTitleBackground"
                                           Grid.Row="1"
                                           Grid.Column="1"
                                           Grid.ColumnSpan="3"
                                           Fill="{TemplateBinding WindowTitleBrush}"
                                           Focusable="False"
                                           StrokeThickness="0" />

                                <!-- icon -->
                                <ContentControl x:Name="PART_Icon"
                                                Grid.Row="1"
                                                Grid.Column="1"
                                                Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                MinWidth="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                Padding="10"
                                                HorizontalContentAlignment="Stretch"
                                                VerticalContentAlignment="Stretch"
                                                Panel.ZIndex="6"
                                                Content="{TemplateBinding Icon}"
                                                ContentTemplate="{TemplateBinding IconTemplate}"
                                                Focusable="False"
                                                Foreground="{TemplateBinding TitleForeground}"
                                                Visibility="{TemplateBinding ShowIconOnTitleBar, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}" />

                                <mah:MetroThumb x:Name="PART_WindowTitleThumb"
                                                Style="{StaticResource MyNet.Styles.Thumb}"
                                                Grid.Row="1"
                                                Grid.Column="0"
                                                Grid.ColumnSpan="5"
                                                Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                                VerticalAlignment="Top"
                                                Panel.ZIndex="6"
                                                UseLayoutRounding="True" />

                                <DockPanel Grid.Row="1"
                                           Grid.Column="2"
                                           VerticalAlignment="Top"
                                           Panel.ZIndex="6"
                                           Focusable="False">
                                    <!-- the left window commands -->
                                    <mah:ContentPresenterEx x:Name="PART_LeftWindowCommands"
                                                            Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                            VerticalAlignment="Top"
                                                            Content="{Binding LeftWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                            DockPanel.Dock="Left"
                                                            Focusable="False"
                                                            TextElement.Foreground="{TemplateBinding TitleForeground}" />
                                    <!-- the right window commands -->
                                    <mah:ContentPresenterEx x:Name="PART_RightWindowCommands"
                                                            Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                            VerticalAlignment="Top"
                                                            Content="{Binding RightWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                            DockPanel.Dock="Right"
                                                            Focusable="False"
                                                            TextElement.Foreground="{TemplateBinding TitleForeground}" />
                                    <!-- the title bar -->
                                    <mah:MetroThumbContentControl x:Name="PART_TitleBar"
                                                                  Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                                  HorizontalAlignment="{TemplateBinding TitleAlignment}"
                                                                  HorizontalContentAlignment="Stretch"
                                                                  VerticalContentAlignment="Stretch"
                                                                  Content="{TemplateBinding Title}"
                                                                  ContentCharacterCasing="{TemplateBinding TitleCharacterCasing}"
                                                                  ContentTemplate="{TemplateBinding TitleTemplate}"
                                                                  Focusable="False"
                                                                  Foreground="{TemplateBinding Foreground}" />
                                </DockPanel>

                                <!-- the window button commands -->
                                <mah:ContentPresenterEx x:Name="PART_WindowButtonCommands"
                                                        Grid.Row="1"
                                                        Grid.RowSpan="2"
                                                        Grid.Column="3"
                                                        Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                        VerticalAlignment="Top"
                                                        Panel.ZIndex="6"
                                                        Content="{Binding WindowButtonCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                        Focusable="False"
                                                        TextElement.Foreground="{TemplateBinding TitleForeground}" />

                                <!-- the main window content -->
                                <mah:MetroContentControl x:Name="PART_Content"
                                                         Grid.Row="2"
                                                         Grid.Column="0"
                                                         Grid.ColumnSpan="5"
                                                         FocusVisualStyle="{x:Null}"
                                                         IsTabStop="False"
                                                         OnlyLoadTransition="True"
                                                         TransitionsEnabled="{TemplateBinding WindowTransitionsEnabled}"
                                                         UseLayoutRounding="True">
                                    <mah:ContentPresenterEx x:Name="PART_ContentPresenter" UseLayoutRounding="False" />
                                </mah:MetroContentControl>

                                <!-- disables the main content when a modal flyout is shown -->
                                <Rectangle Name="PART_FlyoutModal"
                                           Grid.Row="1"
                                           Grid.RowSpan="2"
                                           Grid.Column="1"
                                           Grid.ColumnSpan="3"
                                           Fill="{TemplateBinding FlyoutOverlayBrush}"
                                           Visibility="Hidden" />

                                <!-- Busy container -->
                                <Grid Grid.Row="1"
                                      Grid.RowSpan="2"
                                      Grid.Column="1"
                                      Grid.ColumnSpan="3"
                                      Panel.ZIndex="5"
                                      p:BusyAssist.AssociatedControl="{Binding ElementName=PART_Content}"
                                      p:BusyAssist.AttachService="{TemplateBinding BusyService}"
                                      FocusVisualStyle="{x:Null}"
                                      Visibility="{Binding BusyService, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:NullToVisibilityConverter.CollapsedIfNull}}" />

                                <!-- Dialog container -->
                                <Grid x:Name="PART_MetroActiveDialogContainer"
                                      Grid.Row="1"
                                      Grid.RowSpan="2"
                                      Grid.Column="1"
                                      Grid.ColumnSpan="3"
                                      Panel.ZIndex="5"
                                      p:DialogAssist.AssociatedControl="{Binding ElementName=PART_Content}"
                                      p:DialogAssist.AttachService="{TemplateBinding DialogService}"
                                      FocusVisualStyle="{x:Null}"
                                      Visibility="{Binding DialogService, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:NullToVisibilityConverter.CollapsedIfNull}}" />
                            </Grid>
                        </AdornerDecorator>

                        <Border x:Name="PART_Border"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{x:Null}"
                                BorderBrush="{Binding GlowColor, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:BrushConverter.Default}}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                UseLayoutRounding="True" />

                        <ResizeGrip x:Name="WindowResizeGrip"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    controlzEx:WindowChrome.ResizeGripDirection="BottomRight"
                                    IsTabStop="False"
                                    UseLayoutRounding="True"
                                    Visibility="Collapsed" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowTitleBar" Value="False">
                            <Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />
                        </Trigger>
                        <!-- handle active/inactive state -->
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveGlowColor, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:BrushConverter.Default}}" />
                            <Setter TargetName="PART_Icon" Property="Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
                            <Setter TargetName="PART_LeftWindowCommands" Property="Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
                            <Setter TargetName="PART_RightWindowCommands" Property="Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
                            <Setter TargetName="PART_TitleBar" Property="Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
                            <Setter TargetName="PART_WindowButtonCommands" Property="Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
                            <Setter TargetName="PART_WindowTitleBackground" Property="Fill" Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="False" />
                                <Condition Property="GlowColor" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveBorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="True" />
                                <Condition Property="GlowColor" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=BorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="TextElement.Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
        <Setter Property="TitleAlignment" Value="Stretch" />
        <Setter Property="TitleBarHeight" Value="30" />
        <Setter Property="TitleCharacterCasing" Value="Normal" />
        <Setter Property="TitleForeground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
        <Setter Property="TitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Margin="{StaticResource MyNet.Margins.Default.Left}"
                               VerticalAlignment="Center"
                               Text="{TemplateBinding Content}"
                               TextTrimming="CharacterEllipsis" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Width" Value="1100" />

        <Setter Property="WindowTitleBrush" Value="Transparent" />
        <Setter Property="WindowTransitionsEnabled" Value="True" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Icon, Mode=OneWay, Converter={x:Static c:NullToBooleanConverter.FalseIfNull}}" Value="True">
                <Setter Property="IconTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <mah:MultiFrameImage Width="{TemplateBinding Width}"
                                                 Height="{TemplateBinding Height}"
                                                 Margin="{StaticResource MyNet.Margins.Default}"
                                                 MultiFrameImageMode="{Binding IconScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:MetroWindow}}}"
                                                 RenderOptions.BitmapScalingMode="{Binding IconBitmapScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:MetroWindow}}}"
                                                 RenderOptions.EdgeMode="{Binding IconEdgeMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:MetroWindow}}}"
                                                 Source="{TemplateBinding Content}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNet.Styles.ExtendedWindowDialog" TargetType="{x:Type ctrl:ExtendedWindowDialog}" BasedOn="{StaticResource MyNet.Styles.ExtendedWindow}">
        <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Dialog.Background}" />
        <!--<Setter Property="NonActiveWindowTitleBrush" Value="{DynamicResource MyNet.Brushes.Application.Background.Light}" />-->
        <Setter Property="ShowTitleBar" Value="False" />
        <!--<Setter Property="WindowTitleBrush" Value="{DynamicResource MyNet.Brushes.Application.Background.Light}" />-->
    </Style>
</ResourceDictionary>
