<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:busy="clr-namespace:MyNet.UI.Busy.Models;assembly=MyNet.UI"
                    xmlns:c="clr-namespace:MyNet.Wpf.Converters"
                    xmlns:ctrl="clr-namespace:MyNet.Wpf.Controls"
                    xmlns:me="clr-namespace:MyNet.Wpf.MarkupExtensions"
                    xmlns:p="clr-namespace:MyNet.Wpf.Parameters"
                    xmlns:s="clr-namespace:MyNet.Wpf.Selectors">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Bases.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Controls.ProgressBar.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="MyNet.DataTemplates.IndeterminateBusy">
        <ctrl:SimpleStackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Spacing="{StaticResource MyNet.Margin.VeryLarge}">

            <ProgressBar x:Name="ProgressBar"
                         Style="{StaticResource MyNet.Styles.ProgressBar.Circular.Foreground}"
                         Width="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ctrl:BusyControl}}, Converter={x:Static c:MathConverter.Multiply}, ConverterParameter=0.25}"
                         Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ctrl:BusyControl}}, Converter={x:Static c:MathConverter.Multiply}, ConverterParameter=0.25}"
                         Margin="{StaticResource MyNet.Margins.Medium}"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         p:ProgressBarAssist.ShowSecondProgress="{Binding IsCancelling, Converter={x:Static c:NotBooleanConverter.Default}}"
                         p:ProgressBarAssist.StrokeThickness="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ctrl:BusyControl}}, Converter={x:Static c:MathConverter.Multiply}, ConverterParameter=0.015}"
                         FontSize="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ctrl:BusyControl}}, Converter={x:Static c:MathConverter.Multiply}, ConverterParameter=0.1}"
                         IsIndeterminate="True" />

            <TextBlock HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       FontSize="{StaticResource MyNet.Font.Size.Caption}"
                       Text="{Binding Message}"
                       Visibility="{Binding Message, Converter={x:Static c:NullToVisibilityConverter.CollapsedIfNull}}" />

            <Button Style="{StaticResource MyNet.Styles.Button.Text}"
                    Height="35"
                    HorizontalAlignment="Center"
                    p:IconAssist.Icon="{me:MediumIcon Kind=Cancel}"
                    Command="{Binding CancelCommand}"
                    Visibility="{Binding IsCancellable, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                <Grid>
                    <ContentControl Content="{me:Resource Cancel}" ContentTemplate="{StaticResource MyNet.DataTemplates.Icon}" Visibility="{Binding IsCancelling, FallbackValue=Collapsed, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfTrue}}" />
                    <ctrl:SimpleStackPanel Orientation="Horizontal" Visibility="{Binding IsCancelling, FallbackValue=Collapsed, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                        <TextBlock Text="Annulation en cours" />
                        <ctrl:LoadingIndicator VerticalAlignment="Center" Foreground="{me:BrushBinding InheritPath=(TextElement.Foreground)}" Mode="ThreeDots">
                            <ctrl:LoadingIndicator.RenderTransform>
                                <ScaleTransform ScaleX="0.7" ScaleY="0.7" />
                            </ctrl:LoadingIndicator.RenderTransform>
                        </ctrl:LoadingIndicator>
                    </ctrl:SimpleStackPanel>
                </Grid>
            </Button>
        </ctrl:SimpleStackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsCancelling}" Value="True">
                <Setter TargetName="ProgressBar" Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Negative}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="MyNet.DataTemplates.DeterminateBusy">
        <ctrl:SimpleStackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Spacing="{StaticResource MyNet.Margin.VeryLarge}">

            <ProgressBar x:Name="ProgressBar"
                         Style="{StaticResource MyNet.Styles.ProgressBar.Circular.Foreground}"
                         Width="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ctrl:BusyControl}}, Converter={x:Static c:MathConverter.Multiply}, ConverterParameter=0.35}"
                         Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ctrl:BusyControl}}, Converter={x:Static c:MathConverter.Multiply}, ConverterParameter=0.35}"
                         Margin="{StaticResource MyNet.Margins.Medium}"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         p:ProgressBarAssist.ShowSecondProgress="{Binding IsCancelling, Converter={x:Static c:NotBooleanConverter.Default}}"
                         p:ProgressBarAssist.ShowValue="True"
                         p:ProgressBarAssist.StrokeThickness="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ctrl:BusyControl}}, Converter={x:Static c:MathConverter.Multiply}, ConverterParameter=0.018}"
                         FontSize="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ctrl:BusyControl}}, Converter={x:Static c:MathConverter.Multiply}, ConverterParameter=0.1}"
                         Maximum="{Binding Maximum}"
                         Minimum="{Binding Minimum}"
                         Value="{Binding Value}" />

            <TextBlock HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       FontSize="{StaticResource MyNet.Font.Size.Caption}"
                       Text="{Binding Message}"
                       Visibility="{Binding Message, Converter={x:Static c:NullToVisibilityConverter.CollapsedIfNull}}" />

            <Button Style="{StaticResource MyNet.Styles.Button.Text}"
                    Height="35"
                    HorizontalAlignment="Center"
                    p:IconAssist.Icon="{me:MediumIcon Kind=Cancel}"
                    Command="{Binding CancelCommand}"
                    Visibility="{Binding IsCancellable, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                <Grid>
                    <ContentControl Content="{me:Resource Cancel}" ContentTemplate="{StaticResource MyNet.DataTemplates.Icon}" Visibility="{Binding IsCancelling, FallbackValue=Collapsed, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfTrue}}" />
                    <ctrl:SimpleStackPanel Orientation="Horizontal" Visibility="{Binding IsCancelling, FallbackValue=Collapsed, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                        <TextBlock Text="Annulation en cours" />
                        <ctrl:LoadingIndicator VerticalAlignment="Center" Foreground="{me:BrushBinding InheritPath=(TextElement.Foreground)}" Mode="ThreeDots">
                            <ctrl:LoadingIndicator.RenderTransform>
                                <ScaleTransform ScaleX="0.7" ScaleY="0.7" />
                            </ctrl:LoadingIndicator.RenderTransform>
                        </ctrl:LoadingIndicator>
                    </ctrl:SimpleStackPanel>
                </Grid>
            </Button>
        </ctrl:SimpleStackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsCancelling}" Value="True">
                <Setter TargetName="ProgressBar" Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Negative}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="MyNet.DataTemplates.ProgressionBusy">
        <ctrl:SimpleStackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Spacing="{StaticResource MyNet.Margin.VeryLarge}">

            <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Title}"
                       Margin="{StaticResource MyNet.Margins.Default.Bottom}"
                       HorizontalAlignment="Center"
                       Opacity="{StaticResource MyNet.Opacity.Default}"
                       Text="{Binding Title}" />

            <ProgressBar x:Name="ProgressBar"
                         Style="{StaticResource MyNet.Styles.ProgressBar.Circular.Foreground}"
                         Width="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ctrl:BusyControl}}, Converter={x:Static c:MathConverter.Multiply}, ConverterParameter=0.35}"
                         Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ctrl:BusyControl}}, Converter={x:Static c:MathConverter.Multiply}, ConverterParameter=0.35}"
                         Margin="{StaticResource MyNet.Margins.Medium}"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         p:ProgressBarAssist.ShowSecondProgress="{Binding IsCancelling, Converter={x:Static c:NotBooleanConverter.Default}}"
                         p:ProgressBarAssist.ShowValue="True"
                         p:ProgressBarAssist.StrokeThickness="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ctrl:BusyControl}}, Converter={x:Static c:MathConverter.Multiply}, ConverterParameter=0.018}"
                         FontSize="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ctrl:BusyControl}}, Converter={x:Static c:MathConverter.Multiply}, ConverterParameter=0.1}"
                         Maximum="1"
                         Minimum="0"
                         Value="{Binding Value}" />
            <ItemsControl Style="{StaticResource MyNet.Styles.ItemsControl}"
                          Grid.Row="4"
                          HorizontalAlignment="Center"
                          ItemsSource="{Binding Messages}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock HorizontalAlignment="Center" FontSize="{StaticResource MyNet.Font.Size.Caption}" Text="{Binding}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <Button Style="{StaticResource MyNet.Styles.Button.Text}"
                    Height="35"
                    HorizontalAlignment="Center"
                    p:IconAssist.Icon="{me:MediumIcon Kind=Cancel}"
                    Command="{Binding CancelCommand}"
                    Visibility="{Binding IsCancellable, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                <Grid>
                    <ContentControl Content="{me:Resource Cancel}" ContentTemplate="{StaticResource MyNet.DataTemplates.Icon}" Visibility="{Binding IsCancelling, FallbackValue=Collapsed, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfTrue}}" />
                    <ctrl:SimpleStackPanel Orientation="Horizontal" Visibility="{Binding IsCancelling, FallbackValue=Collapsed, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                        <TextBlock Text="Annulation en cours" />
                        <ctrl:LoadingIndicator VerticalAlignment="Center" Foreground="{me:BrushBinding InheritPath=(TextElement.Foreground)}" Mode="ThreeDots">
                            <ctrl:LoadingIndicator.RenderTransform>
                                <ScaleTransform ScaleX="0.7" ScaleY="0.7" />
                            </ctrl:LoadingIndicator.RenderTransform>
                        </ctrl:LoadingIndicator>
                    </ctrl:SimpleStackPanel>
                </Grid>
            </Button>
        </ctrl:SimpleStackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsCancelling}" Value="True">
                <Setter TargetName="ProgressBar" Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Negative}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="MyNet.DataTemplates.IndeterminateBusy.Alternate" DataType="{x:Type busy:IndeterminateBusy}">
        <ctrl:SimpleStackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Spacing="{StaticResource MyNet.Margin.VeryLarge}">
            <ctrl:Card Style="{StaticResource MyNet.Styles.Card.Elevation.Primary}"
                       Padding="0"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       UniformCornerRadius="100">
                <ProgressBar x:Name="ProgressBar"
                             Style="{StaticResource MyNet.Styles.ProgressBar.Circular.Foreground}"
                             Width="125"
                             Height="125"
                             Margin="{StaticResource MyNet.Margins.Medium}"
                             p:ProgressBarAssist.ShowSecondProgress="{Binding IsCancelling, Converter={x:Static c:NotBooleanConverter.Default}}"
                             p:ProgressBarAssist.StrokeThickness="12"
                             ClipToBounds="False"
                             FontSize="{StaticResource MyNet.Font.Size.Header}"
                             IsIndeterminate="True" />
            </ctrl:Card>

            <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       FontSize="{Binding FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ctrl:BusyControl}}}"
                       FontStyle="Italic"
                       Text="{Binding Message}"
                       Visibility="{Binding Message, Converter={x:Static c:NullToVisibilityConverter.CollapsedIfNull}}" />

            <Button Style="{StaticResource MyNet.Styles.Button.Text}"
                    Height="35"
                    HorizontalAlignment="Center"
                    p:IconAssist.Icon="{me:MediumIcon Kind=Cancel}"
                    Command="{Binding CancelCommand}"
                    Visibility="{Binding IsCancellable, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                <Grid>
                    <ContentControl HorizontalAlignment="Center"
                                    Content="{me:Resource Cancel}"
                                    ContentTemplate="{StaticResource MyNet.DataTemplates.Icon}"
                                    Visibility="{Binding IsCancelling, FallbackValue=Collapsed, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfTrue}}" />
                    <ctrl:SimpleStackPanel HorizontalAlignment="Center" Orientation="Horizontal" Visibility="{Binding IsCancelling, FallbackValue=Collapsed, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                        <TextBlock Text="Annulation en cours" />
                        <ctrl:LoadingIndicator VerticalAlignment="Center" Foreground="{me:BrushBinding InheritPath=(TextElement.Foreground)}" Mode="ThreeDots">
                            <ctrl:LoadingIndicator.RenderTransform>
                                <ScaleTransform ScaleX="0.7" ScaleY="0.7" />
                            </ctrl:LoadingIndicator.RenderTransform>
                        </ctrl:LoadingIndicator>
                    </ctrl:SimpleStackPanel>
                </Grid>
            </Button>
        </ctrl:SimpleStackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsCancelling}" Value="True">
                <Setter TargetName="ProgressBar" Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Negative}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="MyNet.DataTemplates.DeterminateBusy.Alternate" DataType="{x:Type busy:DeterminateBusy}">
        <ctrl:SimpleStackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Spacing="{StaticResource MyNet.Margin.VeryLarge}">
            <ctrl:Card Style="{StaticResource MyNet.Styles.Card.Elevation.Primary}"
                       Padding="0"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       UniformCornerRadius="100">
                <ProgressBar x:Name="ProgressBar"
                             Style="{StaticResource MyNet.Styles.ProgressBar.Circular.Foreground}"
                             Width="125"
                             Height="125"
                             Margin="{StaticResource MyNet.Margins.Medium}"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             p:ProgressBarAssist.ShowSecondProgress="{Binding IsCancelling, Converter={x:Static c:NotBooleanConverter.Default}}"
                             p:ProgressBarAssist.ShowValue="True"
                             p:ProgressBarAssist.StrokeThickness="12"
                             FontSize="{StaticResource MyNet.Font.Size.Header}"
                             Maximum="{Binding Maximum}"
                             Minimum="{Binding Minimum}"
                             Value="{Binding Value}" />
            </ctrl:Card>
            <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       FontSize="{Binding FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ctrl:BusyControl}}}"
                       FontStyle="Italic"
                       Text="{Binding Message}"
                       Visibility="{Binding Message, Converter={x:Static c:NullToVisibilityConverter.CollapsedIfNull}}" />

            <Button Style="{StaticResource MyNet.Styles.Button.Text}"
                    Height="35"
                    HorizontalAlignment="Center"
                    p:IconAssist.Icon="{me:MediumIcon Kind=Cancel}"
                    Command="{Binding CancelCommand}"
                    Visibility="{Binding IsCancellable, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                <Grid>
                    <ContentControl Content="{me:Resource Cancel}" ContentTemplate="{StaticResource MyNet.DataTemplates.Icon}" Visibility="{Binding IsCancelling, FallbackValue=Collapsed, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfTrue}}" />
                    <ctrl:SimpleStackPanel Orientation="Horizontal" Visibility="{Binding IsCancelling, FallbackValue=Collapsed, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                        <TextBlock Text="Annulation en cours" />
                        <ctrl:LoadingIndicator VerticalAlignment="Center" Foreground="{me:BrushBinding InheritPath=(TextElement.Foreground)}" Mode="ThreeDots">
                            <ctrl:LoadingIndicator.RenderTransform>
                                <ScaleTransform ScaleX="0.7" ScaleY="0.7" />
                            </ctrl:LoadingIndicator.RenderTransform>
                        </ctrl:LoadingIndicator>
                    </ctrl:SimpleStackPanel>
                </Grid>
            </Button>
        </ctrl:SimpleStackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsCancelling}" Value="True">
                <Setter TargetName="ProgressBar" Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Negative}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="MyNet.DataTemplates.ProgressionBusy.Alternate" DataType="{x:Type busy:ProgressionBusy}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="250" />
            </Grid.RowDefinitions>

            <ctrl:SimpleStackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Spacing="{StaticResource MyNet.Margin.VeryLarge}">
                <ctrl:Card Style="{StaticResource MyNet.Styles.Card.Elevation.Primary}"
                           Padding="0"
                           HorizontalAlignment="Center"
                           UniformCornerRadius="100">
                    <Grid>
                        <ProgressBar x:Name="ProgressBar"
                                     Style="{StaticResource MyNet.Styles.ProgressBar.Circular.Foreground}"
                                     Width="125"
                                     Height="125"
                                     Margin="{StaticResource MyNet.Margins.Medium}"
                                     p:ProgressBarAssist.ShowValue="True"
                                     p:ProgressBarAssist.StrokeThickness="12"
                                     FontSize="{StaticResource MyNet.Font.Size.Header}"
                                     Maximum="1"
                                     Minimum="0"
                                     Value="{Binding Value}" />
                    </Grid>
                </ctrl:Card>

                <Button Style="{StaticResource MyNet.Styles.Button.Text.Foreground}"
                        Height="35"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top"
                        p:IconAssist.Icon="{me:MediumIcon Kind=Cancel}"
                        Command="{Binding CancelCommand}"
                        Visibility="{Binding IsCancellable, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                    <Grid>
                        <ContentControl Content="{me:Resource Cancel}" ContentTemplate="{StaticResource MyNet.DataTemplates.Icon}" Visibility="{Binding IsCancelling, FallbackValue=Collapsed, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfTrue}}" />
                        <ctrl:SimpleStackPanel Orientation="Horizontal" Visibility="{Binding IsCancelling, FallbackValue=Collapsed, Converter={x:Static c:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                            <TextBlock Text="Annulation en cours" />
                            <ctrl:LoadingIndicator VerticalAlignment="Center" Foreground="{me:BrushBinding InheritPath=(TextElement.Foreground)}" Mode="ThreeDots">
                                <ctrl:LoadingIndicator.RenderTransform>
                                    <ScaleTransform ScaleX="0.7" ScaleY="0.7" />
                                </ctrl:LoadingIndicator.RenderTransform>
                            </ctrl:LoadingIndicator>
                        </ctrl:SimpleStackPanel>
                    </Grid>
                </Button>
            </ctrl:SimpleStackPanel>

            <ctrl:Card Style="{StaticResource MyNet.Styles.Card.Elevation.Primary}"
                       Grid.Row="1"
                       Padding="0"
                       UniformCornerRadius="0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="20" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="10" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <ProgressBar Style="{StaticResource MyNet.Styles.ProgressBar.Linear.Foreground}"
                                 Height="5"
                                 IsIndeterminate="True"
                                 Visibility="{Binding IsCancelling, Converter={x:Static c:BooleanToVisibilityConverter.HiddenIfTrue}}" />
                    <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Caption}"
                               Grid.Row="2"
                               Margin="{StaticResource MyNet.Margins.Default.Bottom}"
                               HorizontalAlignment="Center"
                               Opacity="{StaticResource MyNet.Opacity.Default}"
                               Text="{Binding Title}" />
                    <ItemsControl Style="{StaticResource MyNet.Styles.ItemsControl}"
                                  Grid.Row="4"
                                  HorizontalAlignment="Center"
                                  ItemsSource="{Binding Messages}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Ghost}" HorizontalAlignment="Center" Text="{Binding}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </ctrl:Card>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsCancelling}" Value="True">
                <Setter TargetName="ProgressBar" Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Negative}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="MyNet.DataTemplates.IndeterminateBusy.Small" DataType="{x:Type busy:IndeterminateBusy}">
        <ProgressBar Style="{StaticResource MyNet.Styles.ProgressBar.Circular.Foreground}"
                     Width="Auto"
                     Height="Auto"
                     HorizontalAlignment="Stretch"
                     VerticalAlignment="Stretch"
                     p:ProgressBarAssist.ShowSecondProgress="True"
                     p:ProgressBarAssist.StrokeThickness="{Binding ActualWidth, RelativeSource={RelativeSource Self}, Converter={x:Static c:MathConverter.Divide}, ConverterParameter=10}"
                     ClipToBounds="False"
                     FontSize="{StaticResource MyNet.Font.Size}"
                     IsIndeterminate="True"
                     ToolTip="{Binding Message}" />
    </DataTemplate>

    <s:BusyTemplateSelector x:Key="MyNet.Selectors.Busy"
                            DeterminateBusyTemplate="{StaticResource MyNet.DataTemplates.DeterminateBusy}"
                            IndeterminateBusyTemplate="{StaticResource MyNet.DataTemplates.IndeterminateBusy}"
                            ProgressionBusyTemplate="{StaticResource MyNet.DataTemplates.ProgressionBusy}" />

    <s:BusyTemplateSelector x:Key="MyNet.Selectors.Busy.Alternate"
                            DeterminateBusyTemplate="{StaticResource MyNet.DataTemplates.DeterminateBusy.Alternate}"
                            IndeterminateBusyTemplate="{StaticResource MyNet.DataTemplates.IndeterminateBusy.Alternate}"
                            ProgressionBusyTemplate="{StaticResource MyNet.DataTemplates.ProgressionBusy.Alternate}" />

    <Style x:Key="MyNet.Styles.BusyControl" TargetType="{x:Type ctrl:BusyControl}">
        <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Overlay}" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="ContentTemplateSelector" Value="{StaticResource MyNet.Selectors.Busy}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FontSize" Value="{StaticResource MyNet.Font.Size.Title}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="IsHitTestVisible" Value="{Binding IsActive, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Opacity" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:BusyControl}">
                    <Grid>
                        <Border HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                ClipToBounds="False" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" ClipToBounds="False" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>
    <Style x:Key="MyNet.Styles.BusyControl.Alternate" TargetType="{x:Type ctrl:BusyControl}" BasedOn="{StaticResource MyNet.Styles.BusyControl}">
        <Setter Property="ContentTemplateSelector" Value="{StaticResource MyNet.Selectors.Busy.Alternate}" />
    </Style>
    <Style x:Key="MyNet.Styles.BusyControl.Small" TargetType="{x:Type ctrl:BusyControl}" BasedOn="{StaticResource MyNet.Styles.BusyControl}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ContentTemplateSelector">
            <Setter.Value>
                <s:BusyTemplateSelector DeterminateBusyTemplate="{StaticResource MyNet.DataTemplates.DeterminateBusy}" IndeterminateBusyTemplate="{StaticResource MyNet.DataTemplates.IndeterminateBusy.Small}" ProgressionBusyTemplate="{StaticResource MyNet.DataTemplates.ProgressionBusy}" />
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="{StaticResource MyNet.Font.Size}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>
</ResourceDictionary>