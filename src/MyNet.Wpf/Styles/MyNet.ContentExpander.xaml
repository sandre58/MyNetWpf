<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ctrl="clr-namespace:MyNet.Wpf.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Bases.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Controls.Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Controls.Expander.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="MyNet.Styles.ToggleButton.Embedded.Expander.Vertical" BasedOn="{StaticResource MyNet.Styles.ToggleButton.Embedded.Expander}" TargetType="{x:Type ToggleButton}">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5" />
        <Setter Property="Margin" Value="{StaticResource MyNet.Margins.Medium}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorType={x:Type ctrl:ContentExpander}}}" Value="Up">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="180" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNet.Styles.ToggleButton.Embedded.Expander.Horizontal" BasedOn="{StaticResource MyNet.Styles.ToggleButton.Embedded.Expander.Vertical}" TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorType={x:Type ctrl:ContentExpander}}}" Value="Left">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorType={x:Type ctrl:ContentExpander}}}" Value="Right">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="-90" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNet.Styles.ToggleButton.Embedded.Expander.Horizontal.Alternate" BasedOn="{StaticResource MyNet.Styles.Button.Rounded.Text}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="30" />
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="{StaticResource MyNet.Margins.Medium}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DataTemplate.Resources>
                        <Storyboard x:Key="OpenStorybard">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandPathRotateTransform" Storyboard.TargetProperty="Angle">
                                <EasingDoubleKeyFrame KeyTime="{StaticResource ExpandKeyTime}" Value="180" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CloseStorybard">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandPathRotateTransform" Storyboard.TargetProperty="Angle">
                                <EasingDoubleKeyFrame KeyTime="{StaticResource CollapseKeyTime}" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </DataTemplate.Resources>
                    <ctrl:PackIcon x:Name="ExpandPath"
                                 Width="24"
                                 Height="24"
                                 Kind="ArrowRight"
                                 RenderTransformOrigin="0.5 0.5">
                        <ctrl:PackIcon.RenderTransform>
                            <RotateTransform x:Name="ExpandPathRotateTransform" />
                        </ctrl:PackIcon.RenderTransform>
                    </ctrl:PackIcon>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard x:Name="BeginOpenStorybard" Storyboard="{StaticResource OpenStorybard}" />
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="BeginOpenStorybard" />
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="False">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard x:Name="BeginCloseStorybard" Storyboard="{StaticResource CloseStorybard}" />
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="BeginCloseStorybard" />
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorType={x:Type ctrl:ContentExpander}}}" Value="Up">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="180" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNet.Styles.ContentExpander" BasedOn="{StaticResource MyNet.Styles.Expander}" TargetType="{x:Type ctrl:ContentExpander}">
        <Setter Property="IsExpanded" Value="True" />
        <Setter Property="DurationAnimation" Value="{StaticResource ExpandKeyTime}" />
        <Setter Property="CollapsedSize" Value="47" />
        <Setter Property="ToggleButtontyle" Value="{StaticResource MyNet.Styles.ToggleButton.Embedded.Expander.Vertical}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:ContentExpander}">

                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">

                        <Grid>

                            <DockPanel>

                                <!--  Header content  -->
                                <ContentPresenter x:Name="HeaderSite"
                                                  Content="{TemplateBinding Header}"
                                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                  DockPanel.Dock="Top" />

                                <Border Name="ContentSite">
                                    <Grid Name="ContentPanel"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <ContentPresenter x:Name="PART_Content"
                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                          Focusable="False" />
                                    </Grid>
                                </Border>

                            </DockPanel>
                            <ToggleButton x:Name="PART_ToggleButton" Style="{TemplateBinding ToggleButtontyle}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Down">
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Top" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyNet.Styles.ContentExpander.Horizontal" BasedOn="{StaticResource MyNet.Styles.ContentExpander}" TargetType="{x:Type ctrl:ContentExpander}">
        <Setter Property="ExpandDirection" Value="Right" />
        <Setter Property="ToggleButtontyle" Value="{StaticResource MyNet.Styles.ToggleButton.Embedded.Expander.Horizontal}" />
    </Style>

    <Style x:Key="MyNet.Styles.ContentExpander.Horizontal.Alternate" BasedOn="{StaticResource MyNet.Styles.ContentExpander.Horizontal}" TargetType="{x:Type ctrl:ContentExpander}">
        <Setter Property="Padding" Value="0 50 0 0" />
        <Setter Property="CollapsedSize" Value="50" />
        <Setter Property="ExpandedSize" Value="250" />
        <Setter Property="Width" Value="250" />
        <Setter Property="ToggleButtontyle" Value="{StaticResource MyNet.Styles.ToggleButton.Embedded.Expander.Horizontal.Alternate}" />
    </Style>

</ResourceDictionary>