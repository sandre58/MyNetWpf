<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:MyNet.Wpf.Converters"
                    xmlns:ctrl="clr-namespace:MyNet.Wpf.Controls"
                    xmlns:me="clr-namespace:MyNet.Wpf.MarkupExtensions"
                    xmlns:p="clr-namespace:MyNet.Wpf.Parameters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Bases.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Controls.TextBlock.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Controls.ItemsControl.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Controls.Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/MyNet.Card.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/MyNet.PackIcon.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/MyNet.GeometryIcon.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="MyNet.DataTemplates.GroupBox.Header">
        <DataTemplate.Resources>
            <Style TargetType="{x:Type ctrl:PackIcon}" BasedOn="{StaticResource MyNet.Styles.PackIcon}">
                <Setter Property="Height" Value="24" />
                <Setter Property="Width" Value="24" />
            </Style>
            <Style TargetType="{x:Type ctrl:GeometryIcon}" BasedOn="{StaticResource MyNet.Styles.GeometryIcon}">
                <Setter Property="Height" Value="24" />
                <Setter Property="Width" Value="24" />
            </Style>
        </DataTemplate.Resources>
        <Grid VerticalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <ContentControl Margin="{Binding Path=(p:IconAssist.Margin), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            Content="{Binding Path=(p:IconAssist.Icon), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}"
                            Opacity="{Binding Path=(p:IconAssist.Opacity), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}"
                            Visibility="{Binding Path=(p:IconAssist.Icon), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}, Converter={x:Static c:NullToVisibilityConverter.CollapsedIfNull}}" />

            <ContentControl x:Name="Header"
                            Grid.Column="1"
                            HorizontalAlignment="Left"
                            Content="{Binding}"
                            Typography.Capitals="{Binding Path=(p:HeaderAssist.Capitals), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(p:GroupBoxAssist.Command), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}, Converter={x:Static c:NullToBooleanConverter.TrueIfNull}}" Value="False">
                <Setter TargetName="Header" Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Button Style="{StaticResource MyNet.Styles.Button.HyperLink}"
                                    Padding="1"
                                    HorizontalAlignment="Left"
                                    BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                    Command="{Binding Path=(p:GroupBoxAssist.Command), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}"
                                    CommandParameter="{Binding Path=(p:GroupBoxAssist.CommandParameter), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}"
                                    Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                    Visibility="{Binding Path=(p:GroupBoxAssist.Command), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}, Converter={x:Static c:NullToVisibilityConverter.CollapsedIfNull}}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Caption}"
                                               Foreground="{Binding Path=(p:HeaderAssist.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}"
                                               Opacity="{StaticResource MyNet.Opacity.Default}"
                                               Text="{Binding}" />
                                    <ctrl:PackIcon VerticalAlignment="Center" Kind="ChevronRight" />
                                </StackPanel>
                            </Button>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="MyNet.Styles.GroupBox.Elevation" TargetType="{x:Type GroupBox}">
        <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Control.Background}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}}" />
        <Setter Property="HeaderTemplate" Value="{StaticResource MyNet.DataTemplates.GroupBox.Header}" />
        <Setter Property="HorizontalAlignment" Value="{StaticResource MyNet.HorizontalAlignment.Container}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="{StaticResource MyNet.Margins.Medium}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <ctrl:Card Style="{Binding Path=(p:CardAssist.Style), RelativeSource={RelativeSource TemplatedParent}}"
                               Padding="0"
                               p:ElevationAssist.Elevation="{Binding Path=(p:ElevationAssist.Elevation), RelativeSource={RelativeSource TemplatedParent}}"
                               Background="{TemplateBinding Background}"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               UniformCornerRadius="{Binding Path=(p:ThemeAssist.UniformCornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col1" Width="*" />
                                <ColumnDefinition x:Name="Col2" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="Row1" Height="{Binding Path=(p:HeaderAssist.Size), RelativeSource={RelativeSource TemplatedParent}}" />
                                <RowDefinition x:Name="Row2" Height="*" />
                            </Grid.RowDefinitions>

                            <!-- Header -->
                            <Border x:Name="Header"
                                    Padding="{Binding Path=(p:HeaderAssist.Padding), RelativeSource={RelativeSource TemplatedParent}}"
                                    Background="{Binding Path=(p:HeaderAssist.Background), RelativeSource={RelativeSource TemplatedParent}}"
                                    CornerRadius="{Binding Path=(p:ThemeAssist.UniformCornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:DoubleToCornerRadiusConverter.Top}}"
                                    DockPanel.Dock="Top">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter HorizontalAlignment="{Binding Path=(p:HeaderAssist.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                                                      VerticalAlignment="{Binding Path=(p:HeaderAssist.VerticalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                                                      ContentSource="Header"
                                                      ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                      Opacity="{Binding Path=(p:HeaderAssist.Opacity), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      TextElement.FontSize="{Binding Path=(p:HeaderAssist.FontSize), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}"
                                                      TextElement.Foreground="{Binding Path=(p:HeaderAssist.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}" />

                                    <ContentControl Grid.Column="1"
                                                    Margin="{StaticResource MyNet.Margins.Large.Left}"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Content="{Binding Path=(p:GroupBoxAssist.MoreContent), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}"
                                                    DockPanel.Dock="Right"
                                                    Foreground="{Binding Path=(p:HeaderAssist.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}"
                                                    Visibility="{Binding Path=(p:GroupBoxAssist.MoreContent), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}, Converter={x:Static c:NullToVisibilityConverter.CollapsedIfNull}}">
                                        <ContentControl.Resources>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MyNet.Styles.Button.Icon.Foreground}">
                                                <Setter Property="Height" Value="22" />
                                                <Setter Property="Width" Value="22" />
                                            </Style>
                                        </ContentControl.Resources>
                                    </ContentControl>
                                </Grid>
                            </Border>

                            <!-- Content -->
                            <ContentPresenter x:Name="Content"
                                              Grid.Row="1"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ctrl:Card>

                    <ControlTemplate.Triggers>
                        <Trigger Property="p:HeaderAssist.Alignment" Value="Left">
                            <Setter TargetName="Col1" Property="Width" Value="{Binding Path=(p:HeaderAssist.Size), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="Col2" Property="Width" Value="*" />
                            <Setter TargetName="Content" Property="Grid.Column" Value="1" />
                            <Setter TargetName="Content" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Header" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Header" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Row1" Property="Height" Value="*" />
                            <Setter TargetName="Row2" Property="Height" Value="Auto" />
                        </Trigger>

                        <Trigger Property="p:HeaderAssist.Alignment" Value="Right">
                            <Setter TargetName="Col1" Property="Width" Value="*" />
                            <Setter TargetName="Col2" Property="Width" Value="{Binding Path=(p:HeaderAssist.Size), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="Content" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Content" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Header" Property="Grid.Column" Value="1" />
                            <Setter TargetName="Header" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Row1" Property="Height" Value="*" />
                            <Setter TargetName="Row2" Property="Height" Value="Auto" />
                        </Trigger>

                        <Trigger Property="p:HeaderAssist.Alignment" Value="Bottom">
                            <Setter TargetName="Col1" Property="Width" Value="*" />
                            <Setter TargetName="Col2" Property="Width" Value="Auto" />
                            <Setter TargetName="Content" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Content" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Header" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Header" Property="Grid.Row" Value="1" />
                            <Setter TargetName="Row1" Property="Height" Value="*" />
                            <Setter TargetName="Row2" Property="Height" Value="{Binding Path=(p:HeaderAssist.Size), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="{StaticResource MyNet.VerticalAlignment.Container}" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="p:CardAssist.Style" Value="{StaticResource MyNet.Styles.Card.Elevation}" />
        <Setter Property="p:ElevationAssist.Elevation" Value="{StaticResource MyNet.Elevation.Container}" />
        <Setter Property="p:HeaderAssist.FontSize" Value="{StaticResource MyNet.Font.Size.Caption}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}}" />
        <Setter Property="p:HeaderAssist.Padding" Value="{StaticResource MyNet.Margins.Default}" />
        <Setter Property="p:IconAssist.Margin" Value="{StaticResource MyNet.Margins.Medium.Right}" />
        <Setter Property="p:ThemeAssist.UniformCornerRadius" Value="{StaticResource MyNet.UniformCornerRadius.Container}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Elevation.Application" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Elevation}">
        <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Application.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Elevation.Primary" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Elevation}">
        <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Primary}" />
        <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.Primary.Foreground}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Primary.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Elevation.Accent" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Elevation}">
        <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Accent}" />
        <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.Accent.Foreground}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Accent.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Elevation.Custom" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Elevation}">
        <Setter Property="Foreground" Value="{me:BrushBinding SelfPath=Background, Contrast=True}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{me:BrushBinding SelfPath=Background, Contrast=True}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Elevation.Foreground" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Elevation.Custom}">
        <Setter Property="Background" Value="{me:BrushBinding InheritPath=(TextElement.Foreground)}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{me:BrushBinding InheritPath=(TextElement.Foreground), Contrast=True}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Elevation.Foreground.SemiTransparent" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Elevation}">
        <Setter Property="Background" Value="{me:BrushBinding InheritPath=(TextElement.Foreground), Opacity={StaticResource MyNet.Opacity.Filled}}" />
    </Style>

    <Style x:Key="MyNet.Styles.GroupBox.Outlined" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Elevation}">
        <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Control.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="p:CardAssist.Style" Value="{StaticResource MyNet.Styles.Card.Outlined}" />
        <Setter Property="p:HeaderAssist.Background" Value="{DynamicResource MyNet.Brushes.Control.Border}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Outlined.Application" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Outlined}">
        <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Application.Background}" />
        <Setter Property="p:HeaderAssist.Background" Value="{DynamicResource MyNet.Brushes.Application.Background}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Outlined.Primary" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Outlined}">
        <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Primary}" />
        <Setter Property="p:HeaderAssist.Background" Value="{DynamicResource MyNet.Brushes.Primary}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Primary.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Outlined.Accent" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Outlined}">
        <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Accent}" />
        <Setter Property="p:HeaderAssist.Background" Value="{DynamicResource MyNet.Brushes.Accent}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Accent.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Outlined.Custom" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Outlined}">
        <Setter Property="p:HeaderAssist.Background" Value="{me:BrushBinding SelfPath=BorderBrush}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{me:BrushBinding SelfPath=Background, Contrast=True}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Outlined.Foreground" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Outlined.Custom}">
        <Setter Property="BorderBrush" Value="{me:BrushBinding InheritPath=(TextElement.Foreground), Contrast=True}" />
    </Style>

    <Style x:Key="MyNet.Styles.GroupBox.Elevation.Header" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Elevation}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(p:ThemeAssist.UniformCornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static c:DoubleToCornerRadiusConverter.All}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col1" Width="*" />
                                <ColumnDefinition x:Name="Col2" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="Row1" Height="{Binding Path=(p:HeaderAssist.Size), RelativeSource={RelativeSource TemplatedParent}}" />
                                <RowDefinition x:Name="Row2" Height="*" />
                            </Grid.RowDefinitions>

                            <!-- Header -->
                            <ctrl:Card x:Name="Header"
                                       Style="{Binding Path=(p:CardAssist.Style), RelativeSource={RelativeSource TemplatedParent}}"
                                       Padding="{Binding Path=(p:HeaderAssist.Padding), RelativeSource={RelativeSource TemplatedParent}}"
                                       p:ElevationAssist.Elevation="{Binding Path=(p:ElevationAssist.Elevation), RelativeSource={RelativeSource TemplatedParent}}"
                                       Background="{Binding Path=(p:HeaderAssist.Background), RelativeSource={RelativeSource TemplatedParent}}"
                                       BorderBrush="{TemplateBinding BorderBrush}"
                                       BorderThickness="{TemplateBinding BorderThickness}"
                                       DockPanel.Dock="Top"
                                       UniformCornerRadius="{Binding Path=(p:ThemeAssist.UniformCornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter HorizontalAlignment="{Binding Path=(p:HeaderAssist.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                                                      VerticalAlignment="{Binding Path=(p:HeaderAssist.VerticalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                                                      ContentSource="Header"
                                                      ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                      Opacity="{Binding Path=(p:HeaderAssist.Opacity), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      TextElement.FontSize="{Binding Path=(p:HeaderAssist.FontSize), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}"
                                                      TextElement.Foreground="{Binding Path=(p:HeaderAssist.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}" />

                                    <ContentControl Grid.Column="1"
                                                    Margin="{StaticResource MyNet.Margins.Large.Left}"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Content="{Binding Path=(p:GroupBoxAssist.MoreContent), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}"
                                                    DockPanel.Dock="Right"
                                                    Foreground="{Binding Path=(p:HeaderAssist.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}"
                                                    Visibility="{Binding Path=(p:GroupBoxAssist.MoreContent), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}, Converter={x:Static c:NullToVisibilityConverter.CollapsedIfNull}}">
                                        <ContentControl.Resources>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MyNet.Styles.Button.Icon.Foreground}">
                                                <Setter Property="Height" Value="22" />
                                                <Setter Property="Width" Value="22" />
                                            </Style>
                                        </ContentControl.Resources>
                                    </ContentControl>
                                </Grid>
                            </ctrl:Card>

                            <!-- Content -->
                            <ContentPresenter x:Name="Content"
                                              Grid.Row="1"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="p:HeaderAssist.Alignment" Value="Left">
                            <Setter TargetName="Col1" Property="Width" Value="{Binding Path=(p:HeaderAssist.Size), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="Col2" Property="Width" Value="*" />
                            <Setter TargetName="Content" Property="Grid.Column" Value="1" />
                            <Setter TargetName="Content" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Header" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Header" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Row1" Property="Height" Value="*" />
                            <Setter TargetName="Row2" Property="Height" Value="Auto" />
                        </Trigger>

                        <Trigger Property="p:HeaderAssist.Alignment" Value="Right">
                            <Setter TargetName="Col1" Property="Width" Value="*" />
                            <Setter TargetName="Col2" Property="Width" Value="{Binding Path=(p:HeaderAssist.Size), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="Content" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Content" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Header" Property="Grid.Column" Value="1" />
                            <Setter TargetName="Header" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Row1" Property="Height" Value="*" />
                            <Setter TargetName="Row2" Property="Height" Value="Auto" />
                        </Trigger>

                        <Trigger Property="p:HeaderAssist.Alignment" Value="Bottom">
                            <Setter TargetName="Col1" Property="Width" Value="*" />
                            <Setter TargetName="Col2" Property="Width" Value="Auto" />
                            <Setter TargetName="Content" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Content" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Header" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Header" Property="Grid.Row" Value="1" />
                            <Setter TargetName="Row1" Property="Height" Value="*" />
                            <Setter TargetName="Row2" Property="Height" Value="{Binding Path=(p:HeaderAssist.Size), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="p:CardAssist.Style" Value="{StaticResource MyNet.Styles.Card.Elevation}" />
        <Setter Property="p:ElevationAssist.Elevation" Value="{StaticResource MyNet.Elevation.Container}" />
        <Setter Property="p:HeaderAssist.Background" Value="{DynamicResource MyNet.Brushes.Control.Background}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}}" />
        <Setter Property="p:ThemeAssist.UniformCornerRadius" Value="{StaticResource MyNet.UniformCornerRadius.Container}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Elevation.Header.Application" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Elevation.Header}">
        <Setter Property="p:HeaderAssist.Background" Value="{DynamicResource MyNet.Brushes.Application.Background}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Elevation.Header.Primary" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Elevation.Header}">
        <Setter Property="p:HeaderAssist.Background" Value="{DynamicResource MyNet.Brushes.Primary}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Primary.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Elevation.Header.Accent" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Elevation.Header}">
        <Setter Property="p:HeaderAssist.Background" Value="{DynamicResource MyNet.Brushes.Accent}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Accent.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Elevation.Header.Custom" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Elevation.Header}">
        <Setter Property="p:HeaderAssist.Foreground" Value="{me:BrushBinding SelfPath=(p:HeaderAssist.Background), Contrast=True}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Elevation.Header.Foreground" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Elevation.Header.Custom}">
        <Setter Property="p:HeaderAssist.Background" Value="{me:BrushBinding InheritPath=(TextElement.Foreground)}" />
    </Style>

    <Style x:Key="MyNet.Styles.GroupBox.Bordered" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Elevation}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Control.Border}" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="Foreground" Value="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col1" Width="*" />
                                <ColumnDefinition x:Name="Col2" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="Row1" Height="{Binding Path=(p:HeaderAssist.Size), RelativeSource={RelativeSource TemplatedParent}}" />
                                <RowDefinition x:Name="Row2" Height="*" />
                            </Grid.RowDefinitions>

                            <!-- Header -->
                            <Border x:Name="Header"
                                    Padding="{Binding Path=(p:HeaderAssist.Padding), RelativeSource={RelativeSource TemplatedParent}}"
                                    Background="{Binding Path=(p:HeaderAssist.Background), RelativeSource={RelativeSource TemplatedParent}}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    DockPanel.Dock="Top">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentControl HorizontalAlignment="{Binding Path=(p:HeaderAssist.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                                                    VerticalAlignment="{Binding Path=(p:HeaderAssist.VerticalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                                                    Content="{TemplateBinding Header}"
                                                    ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                    ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                    FontSize="{Binding Path=(p:HeaderAssist.FontSize), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}"
                                                    Foreground="{Binding Path=(p:HeaderAssist.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}"
                                                    Opacity="{Binding Path=(p:HeaderAssist.Opacity), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                    <ContentControl Grid.Column="1"
                                                    Margin="{StaticResource MyNet.Margins.Large.Left}"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Content="{Binding Path=(p:GroupBoxAssist.MoreContent), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}"
                                                    DockPanel.Dock="Right"
                                                    Foreground="{Binding Path=(p:HeaderAssist.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}"
                                                    Visibility="{Binding Path=(p:GroupBoxAssist.MoreContent), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}, Converter={x:Static c:NullToVisibilityConverter.CollapsedIfNull}}">
                                        <ContentControl.Resources>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MyNet.Styles.Button.Icon.Foreground}">
                                                <Setter Property="Height" Value="22" />
                                                <Setter Property="Width" Value="22" />
                                            </Style>
                                        </ContentControl.Resources>
                                    </ContentControl>
                                </Grid>
                            </Border>

                            <!-- Content -->
                            <ContentPresenter x:Name="Content"
                                              Grid.Row="1"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="p:HeaderAssist.Alignment" Value="Left">
                            <Setter TargetName="Col1" Property="Width" Value="{Binding Path=(p:HeaderAssist.Size), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="Col2" Property="Width" Value="*" />
                            <Setter TargetName="Content" Property="Grid.Column" Value="1" />
                            <Setter TargetName="Content" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Header" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Header" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Row1" Property="Height" Value="*" />
                            <Setter TargetName="Row2" Property="Height" Value="Auto" />
                        </Trigger>

                        <Trigger Property="p:HeaderAssist.Alignment" Value="Right">
                            <Setter TargetName="Col1" Property="Width" Value="*" />
                            <Setter TargetName="Col2" Property="Width" Value="{Binding Path=(p:HeaderAssist.Size), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="Content" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Content" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Header" Property="Grid.Column" Value="1" />
                            <Setter TargetName="Header" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Row1" Property="Height" Value="*" />
                            <Setter TargetName="Row2" Property="Height" Value="Auto" />
                        </Trigger>

                        <Trigger Property="p:HeaderAssist.Alignment" Value="Bottom">
                            <Setter TargetName="Col1" Property="Width" Value="*" />
                            <Setter TargetName="Col2" Property="Width" Value="Auto" />
                            <Setter TargetName="Content" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Content" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Header" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Header" Property="Grid.Row" Value="1" />
                            <Setter TargetName="Row1" Property="Height" Value="*" />
                            <Setter TargetName="Row2" Property="Height" Value="{Binding Path=(p:HeaderAssist.Size), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="p:HeaderAssist.Background" Value="Transparent" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Bordered.Application" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Bordered}">
        <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Application.Background}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Bordered.Primary" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Bordered}">
        <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Primary}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Bordered.Accent" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Bordered}">
        <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Accent}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Bordered.Foreground" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Bordered}">
        <Setter Property="BorderBrush" Value="{me:BrushBinding InheritPath=(TextElement.Foreground)}" />
    </Style>

    <Style x:Key="MyNet.Styles.GroupBox.Clean" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Bordered}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="p:HeaderAssist.Capitals" Value="Normal" />
        <Setter Property="p:HeaderAssist.FontSize" Value="{StaticResource MyNet.Font.Size}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{me:BrushBinding InheritPath=(TextElement.Foreground), Opacity={StaticResource MyNet.Opacity.Secondary}}" />
        <Setter Property="p:HeaderAssist.HorizontalAlignment" Value="Center" />
        <Setter Property="p:HeaderAssist.Padding" Value="{StaticResource MyNet.Margins.Medium.Bottom}" />
    </Style>

    <Style x:Key="MyNet.Styles.GroupBox.Clean.Right" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Clean}">
        <Setter Property="p:HeaderAssist.Alignment" Value="Right" />
        <Setter Property="p:HeaderAssist.HorizontalAlignment" Value="Right" />
        <Setter Property="p:HeaderAssist.Padding" Value="{StaticResource MyNet.Margins.Medium.Left}" />
    </Style>

    <Style x:Key="MyNet.Styles.GroupBox.Clean.Left" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Clean}">
        <Setter Property="p:HeaderAssist.Alignment" Value="Left" />
        <Setter Property="p:HeaderAssist.HorizontalAlignment" Value="Left" />
        <Setter Property="p:HeaderAssist.Padding" Value="{StaticResource MyNet.Margins.Medium.Right}" />
    </Style>

    <Style x:Key="MyNet.Styles.GroupBox.Clean.Bottom" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Clean}">
        <Setter Property="p:HeaderAssist.Alignment" Value="Bottom" />
        <Setter Property="p:HeaderAssist.Padding" Value="{StaticResource MyNet.Margins.Medium.Top}" />
    </Style>

    <Style x:Key="MyNet.Styles.GroupBox.Clean.SubCaption" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Clean}">
        <Setter Property="p:HeaderAssist.Capitals" Value="AllSmallCaps" />
        <Setter Property="p:HeaderAssist.Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
    </Style>

    <Style x:Key="MyNet.Styles.GroupBox.Clean.Caption" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Clean}">
        <Setter Property="p:HeaderAssist.Capitals" Value="AllSmallCaps" />
        <Setter Property="p:HeaderAssist.FontSize" Value="{StaticResource MyNet.Font.Size.Caption}" />
    </Style>

    <Style x:Key="MyNet.Styles.GroupBox.Clean.Caption.Right" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Clean.Caption}">
        <Setter Property="p:HeaderAssist.Alignment" Value="Right" />
        <Setter Property="p:HeaderAssist.HorizontalAlignment" Value="Right" />
        <Setter Property="p:HeaderAssist.Padding" Value="{StaticResource MyNet.Margins.Medium.Left}" />
    </Style>

    <Style x:Key="MyNet.Styles.GroupBox.Clean.Caption.Left" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Clean.Caption}">
        <Setter Property="p:HeaderAssist.Alignment" Value="Left" />
        <Setter Property="p:HeaderAssist.HorizontalAlignment" Value="Left" />
        <Setter Property="p:HeaderAssist.Padding" Value="{StaticResource MyNet.Margins.Medium.Right}" />
    </Style>

    <Style x:Key="MyNet.Styles.GroupBox.Clean.Caption.Bottom" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Clean.Caption}">
        <Setter Property="p:HeaderAssist.Alignment" Value="Bottom" />
        <Setter Property="p:HeaderAssist.Padding" Value="{StaticResource MyNet.Margins.Medium.Top}" />
    </Style>

    <Style x:Key="MyNet.Styles.GroupBox.Clean.Title" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Clean}">
        <Setter Property="p:HeaderAssist.Capitals" Value="AllSmallCaps" />
        <Setter Property="p:HeaderAssist.FontSize" Value="{StaticResource MyNet.Font.Size.Title}" />
    </Style>

    <Style x:Key="MyNet.Styles.GroupBox.Clean.Title.Right" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Clean.Title}">
        <Setter Property="p:HeaderAssist.Alignment" Value="Right" />
        <Setter Property="p:HeaderAssist.HorizontalAlignment" Value="Right" />
        <Setter Property="p:HeaderAssist.Padding" Value="{StaticResource MyNet.Margins.Medium.Left}" />
    </Style>

    <Style x:Key="MyNet.Styles.GroupBox.Clean.Title.Left" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Clean.Title}">
        <Setter Property="p:HeaderAssist.Alignment" Value="Left" />
        <Setter Property="p:HeaderAssist.HorizontalAlignment" Value="Left" />
        <Setter Property="p:HeaderAssist.Padding" Value="{StaticResource MyNet.Margins.Medium.Right}" />
    </Style>

    <Style x:Key="MyNet.Styles.GroupBox.Clean.Title.Bottom" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Clean.Title}">
        <Setter Property="p:HeaderAssist.Alignment" Value="Bottom" />
        <Setter Property="p:HeaderAssist.Padding" Value="{StaticResource MyNet.Margins.Medium.Top}" />
    </Style>

    <Style x:Key="MyNet.Styles.GroupBox.Label" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Elevation}">
        <Setter Property="FontSize" Value="{StaticResource MyNet.Font.Size.Header}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="p:HeaderAssist.Alignment" Value="Bottom" />
        <Setter Property="p:HeaderAssist.FontSize" Value="{StaticResource MyNet.Font.Size}" />
        <Setter Property="p:HeaderAssist.HorizontalAlignment" Value="Center" />
        <Setter Property="p:HeaderAssist.Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
        <Setter Property="p:HeaderAssist.Padding" Value="5 0 5 5" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Label.Application" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Label}">
        <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Application.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Application.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Label.Primary" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Label}">
        <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Primary}" />
        <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.Primary.Foreground}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Primary.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Label.Accent" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Label}">
        <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Accent}" />
        <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.Accent.Foreground}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{DynamicResource MyNet.Brushes.Accent.Foreground}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Label.Custom" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Label}">
        <Setter Property="Foreground" Value="{me:BrushBinding SelfPath=Background, Contrast=True}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{me:BrushBinding SelfPath=Background, Contrast=True}" />
    </Style>
    <Style x:Key="MyNet.Styles.GroupBox.Label.Foreground" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Label.Custom}">
        <Setter Property="Background" Value="{me:BrushBinding InheritPath=(TextElement.Foreground)}" />
        <Setter Property="p:HeaderAssist.Foreground" Value="{me:BrushBinding InheritPath=(TextElement.Foreground), Contrast=True}" />
    </Style>

    <Style x:Key="MyNet.Styles.GroupBox.StringsList" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Clean.Caption}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ctrl:GhostControl ShowGhost="{Binding Count, Converter={x:Static c:CountToBooleanConverter.NotAny}}">
                        <ItemsControl Style="{StaticResource MyNet.Styles.ItemsControl}" ItemsSource="{Binding}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <ctrl:SimpleStackPanel IsItemsHost="True" Spacing="{StaticResource MyNet.Margin.Default}" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <DockPanel>
                                        <ctrl:PackIcon Margin="{StaticResource MyNet.Margins.Default.Right}" DockPanel.Dock="Left" Kind="ChevronRight" />
                                        <TextBlock Text="{Binding}" TextWrapping="Wrap" />
                                    </DockPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ctrl:GhostControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>