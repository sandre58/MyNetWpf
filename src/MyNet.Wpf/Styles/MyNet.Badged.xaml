<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:MyNet.Wpf.Converters"
                    xmlns:ctrl="clr-namespace:MyNet.Wpf.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Styles/Bases.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SineEase x:Key="BadgeEase" EasingMode="EaseOut" />
    <Storyboard x:Key="BadgeChangedStoryboard">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
            <EasingDoubleKeyFrame KeyTime="0" Value="1.4" />
            <EasingDoubleKeyFrame EasingFunction="{StaticResource BadgeEase}" KeyTime="0:0:0.3" Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
            <EasingDoubleKeyFrame KeyTime="0" Value="1.4" />
            <EasingDoubleKeyFrame EasingFunction="{StaticResource BadgeEase}" KeyTime="0:0:0.3" Value="1" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Style x:Key="MyNet.Styles.Badged" TargetType="{x:Type ctrl:Badged}">
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
        <Setter Property="BadgeBackground" Value="{DynamicResource MyNet.Brushes.Primary}" />
        <Setter Property="BadgeForeground" Value="{DynamicResource MyNet.Brushes.Primary.Foreground}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalAlignment" Value="{StaticResource MyNet.HorizontalAlignment.Control}" />
        <Setter Property="VerticalAlignment" Value="{StaticResource MyNet.VerticalAlignment.Control}" />
        <Setter Property="BadgePlacementMode" Value="TopRight" />
        <Setter Property="BadgeChangedStoryboard" Value="{StaticResource BadgeChangedStoryboard}" />
        <Setter Property="BadgeFontSize" Value="{StaticResource MyNet.Font.Size.Secondary}" />
        <Setter Property="BadgeFontWeight" Value="{StaticResource MyNet.Font.Weight.Button}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:Badged}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Border x:Name="PART_BadgeContainer"
                                MinWidth="15"
                                MinHeight="15"
                                Padding="2"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Background="{TemplateBinding BadgeBackground}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Opacity="{TemplateBinding BadgeOpacity}"
                                RenderTransformOrigin=".5,.5"
                                TextElement.FontSize="{TemplateBinding BadgeFontSize}"
                                TextElement.FontWeight="{TemplateBinding BadgeFontWeight}">
                            <Border.Visibility>
                                <MultiBinding Converter="{x:Static c:MultipleBooleanToVisibilityConverter.AndCollapse}">
                                    <Binding Path="IsBadgeSet" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                    <Binding Path="ShowBadge" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                </MultiBinding>
                            </Border.Visibility>
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Border.RenderTransform>
                            <ContentControl Margin="1 0 1 0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Content="{TemplateBinding Badge}"
                                            Focusable="False"
                                            Foreground="{TemplateBinding BadgeForeground}"
                                            IsTabStop="False" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="BadgePlacementMode" Value="TopLeft">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Top" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="Top">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Top" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="TopRight">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Top" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="Right">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Center" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="BottomRight">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Bottom" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="Bottom">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Bottom" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="BottomLeft">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Bottom" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="Left">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Center" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyNet.Styles.Badged.Accent" TargetType="{x:Type ctrl:Badged}">
        <Setter Property="BadgeBackground" Value="{DynamicResource MyNet.Brushes.Accent}" />
        <Setter Property="BadgeForeground" Value="{DynamicResource MyNet.Brushes.Accent.Foreground}" />
    </Style>
</ResourceDictionary>