<UserControl x:Class="MyNet.Wpf.Presentation.Views.List.ExtendedFiltersView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:filtersVm="clr-namespace:MyNet.UI.ViewModels.List.Filtering;assembly=MyNet.UI"
             xmlns:local="clr-namespace:MyNet.Wpf.Presentation.Views.List"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:my="http://mynet.com/xaml/themes"
             d:DataContext="{d:DesignInstance Type=filtersVm:ExtendedFiltersViewModel}"
             d:DesignHeight="450"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <my:SharedResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Themes/MyNet.Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <my:BindingProxy x:Key="ProxyFilters" Data="{Binding}" />
            <my:BindingProxy x:Key="LocalProxy" Data="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedFiltersView}}}" />
        </ResourceDictionary>
    </UserControl.Resources>
    <my:DropDownButton Style="{StaticResource MyNet.Styles.DropDownButton.ToolBar}"
                       Padding="7 4"
                       FontSize="{StaticResource MyNet.Font.Size}"
                       PopupPadding="0"
                       StaysOpen="True"
                       ToolTip="{my:Resource Filter}">
        <my:DropDownButton.ToggleContent>
            <StackPanel Orientation="Horizontal">
                <Button Style="{StaticResource MyNet.Styles.Button.Icon.Tool}"
                        Command="{Binding ClearCommand}"
                        Content="{my:ToolIcon Kind=Close}"
                        ToolTip="{my:Resource Clear}"
                        Visibility="{Binding ActiveCount, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}" />
                <Grid>
                    <my:PackIcon Width="24" Height="24" Kind="Filter" />
                    <Label Style="{StaticResource MyNet.Styles.Label.Rounded.Elevation.Accent}"
                           Width="15"
                           Height="15"
                           Margin="0 -4 -4 0"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Top"
                           Background="{DynamicResource MyNet.Brushes.Information}"
                           Content="{Binding ActiveCount}"
                           Visibility="{Binding ActiveCount, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}" />
                </Grid>
            </StackPanel>
        </my:DropDownButton.ToggleContent>
        <Grid Width="{Binding Data.DropDownWidth, Source={StaticResource LocalProxy}}" Height="{Binding Data.DropDownHeight, Source={StaticResource LocalProxy}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <my:Submenu ItemsSource="{Binding PresetFilters}" Visibility="{Binding PresetFilters.Count, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}">
                <my:Submenu.ItemContainerStyle>
                    <Style BasedOn="{StaticResource MyNet.Styles.MenuItem}" TargetType="{x:Type MenuItem}">
                        <Setter Property="Header" Value="{Binding DisplayName.Value}" />
                        <Setter Property="Command" Value="{Binding Data.ApplyCommand, Source={StaticResource ProxyFilters}}" />
                        <Setter Property="CommandParameter" Value="{Binding Item}" />
                    </Style>
                </my:Submenu.ItemContainerStyle>
            </my:Submenu>

            <Separator Style="{StaticResource MyNet.Styles.Separator.Horizontal}"
                       Grid.Row="1"
                       Margin="{StaticResource MyNet.Margins.Small}"
                       Visibility="{Binding PresetFilters.Count, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}" />

            <Grid Grid.Row="2" Margin="{StaticResource MyNet.Margins.Medium}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <my:InputAssist.InputBindings>
                    <InputBindingCollection>
                        <KeyBinding Modifiers="Ctrl" Key="F" Command="{Binding Data.ApplyCommand, Source={StaticResource ProxyFilters}}" />
                        <KeyBinding Key="F5" Command="{Binding Data.RefreshCommand, Source={StaticResource ProxyFilters}}" />
                        <KeyBinding Modifiers="Ctrl" Key="Delete" Command="{Binding Data.ClearDirtyFiltersCommand, Source={StaticResource ProxyFilters}}" />
                        <KeyBinding Modifiers="Ctrl+Shift" Key="Delete" Command="{Binding Data.ResetCommand, Source={StaticResource ProxyFilters}}" />
                    </InputBindingCollection>
                </my:InputAssist.InputBindings>

                <!--  Auto Filter  -->
                <ToggleButton Style="{StaticResource MyNet.Styles.ToggleButton.Switch}"
                              Grid.Row="0"
                              my:ToggleButtonAssist.OnContent="{my:Resource Automatic}"
                              Content="{my:Resource Manual}"
                              IsChecked="{Binding AutoFilter}" />

                <!--  Tab  -->
                <my:SimpleStackPanel Grid.Row="0"
                                     Margin="{StaticResource MyNet.Margins.Default.Top}"
                                     HorizontalAlignment="Right"
                                     Orientation="Horizontal">
                    <my:SimpleStackPanel.Visibility>
                        <MultiBinding Converter="{x:Static my:MultipleBooleanToVisibilityConverter.AndCollapse}">
                            <Binding Converter="{x:Static my:CountToBooleanConverter.Any}" Path="SpeedFilters.Count" />
                            <Binding Converter="{x:Static my:CountToBooleanConverter.Any}" Path="AdvancedFilters.AllowedFilters.Count" />
                        </MultiBinding>
                    </my:SimpleStackPanel.Visibility>
                    <RadioButton Style="{StaticResource MyNet.Styles.ToggleButton.Icon}" IsChecked="{Binding Data.ShowAdvancedFilters, Source={StaticResource LocalProxy}, Converter={x:Static my:NotBooleanConverter.Default}}" ToolTip="{my:Resource SpeedFilters}">
                        <Grid>
                            <my:PackIcon Width="24" Height="24" Kind="FilterMultiple" />
                            <Label Style="{StaticResource MyNet.Styles.Label.Rounded.Elevation.Accent}"
                                   Width="12"
                                   Height="12"
                                   Margin="0 -1 -1 0"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Top"
                                   Background="{DynamicResource MyNet.Brushes.Information}"
                                   Content="{Binding SpeedFilters.ActiveCount}"
                                   FontSize="{StaticResource MyNet.Font.Size.Secondary}"
                                   Visibility="{Binding SpeedFilters.ActiveCount, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}" />
                        </Grid>
                    </RadioButton>
                    <RadioButton Style="{StaticResource MyNet.Styles.ToggleButton.Icon}" IsChecked="{Binding Data.ShowAdvancedFilters, Source={StaticResource LocalProxy}}" ToolTip="{my:Resource AdvancedFilters}">
                        <Grid>
                            <my:PackIcon Width="24" Height="24" Kind="FilterVariantPlus" />
                            <Label Style="{StaticResource MyNet.Styles.Label.Rounded.Elevation.Accent}"
                                   Width="12"
                                   Height="12"
                                   Margin="0 -1 -1 0"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Top"
                                   Background="{DynamicResource MyNet.Brushes.Information}"
                                   Content="{Binding AdvancedFilters.ActiveCount}"
                                   FontSize="{StaticResource MyNet.Font.Size.Secondary}"
                                   Visibility="{Binding AdvancedFilters.ActiveCount, Converter={x:Static my:CountToVisibilityConverter.CollapsedIfNotAny}}" />
                        </Grid>
                    </RadioButton>
                </my:SimpleStackPanel>

                <!--  Speed Filters  -->
                <my:DynamicScrollViewer Grid.Row="2"
                                        Focusable="False"
                                        HorizontalScrollBarVisibility="Disabled"
                                        Visibility="{Binding Data.ShowAdvancedFilters, Source={StaticResource LocalProxy}, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfTrue}}">
                    <ContentControl Content="{Binding Data.SpeedFilters, Source={StaticResource LocalProxy}}" DataContext="{Binding SpeedFilters}" />
                </my:DynamicScrollViewer>

                <!--  Advanced Filters  -->
                <local:AdvancedFilterView Grid.Row="2" DataContext="{Binding AdvancedFilters}" Visibility="{Binding Data.ShowAdvancedFilters, Source={StaticResource LocalProxy}, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />

                <!--  Buttons  -->
                <DockPanel Grid.Row="4">
                    <my:SimpleStackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                        <Button Style="{StaticResource MyNet.Styles.Button.Text}"
                                my:IconAssist.Icon="{my:Icon Kind=Refresh}"
                                Command="{Binding RefreshCommand}"
                                Content="{my:Resource Refresh}"
                                Visibility="{Binding AutoFilter, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfTrue}}" />
                        <Button Style="{StaticResource MyNet.Styles.Button.Filled.Custom}"
                                my:IconAssist.Icon="{my:Icon Kind=FilterRemove}"
                                Background="{DynamicResource MyNet.Brushes.Negative}"
                                Command="{Binding ClearDirtyFiltersCommand}"
                                Content="{my:Resource Clear}"
                                Visibility="{Binding HasDefaultFilters, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfTrue}}" />
                        <my:SplitButton Style="{StaticResource MyNet.Styles.SplitButton.Filled.Custom}"
                                        my:IconAssist.Icon="{my:Icon Kind=FilterRemove}"
                                        Background="{DynamicResource MyNet.Brushes.Negative}"
                                        Command="{Binding ClearDirtyFiltersCommand}"
                                        PopupPadding="0"
                                        ToggleContent="{my:Resource Clear}"
                                        Visibility="{Binding HasDefaultFilters, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                            <my:Submenu>
                                <MenuItem Command="{Binding ResetCommand}" Header="{my:Resource Reset}" Icon="{my:Icon Kind=Reload}" />
                            </my:Submenu>
                        </my:SplitButton>
                        <Button Style="{StaticResource MyNet.Styles.Button.Filled.Primary}"
                                my:IconAssist.Icon="{my:Icon Kind=Check}"
                                Command="{Binding ApplyCommand}"
                                Content="{my:Resource Apply}"
                                Visibility="{Binding AutoFilter, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfTrue}}" />
                    </my:SimpleStackPanel>
                </DockPanel>
            </Grid>
        </Grid>
    </my:DropDownButton>
</UserControl>
