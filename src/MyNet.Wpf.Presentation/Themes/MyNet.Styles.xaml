<!--
    This code was generated by a tool.
    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
-->
<!--
Source files:
Styles\MyNet.Countries.xaml
Styles\MyNet.Edition.xaml
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:c="clr-namespace:MyNet.Wpf.Presentation.Converters" xmlns:models="clr-namespace:MyNet.Utilities.Geography;assembly=MyNet.Utilities" xmlns:my="http://mynet.com/xaml/themes" xmlns:vm="clr-namespace:MyNet.UI.ViewModels;assembly=MyNet.UI">
  <ResourceDictionary.MergedDictionaries>
    <my:SharedResourceDictionary Source="pack://application:,,,/MyNet.Wpf;component/Themes/MyNet.Styles.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <DataTemplate x:Key="MyNet.DataTemplates.ComboBox.Country">
    <StackPanel Orientation="Horizontal">
      <Image Width="16" Height="16" Margin="{StaticResource MyNet.Margins.Default.Horizontal}" VerticalAlignment="Center" Source="{Binding Value, Converter={x:Static c:CountryToFlagConverter.To16}}" />
      <TextBlock VerticalAlignment="Center" Text="{Binding Display}" TextWrapping="Wrap" />
    </StackPanel>
  </DataTemplate>
  <DataTemplate x:Key="MyNet.DataTemplates.ComboBox.Country.Small">
    <StackPanel Orientation="Horizontal" ToolTip="{Binding Display}">
      <Image Width="16" Height="16" Margin="{StaticResource MyNet.Margins.Default.Horizontal}" VerticalAlignment="Center" Source="{Binding Value, Converter={x:Static c:CountryToFlagConverter.To16}}" />
      <TextBlock VerticalAlignment="Center" Text="{Binding Value, Converter={x:Static c:CountryToStringConverter.ToAlpha3}}" TextWrapping="Wrap" />
    </StackPanel>
  </DataTemplate>
  <Style x:Key="MyNet.Styles.ComboBox.Country" BasedOn="{StaticResource MyNet.Styles.ComboBox}" TargetType="{x:Type ComboBox}">
    <Setter Property="ItemTemplate" Value="{StaticResource MyNet.DataTemplates.ComboBox.Country}" />
    <Setter Property="ItemsSource" Value="{my:EnumerationSource EnumType={x:Type models:Country}, OrderByDisplay=True}" />
    <Setter Property="SelectedValuePath" Value="Value" />
  </Style>
  <Style x:Key="MyNet.Styles.ComboBox.Country.Filled" BasedOn="{StaticResource MyNet.Styles.ComboBox.Filled}" TargetType="{x:Type ComboBox}">
    <Setter Property="ItemTemplate" Value="{StaticResource MyNet.DataTemplates.ComboBox.Country}" />
    <Setter Property="ItemsSource" Value="{my:EnumerationSource EnumType={x:Type models:Country}, OrderByDisplay=True}" />
    <Setter Property="my:ComboBoxAssist.ShowUpDownButton" Value="False" />
    <Setter Property="SelectedValuePath" Value="Value" />
  </Style>
  <Style x:Key="MyNet.Styles.MultiComboBox.Country" BasedOn="{StaticResource MyNet.Styles.MultiComboBox}" TargetType="{x:Type my:MultiComboBox}">
    <Setter Property="SelectedItemTemplate" Value="{StaticResource MyNet.DataTemplates.ComboBox.Country.Small}" />
    <Setter Property="ItemTemplate" Value="{StaticResource MyNet.DataTemplates.ComboBox.Country}" />
    <Setter Property="ItemsSource" Value="{my:EnumerationSource EnumType={x:Type models:Country}, OrderByDisplay=True}" />
    <Setter Property="SelectedValuePath" Value="Value" />
  </Style>
  <Style x:Key="MyNet.Styles.MultiComboBox.Country.Filled" BasedOn="{StaticResource MyNet.Styles.MultiComboBox.Filled}" TargetType="{x:Type my:MultiComboBox}">
    <Setter Property="SelectedItemTemplate" Value="{StaticResource MyNet.DataTemplates.ComboBox.Country.Small}" />
    <Setter Property="ItemTemplate" Value="{StaticResource MyNet.DataTemplates.ComboBox.Country}" />
    <Setter Property="ItemsSource" Value="{my:EnumerationSource EnumType={x:Type models:Country}, OrderByDisplay=True}" />
    <Setter Property="SelectedValuePath" Value="Value" />
  </Style>
  <Style x:Key="MyNet.Styles.TextBox.Edition" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MyNet.Styles.TextBox}">
    <Setter Property="Width" Value="{StaticResource MyNet.Widths.Control.Large}" />
    <Setter Property="my:HintAssist.IsFloating" Value="True" />
  </Style>
  <Style x:Key="MyNet.Styles.RevealPasswordBox.Edition" TargetType="{x:Type my:RevealPasswordBox}" BasedOn="{StaticResource MyNet.Styles.RevealPasswordBox}">
    <Setter Property="Width" Value="{StaticResource MyNet.Widths.Control.Large}" />
    <Setter Property="my:HintAssist.IsFloating" Value="True" />
  </Style>
  <Style x:Key="MyNet.Styles.ComboBox.Edition" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MyNet.Styles.ComboBox}">
    <Setter Property="Width" Value="{StaticResource MyNet.Widths.Control.Large}" />
    <Setter Property="my:HintAssist.IsFloating" Value="True" />
  </Style>
  <Style x:Key="MyNet.Styles.NumericUpDown.Edition" TargetType="{x:Type my:NumericUpDown}" BasedOn="{StaticResource MyNet.Styles.NumericUpDown}">
    <Setter Property="Width" Value="80" />
    <Setter Property="my:HintAssist.IsFloating" Value="True" />
  </Style>
  <Style x:Key="MyNet.Styles.ColorPicker.Edition" TargetType="{x:Type my:ColorPicker}" BasedOn="{StaticResource MyNet.Styles.ColorPicker}">
    <Setter Property="Width" Value="{StaticResource MyNet.Widths.Control.Medium}" />
    <Setter Property="my:HintAssist.IsFloating" Value="True" />
  </Style>
  <Style x:Key="MyNet.Styles.TimePicker.Edition" TargetType="{x:Type my:TimePicker}" BasedOn="{StaticResource MyNet.Styles.TimePicker}">
    <Setter Property="Width" Value="{StaticResource MyNet.Widths.Control.Medium}" />
    <Setter Property="my:HintAssist.IsFloating" Value="True" />
    <Setter Property="my:ValidationAssist.UsePopup" Value="True" />
  </Style>
  <Style x:Key="MyNet.Styles.DatePicker.Edition" TargetType="{x:Type DatePicker}" BasedOn="{StaticResource MyNet.Styles.DatePicker}">
    <Setter Property="Width" Value="{StaticResource MyNet.Widths.Control.Medium}" />
    <Setter Property="my:HintAssist.IsFloating" Value="True" />
    <Setter Property="my:ValidationAssist.UsePopup" Value="True" />
  </Style>
  <Style x:Key="MyNet.Styles.ImagePicker.Edition" TargetType="{x:Type my:ImagePicker}" BasedOn="{StaticResource MyNet.Styles.ImagePicker}">
    <Setter Property="Width" Value="{StaticResource MyNet.Widths.Control.Large}" />
    <Setter Property="my:HintAssist.IsFloating" Value="True" />
    <Setter Property="my:ValidationAssist.UsePopup" Value="True" />
  </Style>
  <Style x:Key="MyNet.Styles.ToggleButton.Edition" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MyNet.Styles.ToggleButton.Switch}" />
  <Style x:Key="MyNet.Styles.GroupBox.Edition" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MyNet.Styles.GroupBox.Clean.Left}">
    <Style.Resources>
      <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MyNet.Styles.TextBox.Edition}" />
      <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MyNet.Styles.ComboBox.Edition}" />
      <Style TargetType="{x:Type my:RevealPasswordBox}" BasedOn="{StaticResource MyNet.Styles.RevealPasswordBox.Edition}" />
      <Style TargetType="{x:Type my:NumericUpDown}" BasedOn="{StaticResource MyNet.Styles.NumericUpDown.Edition}" />
      <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MyNet.Styles.ToggleButton.Edition}" />
      <Style TargetType="{x:Type my:ColorPicker}" BasedOn="{StaticResource MyNet.Styles.ColorPicker.Edition}" />
      <Style TargetType="{x:Type my:TimePicker}" BasedOn="{StaticResource MyNet.Styles.TimePicker.Edition}" />
      <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource MyNet.Styles.DatePicker.Edition}" />
      <Style TargetType="{x:Type my:ImagePicker}" BasedOn="{StaticResource MyNet.Styles.ImagePicker.Edition}" />
    </Style.Resources>
    <Setter Property="my:HeaderAssist.HorizontalAlignment" Value="Center" />
    <Setter Property="my:HeaderAssist.Size" Value="80" />
  </Style>
  <Style x:Key="MyNet.Styles.Button.Validate" x:Shared="False" TargetType="{x:Type Button}" BasedOn="{StaticResource MyNet.Styles.Button.Filled.Primary}">
    <Setter Property="Content" Value="{my:Resource Validate}" />
    <Setter Property="ToolTip" Value="Ctrl+S" />
    <Setter Property="my:IconAssist.Icon" Value="{my:Icon Kind=Check}" />
  </Style>
  <Style x:Key="MyNet.Styles.Button.Cancel" x:Shared="False" TargetType="{x:Type Button}" BasedOn="{StaticResource MyNet.Styles.Button.Outlined}">
    <Setter Property="Content" Value="{my:Resource Cancel}" />
    <Setter Property="ToolTip" Value="Esc" />
    <Setter Property="my:IconAssist.Icon" Value="{my:Icon Kind=Cancel}" />
  </Style>
  <Style x:Key="MyNet.Styles.Button.Remove" x:Shared="False" TargetType="{x:Type Button}" BasedOn="{StaticResource MyNet.Styles.Button.Filled.Custom}">
    <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Negative}" />
    <Setter Property="Content" Value="{my:Resource Remove}" />
    <Setter Property="ToolTip" Value="{my:Resource InputDelete}" />
    <Setter Property="my:IconAssist.Icon" Value="{my:Icon Kind=Trash}" />
  </Style>
  <Style x:Key="MyNet.Styles.Button.Refresh" x:Shared="False" TargetType="{x:Type Button}" BasedOn="{StaticResource MyNet.Styles.Button.Text}">
    <Setter Property="Content" Value="{my:Resource Refresh}" />
    <Setter Property="ToolTip" Value="F5" />
    <Setter Property="my:IconAssist.Icon" Value="{my:Icon Kind=Refresh}" />
  </Style>
  <Style x:Key="MyNet.Styles.Button.Reset" x:Shared="False" TargetType="{x:Type Button}" BasedOn="{StaticResource MyNet.Styles.Button.Text}">
    <Setter Property="Content" Value="{my:Resource Reset}" />
    <Setter Property="ToolTip" Value="F5" />
    <Setter Property="my:IconAssist.Icon" Value="{my:Icon Kind=Restore}" />
  </Style>
  <Style x:Key="MyNet.Styles.Label.Warning.Dialog" TargetType="{x:Type Label}" BasedOn="{StaticResource MyNet.Styles.Label.Elevation.Custom}">
    <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Warning}" />
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <DockPanel>
            <my:PackIcon Width="25" Height="25" Margin="{StaticResource MyNet.Margins.Medium.Right}" VerticalAlignment="Center" DockPanel.Dock="Left" Kind="WarningCircle" />
            <TextBlock Text="{Binding}" TextWrapping="Wrap" />
          </DockPanel>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="{StaticResource MyNet.Margins.Medium}" />
    <Setter Property="my:ThemeAssist.UniformCornerRadius" Value="0" />
  </Style>
  <my:PackIcon x:Key="MyNet.PackIcon.ItemTraking" Width="20" Height="20" my:ToolTipAssist.PlacementMode="BottomAndAlignCentres" x:Shared="False" Focusable="False" Kind="InformationCircle" Visibility="{Binding Mode, Converter={x:Static my:EnumToVisibilityConverter.CollapsedIfNotAny}, ConverterParameter={x:Static vm:ScreenMode.Edition}}">
    <my:ToolTipAssist.Content>
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="*" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
          <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Text="{my:Resource CreatedBy}" />
          <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Principal}" Grid.Column="1" Margin="{StaticResource MyNet.Margins.Default.Horizontal}" Text="{Binding CreatedBy}" />
          <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Grid.Row="1" Text="{my:Resource CreatedAt}" />
          <my:SimpleStackPanel Grid.Row="1" Grid.Column="1" Margin="{StaticResource MyNet.Margins.Default.Horizontal}" Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Default}">
            <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Principal}" Text="{my:DisplayDateTime CreatedAt, Kind=Current, Format=d}" />
            <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Margin="0" Padding="0" Text="{my:Resource To}" />
            <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Principal}" Text="{my:DisplayDateTime CreatedAt, Kind=Current, Format=t}" />
          </my:SimpleStackPanel>
          <Separator Grid.Row="2" Grid.ColumnSpan="2" Margin="{StaticResource MyNet.Margins.Default.Vertical}" />
          <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Grid.Row="3" Text="{my:Resource ModifiedBy}" Visibility="{Binding ModifiedAt, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}" />
          <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Principal}" Grid.Row="3" Grid.Column="1" Margin="{StaticResource MyNet.Margins.Default.Horizontal}" Text="{Binding ModifiedBy}" Visibility="{Binding ModifiedAt, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}" />
          <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Grid.Row="4" Text="{my:Resource ModifiedAt}" Visibility="{Binding ModifiedAt, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}" />
          <my:SimpleStackPanel Grid.Row="4" Grid.Column="1" Margin="{StaticResource MyNet.Margins.Default.Horizontal}" Orientation="Horizontal" Spacing="{StaticResource MyNet.Margin.Default}" Visibility="{Binding ModifiedAt, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNull}}">
            <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Principal}" Text="{my:DisplayDateTime ModifiedAt, Kind=Current, Format=d}" />
            <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Margin="0" Padding="0" Text="{my:Resource To}" />
            <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Principal}" Text="{my:DisplayDateTime ModifiedAt, Kind=Current, Format=t}" />
          </my:SimpleStackPanel>
          <TextBlock Style="{StaticResource MyNet.Styles.TextBlock.Secondary}" Grid.Row="5" Grid.ColumnSpan="2" HorizontalAlignment="Center" FontStyle="Italic" Text="{my:Resource NoModifications}" Visibility="{Binding ModifiedAt, Converter={x:Static my:NullToVisibilityConverter.CollapsedIfNotNull}}" />
        </Grid>
      </Grid>
    </my:ToolTipAssist.Content>
  </my:PackIcon>
</ResourceDictionary>