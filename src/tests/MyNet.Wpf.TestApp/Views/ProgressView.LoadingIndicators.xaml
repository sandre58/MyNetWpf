<my:NavigationPage x:Class="MyNet.Wpf.TestApp.Views.ProgressLoadingIndicatorsView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:busy="clr-namespace:MyNet.UI.Busy.Models;assembly=MyNet.UI"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:my="http://mynet.com/xaml/themes"
                   xmlns:p="clr-namespace:MyNet.Wpf.TestApp.Parameters"
                   xmlns:smtx="clr-namespace:ShowMeTheXAML;assembly=ShowMeTheXAML"
                   xmlns:viewmodels="clr-namespace:MyNet.Wpf.TestApp.ViewModels"
                   d:DataContext="{d:DesignInstance Type=viewmodels:ProgressLoadingIndicatorsViewModel}"
                   d:DesignHeight="450"
                   d:DesignWidth="800"
                   my:ViewModelAssist.AutoWire="True"
                   mc:Ignorable="d">
    <Grid my:BusyAssist.AssociatedControl="{Binding ElementName=Expander1}" my:BusyAssist.AttachService="{Binding BusyService}" my:BusyAssist.Style="{StaticResource MyNet.Styles.BusyControl}">
        <Grid my:BusyAssist.AssociatedControl="{Binding ElementName=Expander1}" my:BusyAssist.AttachService="{Binding BusyService2}" my:BusyAssist.Style="{StaticResource MyNet.Styles.BusyControl.Alternate.Accent}">
            <my:DynamicScrollViewer Padding="{StaticResource MyNet.Margins.Large}">
                <my:SimpleStackPanel p:EnabledAssist.CanBeDisabled="True">

                    <Expander x:Name="Expander1" Style="{StaticResource MyTestApp.Styles.Expander}" Header="MyNet.Styles.LoadingIndicator">
                        <DockPanel>
                            <GroupBox Width="300"
                                      Margin="{StaticResource MyNet.Margins.Medium}"
                                      my:IconAssist.Icon="{my:Icon Kind=Settings}"
                                      DockPanel.Dock="Right"
                                      Header="{my:Resource Options}">
                                <my:SimpleStackPanel>
                                    <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Clean.Left}" Header="Scale">
                                        <Slider x:Name="Scale"
                                                HorizontalAlignment="Stretch"
                                                Background="{StaticResource MyNet.Brushes.Control.Border}"
                                                Maximum="2"
                                                Minimum="0.1"
                                                SmallChange="0.1"
                                                Value="1" />
                                    </GroupBox>
                                </my:SimpleStackPanel>

                            </GroupBox>

                            <UniformGrid Height="1000" Columns="3">
                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_0_0">
                                    <my:LoadingIndicator VerticalAlignment="Stretch" Mode="{x:Static my:LoadingIndicatorMode.Arcs}" ToolTip="{x:Static my:LoadingIndicatorMode.Arcs}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>
                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_0_1">
                                    <my:LoadingIndicator Style="{StaticResource MyNet.Styles.LoadingIndicator.Accent}"
                                                         VerticalAlignment="Stretch"
                                                         Mode="{x:Static my:LoadingIndicatorMode.Arcs}"
                                                         ToolTip="{x:Static my:LoadingIndicatorMode.Arcs}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>
                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_0_2">
                                    <my:LoadingIndicator Style="{StaticResource MyNet.Styles.LoadingIndicator.Foreground}"
                                                         VerticalAlignment="Stretch"
                                                         Mode="{x:Static my:LoadingIndicatorMode.Arcs}"
                                                         ToolTip="{x:Static my:LoadingIndicatorMode.Arcs}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>

                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_1_0">
                                    <my:LoadingIndicator VerticalAlignment="Stretch" Mode="{x:Static my:LoadingIndicatorMode.ArcsRing}" ToolTip="{x:Static my:LoadingIndicatorMode.ArcsRing}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>
                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_1_1">
                                    <my:LoadingIndicator Style="{StaticResource MyNet.Styles.LoadingIndicator.Accent}"
                                                         VerticalAlignment="Stretch"
                                                         Mode="{x:Static my:LoadingIndicatorMode.ArcsRing}"
                                                         ToolTip="{x:Static my:LoadingIndicatorMode.ArcsRing}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>
                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_1_2">
                                    <my:LoadingIndicator Style="{StaticResource MyNet.Styles.LoadingIndicator.Foreground}"
                                                         VerticalAlignment="Stretch"
                                                         Mode="{x:Static my:LoadingIndicatorMode.ArcsRing}"
                                                         ToolTip="{x:Static my:LoadingIndicatorMode.ArcsRing}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>

                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_2_0">
                                    <my:LoadingIndicator VerticalAlignment="Stretch" Mode="{x:Static my:LoadingIndicatorMode.DoubleBounce}" ToolTip="{x:Static my:LoadingIndicatorMode.DoubleBounce}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>
                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_2_1">
                                    <my:LoadingIndicator Style="{StaticResource MyNet.Styles.LoadingIndicator.Accent}"
                                                         VerticalAlignment="Stretch"
                                                         Mode="{x:Static my:LoadingIndicatorMode.DoubleBounce}"
                                                         ToolTip="{x:Static my:LoadingIndicatorMode.DoubleBounce}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>
                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_2_2">
                                    <my:LoadingIndicator Style="{StaticResource MyNet.Styles.LoadingIndicator.Foreground}"
                                                         VerticalAlignment="Stretch"
                                                         Mode="{x:Static my:LoadingIndicatorMode.DoubleBounce}"
                                                         ToolTip="{x:Static my:LoadingIndicatorMode.DoubleBounce}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>

                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_3_0">
                                    <my:LoadingIndicator VerticalAlignment="Stretch" Mode="{x:Static my:LoadingIndicatorMode.FlipPlane}" ToolTip="{x:Static my:LoadingIndicatorMode.FlipPlane}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>
                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_3_1">
                                    <my:LoadingIndicator Style="{StaticResource MyNet.Styles.LoadingIndicator.Accent}"
                                                         VerticalAlignment="Stretch"
                                                         Mode="{x:Static my:LoadingIndicatorMode.FlipPlane}"
                                                         ToolTip="{x:Static my:LoadingIndicatorMode.FlipPlane}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>
                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_3_2">
                                    <my:LoadingIndicator Style="{StaticResource MyNet.Styles.LoadingIndicator.Foreground}"
                                                         VerticalAlignment="Stretch"
                                                         Mode="{x:Static my:LoadingIndicatorMode.FlipPlane}"
                                                         ToolTip="{x:Static my:LoadingIndicatorMode.FlipPlane}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>

                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_4_0">
                                    <my:LoadingIndicator VerticalAlignment="Stretch" Mode="{x:Static my:LoadingIndicatorMode.Pulse}" ToolTip="{x:Static my:LoadingIndicatorMode.Pulse}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>
                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_4_1">
                                    <my:LoadingIndicator Style="{StaticResource MyNet.Styles.LoadingIndicator.Accent}"
                                                         VerticalAlignment="Stretch"
                                                         Mode="{x:Static my:LoadingIndicatorMode.Pulse}"
                                                         ToolTip="{x:Static my:LoadingIndicatorMode.Pulse}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>
                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_4_2">
                                    <my:LoadingIndicator Style="{StaticResource MyNet.Styles.LoadingIndicator.Foreground}"
                                                         VerticalAlignment="Stretch"
                                                         Mode="{x:Static my:LoadingIndicatorMode.Pulse}"
                                                         ToolTip="{x:Static my:LoadingIndicatorMode.Pulse}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>

                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_5_0">
                                    <my:LoadingIndicator VerticalAlignment="Stretch" Mode="{x:Static my:LoadingIndicatorMode.Ring}" ToolTip="{x:Static my:LoadingIndicatorMode.Ring}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>
                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_5_1">
                                    <my:LoadingIndicator Style="{StaticResource MyNet.Styles.LoadingIndicator.Accent}"
                                                         VerticalAlignment="Stretch"
                                                         Mode="{x:Static my:LoadingIndicatorMode.Ring}"
                                                         ToolTip="{x:Static my:LoadingIndicatorMode.Ring}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>
                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_5_2">
                                    <my:LoadingIndicator Style="{StaticResource MyNet.Styles.LoadingIndicator.Foreground}"
                                                         VerticalAlignment="Stretch"
                                                         Mode="{x:Static my:LoadingIndicatorMode.Ring}"
                                                         ToolTip="{x:Static my:LoadingIndicatorMode.Ring}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>

                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_6_0">
                                    <my:LoadingIndicator VerticalAlignment="Stretch" Mode="{x:Static my:LoadingIndicatorMode.ThreeDots}" ToolTip="{x:Static my:LoadingIndicatorMode.ThreeDots}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>
                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_6_1">
                                    <my:LoadingIndicator Style="{StaticResource MyNet.Styles.LoadingIndicator.Accent}"
                                                         VerticalAlignment="Stretch"
                                                         Mode="{x:Static my:LoadingIndicatorMode.ThreeDots}"
                                                         ToolTip="{x:Static my:LoadingIndicatorMode.ThreeDots}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>
                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_6_2">
                                    <my:LoadingIndicator Style="{StaticResource MyNet.Styles.LoadingIndicator.Foreground}"
                                                         VerticalAlignment="Stretch"
                                                         Mode="{x:Static my:LoadingIndicatorMode.ThreeDots}"
                                                         ToolTip="{x:Static my:LoadingIndicatorMode.ThreeDots}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>

                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_7_0">
                                    <my:LoadingIndicator VerticalAlignment="Stretch" Mode="{x:Static my:LoadingIndicatorMode.Wave}" ToolTip="{x:Static my:LoadingIndicatorMode.Wave}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>
                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_7_1">
                                    <my:LoadingIndicator Style="{StaticResource MyNet.Styles.LoadingIndicator.Accent}"
                                                         VerticalAlignment="Stretch"
                                                         Mode="{x:Static my:LoadingIndicatorMode.Wave}"
                                                         ToolTip="{x:Static my:LoadingIndicatorMode.Wave}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>
                                <smtx:XamlDisplay HorizontalAlignment="Stretch" VerticalAlignment="Center" UniqueKey="li_7_2">
                                    <my:LoadingIndicator Style="{StaticResource MyNet.Styles.LoadingIndicator.Foreground}"
                                                         VerticalAlignment="Stretch"
                                                         Mode="{x:Static my:LoadingIndicatorMode.Wave}"
                                                         ToolTip="{x:Static my:LoadingIndicatorMode.Wave}">
                                        <my:LoadingIndicator.RenderTransform>
                                            <ScaleTransform ScaleX="{Binding ElementName=Scale, Path=Value}" ScaleY="{Binding ElementName=Scale, Path=Value}" />
                                        </my:LoadingIndicator.RenderTransform>
                                    </my:LoadingIndicator>
                                </smtx:XamlDisplay>
                            </UniformGrid>
                        </DockPanel>
                    </Expander>

                    <Expander Style="{StaticResource MyTestApp.Styles.Expander}" Header="MyNet.Styles.BusyControl">
                        <DockPanel>
                            <GroupBox Width="300"
                                      Margin="{StaticResource MyNet.Margins.Medium}"
                                      my:IconAssist.Icon="{my:Icon Kind=Settings}"
                                      DockPanel.Dock="Right"
                                      Header="{my:Resource Options}">
                                <my:SimpleStackPanel>
                                    <my:NumericUpDown HorizontalAlignment="Stretch"
                                                      my:HintAssist.Hint="steps number"
                                                      my:HintAssist.IsFloating="True"
                                                      Maximum="10"
                                                      Minimum="1"
                                                      Value="{Binding CountStep, UpdateSourceTrigger=PropertyChanged}" />
                                    <GroupBox Style="{StaticResource MyNet.Styles.GroupBox.Clean.Left}" Header="Duration step (in ms)">
                                        <Slider HorizontalAlignment="Stretch"
                                                Background="{StaticResource MyNet.Brushes.Control.Border}"
                                                Maximum="20000"
                                                Minimum="10"
                                                SmallChange="500"
                                                Value="{Binding DurationStep, UpdateSourceTrigger=PropertyChanged}" />
                                    </GroupBox>
                                </my:SimpleStackPanel>

                            </GroupBox>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="300" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="300" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Button Style="{StaticResource MyNet.Styles.Button.Elevation.Primary}"
                                        Grid.Column="0"
                                        Margin="{StaticResource MyNet.Margins.Default}"
                                        HorizontalAlignment="Stretch"
                                        my:IconAssist.Icon="{my:Icon Kind=Play}"
                                        Command="{Binding WaitIndeterminateCommand}"
                                        CommandParameter="{Binding BusyService}"
                                        Content="WAIT" />

                                <Button Style="{StaticResource MyNet.Styles.Button.Elevation.Primary}"
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Margin="{StaticResource MyNet.Margins.Default}"
                                        HorizontalAlignment="Stretch"
                                        my:IconAssist.Icon="{my:Icon Kind=Play}"
                                        Command="{Binding WaitDeterminateCommand}"
                                        CommandParameter="{Binding BusyService}"
                                        Content="WAIT DETERMINATE" />

                                <Button Style="{StaticResource MyNet.Styles.Button.Elevation.Primary}"
                                        Grid.Row="2"
                                        Grid.Column="0"
                                        Margin="{StaticResource MyNet.Margins.Default}"
                                        HorizontalAlignment="Stretch"
                                        my:IconAssist.Icon="{my:Icon Kind=Play}"
                                        Command="{Binding WaitProgressionCommand}"
                                        CommandParameter="{Binding BusyService}"
                                        Content="WAIT PROGRESSION" />

                                <DockPanel Grid.Row="3" Margin="{StaticResource MyNet.Margins.Default}">
                                    <Border Margin="{StaticResource MyNet.Margins.Default.Left}"
                                            Padding="5"
                                            BorderBrush="{DynamicResource MyNet.Brushes.Control.Border}"
                                            BorderThickness="1"
                                            DockPanel.Dock="Right">
                                        <Grid Width="50"
                                              Height="50"
                                              my:BusyAssist.AttachService="{Binding SmallBusyService}"
                                              my:BusyAssist.Style="{StaticResource MyNet.Styles.BusyControl.Small}" />
                                    </Border>
                                    <Button Style="{StaticResource MyNet.Styles.Button.Elevation.Primary}"
                                            HorizontalAlignment="Stretch"
                                            my:IconAssist.Icon="{my:Icon Kind=Play}"
                                            Command="{Binding WaitIndeterminateCommand}"
                                            CommandParameter="{Binding SmallBusyService}"
                                            Content="WAIT" />
                                </DockPanel>

                                <DockPanel Grid.Row="4" Grid.Column="0" Margin="{StaticResource MyNet.Margins.Default}">
                                    <Border Margin="{StaticResource MyNet.Margins.Default.Left}"
                                            Padding="5"
                                            BorderBrush="{DynamicResource MyNet.Brushes.Control.Border}"
                                            BorderThickness="1"
                                            DockPanel.Dock="Right">
                                        <my:BusyControl Style="{StaticResource MyNet.Styles.BusyControl.Small.Foreground}"
                                                        Width="50"
                                                        Height="50"
                                                        IsActive="{Binding IsChecked, ElementName=IsActive1}">
                                            <busy:IndeterminateBusy />
                                        </my:BusyControl>
                                    </Border>
                                    <CheckBox x:Name="IsActive1" Content="Is Active" />
                                </DockPanel>

                                <Button Style="{StaticResource MyNet.Styles.Button.Elevation.Accent}"
                                        Grid.Column="2"
                                        Margin="{StaticResource MyNet.Margins.Default}"
                                        HorizontalAlignment="Stretch"
                                        my:IconAssist.Icon="{my:Icon Kind=Play}"
                                        Command="{Binding WaitIndeterminateCommand}"
                                        CommandParameter="{Binding BusyService2}"
                                        Content="WAIT 2" />

                                <Button Style="{StaticResource MyNet.Styles.Button.Elevation.Accent}"
                                        Grid.Row="1"
                                        Grid.Column="2"
                                        Margin="{StaticResource MyNet.Margins.Default}"
                                        HorizontalAlignment="Stretch"
                                        my:IconAssist.Icon="{my:Icon Kind=Play}"
                                        Command="{Binding WaitDeterminateCommand}"
                                        CommandParameter="{Binding BusyService2}"
                                        Content="WAIT DETERMINATE 2" />

                                <Button Style="{StaticResource MyNet.Styles.Button.Elevation.Accent}"
                                        Grid.Row="2"
                                        Grid.Column="2"
                                        Margin="{StaticResource MyNet.Margins.Default}"
                                        HorizontalAlignment="Stretch"
                                        my:IconAssist.Icon="{my:Icon Kind=Play}"
                                        Command="{Binding WaitProgressionCommand}"
                                        CommandParameter="{Binding BusyService2}"
                                        Content="WAIT PROGRESSION 2" />
                            </Grid>
                        </DockPanel>
                    </Expander>
                </my:SimpleStackPanel>
            </my:DynamicScrollViewer>
        </Grid>
    </Grid>
</my:NavigationPage>
