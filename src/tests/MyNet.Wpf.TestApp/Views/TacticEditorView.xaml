<my:NavigationPage x:Class="MyNet.Wpf.TestApp.Views.TacticEditorView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:dd="urn:gong-wpf-dragdrop"
                   xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:my="http://mynet.com/xaml/themes"
                   xmlns:tacticeditor="clr-namespace:MyNet.Wpf.TestApp.TacticEditor"
                   xmlns:viewmodels="clr-namespace:MyNet.Wpf.TestApp.ViewModels"
                   xmlns:views="clr-namespace:MyNet.Wpf.TestApp.Views"
                   Title="{my:Resource Tactic}"
                   d:DataContext="{d:DesignInstance Type=viewmodels:TacticEditorViewModel}"
                   d:DesignHeight="450"
                   d:DesignWidth="800"
                   my:ViewModelAssist.AutoWire="True"
                   mc:Ignorable="d">
    <my:NavigationPage.Resources>

        <Style x:Key="MyNet.Styles.PositionItem.Position" TargetType="{x:Type tacticeditor:PositionItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource MyNet.Styles.FocusVisualStyle.Rectangle.Margin}" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="ClipToBounds" Value="False" />
            <Setter Property="Background" Value="{DynamicResource MyNet.Brushes.Primary}" />
            <Setter Property="Foreground" Value="{DynamicResource MyNet.Brushes.Primary.Foreground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brushes.Accent}" />
            <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Medium}" />
            <Setter Property="my:RippleAssist.IsCentered" Value="True" />
            <Setter Property="my:RippleAssist.ClipToBounds" Value="False" />
            <Setter Property="my:RippleAssist.RippleSizeMultiplier" Value="0.4" />
            <Setter Property="my:RippleAssist.Feedback" Value="{my:BrushBinding SelfPath=Background}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type tacticeditor:PositionItem}">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <my:Ripple Padding="{TemplateBinding Padding}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Content="{TemplateBinding Content}"
                                       ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                       Focusable="False"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding CanSelect, RelativeSource={RelativeSource AncestorType={x:Type tacticeditor:TacticEditor}}}" Value="True" />
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding CanSelect, RelativeSource={RelativeSource AncestorType={x:Type tacticeditor:TacticEditor}}}" Value="True" />
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Default}" />
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding CanSelect, RelativeSource={RelativeSource AncestorType={x:Type tacticeditor:TacticEditor}}}" Value="False">
                    <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Default}" />
                    <Setter Property="my:RippleAssist.IsDisabled" Value="True" />
                </DataTrigger>
                <DataTrigger Binding="{Binding CanMove, RelativeSource={RelativeSource AncestorType={x:Type tacticeditor:TacticEditor}}}" Value="True">
                    <Setter Property="Cursor" Value="SizeAll" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MyNet.Styles.TacticEditor" TargetType="{x:Type tacticeditor:TacticEditor}">
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="pack://application:,,,/MyNet.Wpf.TestApp;component/Images/ground_3D.png"
                                RenderOptions.BitmapScalingMode="NearestNeighbor"
                                RenderOptions.EdgeMode="Aliased"
                                Stretch="Fill" />
                </Setter.Value>
            </Setter>
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource MyNet.Styles.PositionItem.Position}" />
            <Setter Property="FontSize" Value="{StaticResource MyNet.Font.Size}" />
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid ToolTip="{my:Translation Position}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <my:PackIcon Grid.Row="0"
                                         Width="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type tacticeditor:PositionItem}}, ConverterParameter=0.8}"
                                         Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type tacticeditor:PositionItem}}, Converter={x:Static my:MathConverter.Multiply}, ConverterParameter=0.8}"
                                         HorizontalAlignment="Center"
                                         Foreground="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type tacticeditor:PositionItem}}}"
                                         Kind="TshirtCrew" />
                            <Label x:Name="label"
                                   Style="{StaticResource MyNet.Styles.Label.Elevation.Custom}"
                                   Grid.Row="2"
                                   Width="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type tacticeditor:PositionItem}}, Converter={x:Static my:MathConverter.Multiply}, ConverterParameter=0.6}"
                                   MinWidth="40"
                                   Margin="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={x:Static my:DoubleThicknessToConverter.Top}}"
                                   Padding="0 2"
                                   HorizontalAlignment="Center"
                                   my:ThemeAssist.UniformCornerRadius="8"
                                   Background="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type tacticeditor:PositionItem}}}"
                                   Content="{my:Translation Position,
                                                            Abbreviate=True}"
                                   FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type tacticeditor:PositionItem}}}"
                                   Foreground="{my:BrushBinding BorderBrush,
                                                                Contrast=True,
                                                                RelativeSource={RelativeSource AncestorType={x:Type tacticeditor:PositionItem}}}"
                                   Tag="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type tacticeditor:PositionItem}}, Converter={x:Static my:MathConverter.Multiply}, ConverterParameter=-0.15}" />
                            <!--<TextBlock Grid.RowSpan="2"
                                       HorizontalAlignment="Center"
                                       FontSize="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type tacticeditor:PositionItem}}, Converter={x:Static my:MathConverter.Multiply}, ConverterParameter=0.2}"
                                       Text="{Binding Number}" />-->
                        </Grid>

                        <DataTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding CanSelect, RelativeSource={RelativeSource AncestorType={x:Type tacticeditor:TacticEditor}}}" Value="True" />
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type tacticeditor:PositionItem}}}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="label" Property="my:ElevationAssist.Elevation" Value="Dp4" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding CanSelect, RelativeSource={RelativeSource AncestorType={x:Type tacticeditor:TacticEditor}}}" Value="True" />
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type tacticeditor:PositionItem}}}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="label" Property="my:ElevationAssist.Elevation" Value="Dp6" />
                            </MultiDataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <tacticeditor:PositionsCanvas IsItemsHost="True" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type tacticeditor:TacticEditor}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" />
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="{DynamicResource MyNet.Opacity.Disabled}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </my:NavigationPage.Resources>

    <DockPanel>
        <GroupBox Width="300"
                  Margin="{StaticResource MyNet.Margins.Medium}"
                  my:IconAssist.Icon="{my:Icon Kind=Settings}"
                  DockPanel.Dock="Right"
                  Header="{my:Resource Options}" />

        <UniformGrid Columns="2" Rows="2">
            <tacticeditor:TacticEditor Style="{StaticResource MyNet.Styles.TacticEditor}" ItemsSource="{Binding TacticPositions}" SelectionMode="Multiple">
                <i:Interaction.Behaviors>
                    <my:ListBoxSelectionBehavior SelectedItems="{Binding TacticPositionsReadOnly}" />
                </i:Interaction.Behaviors>
            </tacticeditor:TacticEditor>

            <tacticeditor:TacticEditor Style="{StaticResource MyNet.Styles.TacticEditor}"
                                       CanMove="False"
                                       CanSelect="False"
                                       ItemsSource="{Binding TacticPositionsReadOnly}" />

            <tacticeditor:TacticEditor Style="{StaticResource MyNet.Styles.TacticEditor}"
                                       CanMove="False"
                                       ItemsSource="{Binding PlayerPositions}"
                                       SelectionMode="Multiple">
                <i:Interaction.Behaviors>
                    <my:ListBoxSelectionBehavior SelectedItems="{Binding PlayerPositionsReadOnly}" />
                </i:Interaction.Behaviors>
            </tacticeditor:TacticEditor>
            
            <tacticeditor:TacticEditor Style="{StaticResource MyNet.Styles.TacticEditor}"
                                       CanMove="False"
                                       CanSelect="False"
                                       ItemsSource="{Binding PlayerPositionsReadOnly}" />
        </UniformGrid>

    </DockPanel>
</my:NavigationPage>
